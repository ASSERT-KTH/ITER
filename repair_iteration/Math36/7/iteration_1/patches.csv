bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.UNKNOWN);  [CE]  cannot  find  symbol  UNKNOWN  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.UNKNOWN);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.UNKNOWN);	      MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	6	None	replace
2	[BUG]  [BUGGY]  MathUtils.checkNotNull(n,  LocalizedFormats.UNKNOWN);  [CE]  cannot  find  symbol  n  [FE]                AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(n,  LocalizedFormats.UNKNOWN);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(n,  LocalizedFormats.UNKNOWN);	      MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    	non-compiled	[CE]  cannot  find  symbol  n	6	None	replace
3	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.UNDEFINED);  [CE]  cannot  find  symbol  UNDEFINED  [FE]                  AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.UNDEFINED);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.UNDEFINED);	      MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    	non-compiled	[CE]  cannot  find  symbol  UNDEFINED	6	None	replace
4	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO);	      MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	4	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	      MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	4	2	replace
6	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	      MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	4	2	replace
7	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.MIN_VALUE);  [CE]  cannot  find  symbol  MIN_VALUE  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.MIN_VALUE);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  BigInteger.MIN_VALUE);	      MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	4	None	replace
8	[BUG]  [BUGGY]  MathUtils.checkArgument(den.equals(num));  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkArgument(den.equals(num));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(den.equals(num));	  MathUtils.checkArgument(num.equals(den));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
9	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  numerator));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkArgument(num.equals(den,  numerator));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  numerator));	  MathUtils.checkArgument(num.equals(den));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	9	None	replace
10	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  denominator));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkArgument(num.equals(den,  denominator));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  denominator));	  MathUtils.checkArgument(num.equals(den));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	9	None	replace
11	[BUG]  [BUGGY]  MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
12	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
13	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  BigInteger.ZERO);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkDigits(num,  BigInteger.ZERO);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  BigInteger.ZERO);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
14	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  numerator);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  numerator);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  numerator);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	1	2	add
16	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	1	2	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	1	2	add
18	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	1	2	add
19	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);	  	non-compiled	[CE]  cannot  find  symbol  DECEMBER	1	None	add
20	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
21	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	1	None	add
22	[BUG]  [BUGGY]  MathUtils.checkState(den.equals(num));  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkState(den.equals(num));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(den.equals(num));	  MathUtils.checkState(num.equals(den));    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
23	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  numerator));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkState(num.equals(den,  numerator));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  numerator));	  MathUtils.checkState(num.equals(den));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	8	None	replace
24	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  num));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkState(num.equals(den,  num));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  num));	  MathUtils.checkState(num.equals(den));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	8	None	replace
25	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den);	      BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger)	10	None	replace
26	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  numerator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  numerator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  numerator);	      BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger)	10	None	replace
27	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  des);  [CE]  cannot  find  symbol  des  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  des);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  des);	      BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  cannot  find  symbol  des	10	None	replace
28	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER);	      MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	5	None	replace
29	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DEFINE);  [CE]  cannot  find  symbol  DEFINE  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DEFINE);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DEFINE);	      MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DEFINE	5	None	replace
30	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DEFAULT);  [CE]  cannot  find  symbol  DEFAULT  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DEFAULT);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DEFAULT);	  MathUtils.checkNotNull(num,    LocalizedFormats.DEFAULT);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	17	None	replace
31	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  [CE]  cannot  find  symbol  NUMBER  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);	  MathUtils.checkNotNull(num);    	non-compiled	[CE]  cannot  find  symbol  NUMBER	15	None	replace
32	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.ONE;  [CE]  variable  denominator  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  BigInteger.ONE;  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.ONE;	      BigInteger    denominator    =    BigInteger.ZERO;    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	11	None	replace
33	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO_DECEMBER;  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO_DECEMBER;  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.ZERO_DECEMBER;	      BigInteger    denominator    =    BigInteger.ZERO;    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	11	None	replace
34	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.MIN_VALUE;  [CE]  cannot  find  symbol  MIN_VALUE  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  BigInteger.MIN_VALUE;  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.MIN_VALUE;	      BigInteger    denominator    =    BigInteger.ZERO;    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	11	None	replace
35	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NONE);  [CE]  cannot  find  symbol  NONE  [FE]                AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NONE);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NONE);	      MathUtils.checkNotNull(num,    LocalizedFormats.NONE);    	non-compiled	[CE]  cannot  find  symbol  NONE	7	None	replace
36	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NONE_DECEMBER);  [CE]  cannot  find  symbol  NONE_DECEMBER  [FE]                  AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NONE_DECEMBER);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NONE_DECEMBER);	      MathUtils.checkNotNull(num,    LocalizedFormats.NONE);    	non-compiled	[CE]  cannot  find  symbol  NONE_DECEMBER	7	None	replace
37	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NONE_NUMERATOR);  [CE]  cannot  find  symbol  NONE_NUMERATOR  [FE]                    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NONE_NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NONE_NUMERATOR);	      MathUtils.checkNotNull(num,    LocalizedFormats.NONE);    	non-compiled	[CE]  cannot  find  symbol  NONE_NUMERATOR	7	None	replace
38	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  denominator);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  denominator);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  denominator);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
39	[BUG]  [BUGGY]  MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
40	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  numerator);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  numerator);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  numerator);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
41	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ZERO);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ZERO);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  BigInteger.ZERO);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
42	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.MAX_VALUE;  [CE]  cannot  find  symbol  MAX_VALUE  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  BigInteger.MAX_VALUE;  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.MAX_VALUE;	      BigInteger    denominator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	12	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);	  	compilable	  [FE]  AssertionError  	14	2	add
44	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);	  	compilable	  [FE]  AssertionError  	14	2	add
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	14	2	add
46	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	14	2	add
47	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.valueOf(num);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.valueOf(num);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);    BigInteger  denominator  =  BigInteger.valueOf(num);	  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	14	None	add
48	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  MatrixUtils.checkNotNull(num);  [CE]  cannot  find  symbol  MatrixUtils  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num);  MatrixUtils.checkNotNull(num);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);    MatrixUtils.checkNotNull(num);	  	non-compiled	[CE]  cannot  find  symbol  MatrixUtils	14	None	add
49	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  BigInteger  num  =  BigInteger.valueOf(den);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num);  BigInteger  num  =  BigInteger.valueOf(den);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);    BigInteger  num  =  BigInteger.valueOf(den);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	14	None	add
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	3	2	add
51	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	3	2	add
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	3	2	add
53	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	3	2	add
54	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
55	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	3	None	add
56	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  [CE]  cannot  find  symbol  NUMBER  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);	  	non-compiled	[CE]  cannot  find  symbol  NUMBER	3	None	add
57	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(1);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(1);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(1);	      BigInteger    denominator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	12	None	replace
58	[BUG]  [BUGGY]  BigInteger  denominator  =  num.valueOf(0);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  num.valueOf(0);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  num.valueOf(0);	      BigInteger    denominator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	12	None	replace
59	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
60	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ZERO));  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ZERO));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.ZERO));	  MathUtils.checkState(num.equals(den));    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
61	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den)));  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den)));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.valueOf(den)));	  MathUtils.checkState(num.equals(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	8	None	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	3	2	add
63	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	3	2	add
64	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  den);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkDigits(num,  den);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  den);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
65	[BUG]  [BUGGY]  BigInteger  denominator  =  num;  [CE]  variable  denominator  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  num;  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  num;	      BigInteger    denominator    =    BigInteger.ZERO;    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	11	None	replace
66	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO  +  1;  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.ZERO  +  1;	      BigInteger    denominator    =    BigInteger.ZERO;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	11	None	replace
67	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  den);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkAndFix(num,  den);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  den);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
68	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  denominator);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkAndFix(num,  denominator);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  denominator);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
69	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO));	  MathUtils.checkArgument(num.equals(den));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	9	None	replace
70	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ZERO));  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ZERO));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(BigInteger.ZERO));	  MathUtils.checkArgument(num.equals(den));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
71	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.valueOf(den);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.valueOf(den);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);    BigInteger  denominator  =  BigInteger.valueOf(den);	  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	14	None	add
72	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  [CE]  variable  denominator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);    BigInteger  denominator  =  BigInteger.ZERO;	  	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	14	None	add
73	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1);	      MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	4	None	replace
74	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NONE_HUNDRED);  [CE]  cannot  find  symbol  NONE_HUNDRED  [FE]                AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NONE_HUNDRED);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NONE_HUNDRED);	      MathUtils.checkNotNull(num,    LocalizedFormats.NONE);    	non-compiled	[CE]  cannot  find  symbol  NONE_HUNDRED	7	None	replace
75	[BUG]  [BUGGY]  BigInteger  denominator  =  num.getDenominator();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  BigInteger  denominator  =  num.getDenominator();  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  num.getDenominator();	      BigInteger    denominator    =    BigInteger.ZERO;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
76	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  [CE]  cannot  find  symbol  DONE  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DONE);	  	non-compiled	[CE]  cannot  find  symbol  DONE	1	None	add
77	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DELPROP);  [CE]  cannot  find  symbol  DELPROP  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DELPROP);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DELPROP);	  	non-compiled	[CE]  cannot  find  symbol  DELPROP	1	None	add
78	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  BigInteger.ZERO));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkState(num.equals(den,  BigInteger.ZERO));  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  BigInteger.ZERO));	  MathUtils.checkState(num.equals(den));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	8	None	replace
79	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den),  den);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkArgument(num.equals(den),  den);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den),  den);	  MathUtils.checkArgument(num.equals(den));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
80	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MatrixUtils  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatrixUtils	3	None	add
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	3	2	add
82	[BUG]  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	3	2	add
83	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  [CE]  cannot  find  symbol  NULL  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  [BUGGY]    if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NULL);	  	non-compiled	[CE]  cannot  find  symbol  NULL	14	None	add
84	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_FIRST);  [CE]  cannot  find  symbol  DECEMBER_FIRST  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_FIRST);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_FIRST);	      MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER_FIRST	5	None	replace
