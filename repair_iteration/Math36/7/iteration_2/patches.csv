bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator);  BigInteger  denominator  =  BigInteger.valueOf(num);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  numerator);  BigInteger  denominator  =  BigInteger.valueOf(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  numerator);  BigInteger  denominator  =  BigInteger.valueOf(num);	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	47	None	replace
2	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  den);  BigInteger  denominator  =  BigInteger.valueOf(num);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  den);  BigInteger  denominator  =  BigInteger.valueOf(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  den);  BigInteger  denominator  =  BigInteger.valueOf(num);	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	47	None	replace
3	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.UNDEFINED);  [CE]  cannot  find  symbol  UNDEFINED  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.UNDEFINED);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.UNDEFINED);	  MathUtils.checkNotNull(num,    LocalizedFormats.UNDEFINED);    	non-compiled	[CE]  cannot  find  symbol  UNDEFINED	3	None	replace
4	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.UNDEFINATOR);  [CE]  cannot  find  symbol  UNDEFINATOR  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.UNDEFINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.UNDEFINATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.UNDEFINED);    	non-compiled	[CE]  cannot  find  symbol  UNDEFINATOR	3	None	replace
5	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  gcd);	  BigInteger    denominator    =    BigInteger.valueOf(num,    des);    	non-compiled	[CE]  cannot  find  symbol  gcd	27	None	replace
6	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator;  [CE]  variable  numerator  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  numerator;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  numerator;	  BigInteger    denominator    =    BigInteger.ONE;    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	32	None	replace
7	[BUG]  [BUGGY]  BigInteger  denominator  =  num.one;  [CE]  cannot  find  symbol  one  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  num.one;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  num.one;	  BigInteger    denominator    =    BigInteger.ONE;    	non-compiled	[CE]  cannot  find  symbol  one	32	None	replace
8	[BUG]  [BUGGY]  ||  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  ||  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	||  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
9	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	19	None	replace
10	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	19	None	replace
11	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den),  den);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.valueOf(den),  den);	  MathUtils.checkState(num.equals(BigInteger.valueOf(den)));    	non-compiled	[CE]  ')'  expected	61	None	replace
12	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den),  gcd));  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den),  gcd));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.valueOf(den),  gcd));	  MathUtils.checkState(num.equals(BigInteger.valueOf(den)));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	61	None	replace
13	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den,  0)));  [CE]  no  suitable  method  found  for  valueOf(BigInteger,int)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den,  0)));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.valueOf(den,  0)));	  MathUtils.checkState(num.equals(BigInteger.valueOf(den)));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,int)	61	None	replace
14	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(gcd)));  [CE]  cannot  find  symbol  gcd  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(gcd)));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.valueOf(gcd)));	  MathUtils.checkState(num.equals(BigInteger.valueOf(den)));    	non-compiled	[CE]  cannot  find  symbol  gcd	61	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	5	2	add
16	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	5	2	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	5	2	add
18	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	5	2	add
19	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
20	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  n  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  n	5	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);	  	compilable	  [FE]  AssertionError  	5	2	add
22	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);	  	compilable	  [FE]  AssertionError  	5	2	add
23	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  denominator,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  denominator,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  denominator,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
24	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  numerator,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  numerator,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  numerator,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
25	[BUG]  [BUGGY]  MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR,  numerator);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR,  numerator);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	52	2	add
27	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	52	2	add
28	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  n  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  n	52	None	add
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	52	2	add
30	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	52	2	add
31	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	52	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	52	2	add
33	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	52	2	add
34	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotEmpty(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
35	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(den,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotEmpty(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
36	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den,  gcd);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  cannot  find  symbol  gcd	25	None	replace
37	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  numerator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den,  numerator);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,BigInteger)	25	None	replace
38	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  gcd,  den);  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  gcd,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  gcd,  den);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  cannot  find  symbol  gcd	25	None	replace
39	[BUG]  [BUGGY]  MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR,  denominator);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR,  denominator);	  MathUtils.checkAndFix(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
40	[BUG]  [BUGGY]  MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR,  num);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR,  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(den,  LocalizedFormats.DENOMINATOR,  num);	  MathUtils.checkAndFix(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
41	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  numerator);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  numerator);	  MathUtils.checkAndFix(num,    den);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
42	[BUG]  [BUGGY]  MathUtils.checkAndFix(den,  num);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(den,  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(den,  num);	  MathUtils.checkAndFix(num,    den);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
43	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  den,  numerator);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  den,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  den,  numerator);	  MathUtils.checkAndFix(num,    den);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	50	2	add
45	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	50	2	add
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	50	2	add
47	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	50	2	add
48	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
49	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	50	None	add
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	50	2	add
51	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	50	2	add
52	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.UNKNOWN);  [CE]  cannot  find  symbol  UNKNOWN  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.UNKNOWN);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.UNKNOWN);	  MathUtils.checkNotNull(den,    LocalizedFormats.UNKNOWN);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	1	None	replace
53	[BUG]  [BUGGY]  MathUtils.checkArgument(den.equals(num,  BigInteger.ZERO));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(den.equals(num,  BigInteger.ZERO));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(den.equals(num,  BigInteger.ZERO));	  MathUtils.checkArgument(den.equals(num));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	8	None	replace
54	[BUG]  [BUGGY]  MathUtils.checkArgument(den.equals(num,  denominator));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(den.equals(num,  denominator));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(den.equals(num,  denominator));	  MathUtils.checkArgument(den.equals(num));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	8	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	63	3	replace
56	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	63	3	replace
57	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENO  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENO  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENO	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  ')'  expected	63	None	replace
58	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  [CE]  cannot  find  symbol  NULL  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NULL);	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NULL);    	non-compiled	[CE]  cannot  find  symbol  NULL	83	None	replace
59	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NULL);  [CE]  cannot  find  symbol  NULL  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NULL);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NULL);	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NULL);    	non-compiled	[CE]  cannot  find  symbol  NULL	83	None	replace
60	[BUG]  [BUGGY]  null  =  LocalizedFormats.NULL;  [CE]  unexpected  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  null  =  LocalizedFormats.NULL;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	null  =  LocalizedFormats.NULL;	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NULL);    	non-compiled	[CE]  unexpected  type	83	None	replace
61	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  BigInteger.ZERO,  numerator));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  BigInteger.ZERO,  numerator));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  BigInteger.ZERO,  numerator));	  MathUtils.checkState(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger,BigInteger)	78	None	replace
62	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(num,  BigInteger.ZERO));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(num,  BigInteger.ZERO));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(num,  BigInteger.ZERO));	  MathUtils.checkState(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	78	None	replace
63	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  BigInteger.ZERO),  numerator);  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  BigInteger.ZERO),  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  BigInteger.ZERO),  numerator);	  MathUtils.checkState(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	78	None	replace
64	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  BigInteger.ZERO,  denominator));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  BigInteger.ZERO,  denominator));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  BigInteger.ZERO,  denominator));	  MathUtils.checkState(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger,BigInteger)	78	None	replace
65	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  BigInteger.ZERO,  numerator);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  BigInteger.ZERO,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  BigInteger.ZERO,  numerator);	  MathUtils.checkDigits(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
66	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  BigInteger.ONE);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  BigInteger.ONE);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  BigInteger.ONE);	  MathUtils.checkDigits(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
67	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  BigInteger.ZERO,  denominator);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  BigInteger.ZERO,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  BigInteger.ZERO,  denominator);	  MathUtils.checkDigits(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
68	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  BigInteger.ZERO,  den);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  BigInteger.ZERO,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  BigInteger.ZERO,  den);	  MathUtils.checkDigits(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
69	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  numerator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO,  numerator);	  MathUtils.checkNotNull(num,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	4	None	replace
70	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator);	  MathUtils.checkNotNull(num,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	4	None	replace
71	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  BigInteger.ZERO);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  numerator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  numerator,  BigInteger.ZERO);	  MathUtils.checkNotNull(num,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	4	None	replace
72	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  BigInteger.ONE);	  MathUtils.checkNotNull(num,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	4	None	replace
73	[BUG]  [BUGGY]  ||  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  ||  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	||  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
74	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ZERO,  den));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ZERO,  den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(BigInteger.ZERO,  den));	  MathUtils.checkArgument(num.equals(BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	70	None	replace
75	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ZERO,  numerator));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ZERO,  numerator));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(BigInteger.ZERO,  numerator));	  MathUtils.checkArgument(num.equals(BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	70	None	replace
76	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ONE));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ONE));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(BigInteger.ONE));	  MathUtils.checkArgument(num.equals(BigInteger.ZERO));    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
77	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  [CE]  cannot  find  symbol  DONE  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DONE);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DONE);    	non-compiled	[CE]  cannot  find  symbol  DONE	76	None	replace
78	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DONE);  [CE]  cannot  find  symbol  DONE  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DONE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DONE);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DONE);    	non-compiled	[CE]  cannot  find  symbol  DONE	76	None	replace
79	[BUG]  [BUGGY]  MathUtils.checkDigits(den,  num);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(den,  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(den,  num);	  MathUtils.checkDigits(num,    den);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
80	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  numerator);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  numerator);	  MathUtils.checkDigits(num,    den);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
81	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  den,  numerator);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  den,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  den,  numerator);	  MathUtils.checkDigits(num,    den);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
82	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  gcd,  den);  [CE]  cannot  find  symbol  gcd  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  gcd,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  gcd,  den);	  MathUtils.checkDigits(num,    den);    	non-compiled	[CE]  cannot  find  symbol  gcd	64	None	replace
83	[BUG]  [BUGGY]  MathUtils.checkState(den.equals(num,  BigInteger.ZERO));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(den.equals(num,  BigInteger.ZERO));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(den.equals(num,  BigInteger.ZERO));	  MathUtils.checkState(den.equals(num));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	22	None	replace
84	[BUG]  [BUGGY]  MathUtils.checkState(den.equals(num,  den));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(den.equals(num,  den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(den.equals(num,  den));	  MathUtils.checkState(den.equals(num));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	22	None	replace
85	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator  +  1);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator  +  1);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	73	None	replace
86	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator  +  1);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator  +  1);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	73	None	replace
87	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO_HUNDRED;  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO_HUNDRED;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.ZERO_HUNDRED;	  BigInteger    denominator    =    BigInteger.ZERO_DECEMBER;    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	33	None	replace
88	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DELPROP);  [CE]  cannot  find  symbol  DELPROP  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DELPROP);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DELPROP);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DELPROP);    	non-compiled	[CE]  cannot  find  symbol  DELPROP	77	None	replace
89	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DELPROP);  [CE]  cannot  find  symbol  DELPROP  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DELPROP);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DELPROP);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DELPROP);    	non-compiled	[CE]  cannot  find  symbol  DELPROP	77	None	replace
90	[BUG]  [BUGGY]  ||  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  ||  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	||  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
91	[BUG]  [BUGGY]  MathUtils.checkArgument(den.equals(num),  den);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(den.equals(num),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(den.equals(num),  den);	  MathUtils.checkArgument(num.equals(den),    den);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
92	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den),  numerator);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den),  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den),  numerator);	  MathUtils.checkArgument(num.equals(den),    den);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
93	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den),  denominator);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den),  denominator);	  MathUtils.checkArgument(num.equals(den),    den);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
94	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den),  den.doubleValue());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den),  den.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den),  den.doubleValue());	  MathUtils.checkArgument(num.equals(den),    den);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
95	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.DEFAULT);  [CE]  cannot  find  symbol  DEFAULT  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.DEFAULT);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.DEFAULT);	  MathUtils.checkNotNull(den,    LocalizedFormats.DEFAULT);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	30	None	replace
96	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DEFULT);  [CE]  cannot  find  symbol  DEFULT  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DEFULT);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DEFULT);	  MathUtils.checkNotNull(den,    LocalizedFormats.DEFAULT);    	non-compiled	[CE]  cannot  find  symbol  DEFULT	30	None	replace
97	[BUG]  [BUGGY]  null  =  LocalizedFormats.NUMERATOR;  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [CE]  unexpected  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  null  =  LocalizedFormats.NUMERATOR;  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	null  =  LocalizedFormats.NUMERATOR;  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotEmpty(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  unexpected  type	54	None	replace
98	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  gcd));  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  gcd));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  gcd));	  MathUtils.checkState(num.equals(den,    num));    	non-compiled	[CE]  cannot  find  symbol  gcd	24	None	replace
99	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  den));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  den));	  MathUtils.checkState(num.equals(den,    num));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	24	None	replace
100	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  gcd),  num);  [CE]  cannot  find  symbol  gcd  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  gcd),  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  gcd),  num);	  MathUtils.checkState(num.equals(den,    num));    	non-compiled	[CE]  cannot  find  symbol  gcd	24	None	replace
101	[BUG]  [BUGGY]  ||  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  ||  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	||  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
102	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  ExceptionInInitializerError  	46	27	replace
103	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  ExceptionInInitializerError  	46	27	replace
104	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  ExceptionInInitializerError  	46	27	replace
105	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  ExceptionInInitializerError  	46	27	replace
106	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  ExceptionInInitializerError  	46	27	replace
107	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  ExceptionInInitializerError  	46	27	replace
108	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  denominator,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  denominator,  gcd);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  denominator,  gcd);	  MathUtils.checkAndFix(num,    denominator);    	non-compiled	[CE]  cannot  find  symbol  gcd	68	None	replace
109	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  denominator,  numerator);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  denominator,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  denominator,  numerator);	  MathUtils.checkAndFix(num,    denominator);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
110	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  denominator,  den);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  denominator,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  denominator,  den);	  MathUtils.checkAndFix(num,    denominator);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
111	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  numerator,  denominator);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  numerator,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  numerator,  denominator);	  MathUtils.checkAndFix(num,    denominator);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	62	2	add
113	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	62	2	add
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	62	2	add
115	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	62	2	add
116	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	62	None	add
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	62	2	add
118	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	62	2	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	62	2	add
120	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	62	2	add
121	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  numerator,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  numerator,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  numerator,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
122	[BUG]  [BUGGY]  MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR,  numerator);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR,  numerator);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
123	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  denominator,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  denominator,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  denominator,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
124	[BUG]  [BUGGY]  MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR,  num);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR,  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR,  num);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
125	[BUG]  [BUGGY]  MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR,  denominator);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(den,  LocalizedFormats.DENOMINATOR,  denominator);	  MathUtils.checkDigits(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
126	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  denominator));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  denominator));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  denominator));	  MathUtils.checkState(num.equals(den,    numerator));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	23	None	replace
127	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  deserator));  [CE]  cannot  find  symbol  deserator  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  deserator));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  deserator));	  MathUtils.checkState(num.equals(den,    numerator));    	non-compiled	[CE]  cannot  find  symbol  deserator	23	None	replace
128	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  gcd),  numerator);  [CE]  cannot  find  symbol  gcd  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  gcd),  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  gcd),  numerator);	  MathUtils.checkState(num.equals(den,    numerator));    	non-compiled	[CE]  cannot  find  symbol  gcd	23	None	replace
129	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NONE_HUNDRED);  [CE]  cannot  find  symbol  NONE_HUNDRED  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NONE_HUNDRED);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NONE_HUNDRED);	  MathUtils.checkNotNull(num,    LocalizedFormats.NONE_HUNDRED);    	non-compiled	[CE]  cannot  find  symbol  NONE_HUNDRED	74	None	replace
130	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NONE_QUARATOR);  [CE]  cannot  find  symbol  NONE_QUARATOR  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NONE_QUARATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NONE_QUARATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.NONE_HUNDRED);    	non-compiled	[CE]  cannot  find  symbol  NONE_QUARATOR	74	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	17	2	add
132	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	17	2	add
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	17	2	add
134	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	17	2	add
135	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  n  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  n	17	None	add
136	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	17	None	add
137	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  DECEMBER  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  DECEMBER	17	None	add
138	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  den);  BigInteger  denominator  =  BigInteger.valueOf(den);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  den);  BigInteger  denominator  =  BigInteger.valueOf(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  den);  BigInteger  denominator  =  BigInteger.valueOf(den);	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	71	None	replace
139	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator);  BigInteger  denominator  =  BigInteger.valueOf(den);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  numerator);  BigInteger  denominator  =  BigInteger.valueOf(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  numerator);  BigInteger  denominator  =  BigInteger.valueOf(den);	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	71	None	replace
140	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ZERO,  den));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ZERO,  den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.ZERO,  den));	  MathUtils.checkState(num.equals(BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	60	None	replace
141	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ZERO,  numerator));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ZERO,  numerator));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.ZERO,  numerator));	  MathUtils.checkState(num.equals(BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	60	None	replace
142	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ONE));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ONE));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.ONE));	  MathUtils.checkState(num.equals(BigInteger.ZERO));    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
143	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.MAX_VALUE  +  1;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.MAX_VALUE  +  1;	  BigInteger    denominator    =    BigInteger.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	42	None	replace
144	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.MAX_VALUE  -  1;  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.MAX_VALUE  -  1;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.MAX_VALUE  -  1;	  BigInteger    denominator    =    BigInteger.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	42	None	replace
145	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol  MatUtils	21	None	replace
146	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DEFINE);  [CE]  cannot  find  symbol  DEFINE  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DEFINE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DEFINE);	  MathUtils.checkNotNull(num,    LocalizedFormats.DEFINE);    	non-compiled	[CE]  cannot  find  symbol  DEFINE	29	None	replace
147	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DEFINE_DECEMBER);  [CE]  cannot  find  symbol  DEFINE_DECEMBER  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DEFINE_DECEMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DEFINE_DECEMBER);	  MathUtils.checkNotNull(num,    LocalizedFormats.DEFINE);    	non-compiled	[CE]  cannot  find  symbol  DEFINE_DECEMBER	29	None	replace
148	[BUG]  [BUGGY]  MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MatrixUtils  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num);    MatrixUtils.checkNotNull(num);    	non-compiled	[CE]  cannot  find  symbol  MatrixUtils	48	None	replace
149	[BUG]  [BUGGY]  MatrixUtils.checkNotNull(num);  [CE]  cannot  find  symbol  MatrixUtils  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MatrixUtils.checkNotNull(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MatrixUtils.checkNotNull(num);	  MathUtils.checkNotNull(num);    MatrixUtils.checkNotNull(num);    	non-compiled	[CE]  cannot  find  symbol  MatrixUtils	48	None	replace
150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);	  	compilable	  [FE]  AssertionError  	43	2	add
151	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);	  	compilable	  [FE]  AssertionError  	43	2	add
152	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(n);  [CE]  cannot  find  symbol  n  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(n);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(n);	  	non-compiled	[CE]  cannot  find  symbol  n	43	None	add
153	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MatUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  [CE]  cannot  find  symbol  MatUtils  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MatUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num);    MatUtils.checkNotNull(num);  MathUtils.checkNotNull(num);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	43	None	add
154	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotEmpty(num);  MathUtils.checkNotEmpty(num);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotEmpty(num);  MathUtils.checkNotEmpty(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num);    MathUtils.checkNotEmpty(num);  MathUtils.checkNotEmpty(num);	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
155	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MatUtils	55	None	replace
156	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator,  numerator);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator,  numerator);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
157	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NONE_NUMERATOR);  [CE]  cannot  find  symbol  NONE_NUMERATOR  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NONE_NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NONE_NUMERATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.NONE_NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  NONE_NUMERATOR	37	None	replace
158	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NONE_DECEMBER);  [CE]  cannot  find  symbol  NONE_DECEMBER  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NONE_DECEMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NONE_DECEMBER);	  MathUtils.checkNotNull(num,    LocalizedFormats.NONE_DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  NONE_DECEMBER	36	None	replace
159	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER_DECEMBER);  [CE]  cannot  find  symbol  NUMBER_DECEMBER  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER_DECEMBER);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER_DECEMBER);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMBER);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_DECEMBER	31	None	replace
160	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMBER);  [CE]  cannot  find  symbol  NUMBER  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMBER);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMBER);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMBER);    	non-compiled	[CE]  cannot  find  symbol  NUMBER	31	None	replace
161	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER_FIRST);  [CE]  cannot  find  symbol  NUMBER_FIRST  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER_FIRST);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER_FIRST);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMBER);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_FIRST	31	None	replace
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	45	2	add
163	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	45	2	add
164	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	45	None	add
165	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotEmpty(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
166	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  n  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  n	45	None	add
167	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  Denominator.DENOMINATOR,  denominator);  [CE]  cannot  find  symbol  Denominator  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  Denominator.DENOMINATOR,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  Denominator.DENOMINATOR,  denominator);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  Denominator	38	None	replace
168	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MatrixUtils  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatrixUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MatrixUtils	80	None	replace
169	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  gcd));  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den,  gcd));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  gcd));	  MathUtils.checkArgument(num.equals(den,    numerator));    	non-compiled	[CE]  cannot  find  symbol  gcd	9	None	replace
170	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  deserator));  [CE]  cannot  find  symbol  deserator  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den,  deserator));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  deserator));	  MathUtils.checkArgument(num.equals(den,    numerator));    	non-compiled	[CE]  cannot  find  symbol  deserator	9	None	replace
171	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  den));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den,  den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  den));	  MathUtils.checkArgument(num.equals(den,    numerator));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	9	None	replace
172	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR,  denominator);	  MathUtils.checkNotEmpty(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
173	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR,  numerator);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR,  numerator);	  MathUtils.checkNotEmpty(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
174	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue());  [CE]  no  suitable  constructor  found  for  BigInteger(double)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  new  BigInteger(num.doubleValue());	  BigInteger    denominator    =    num;    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(double)	65	None	replace
175	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.longValue());  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.longValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  new  BigInteger(num.longValue());	  BigInteger    denominator    =    num;    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	65	None	replace
176	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  new  BigInteger(num);	  BigInteger    denominator    =    num;    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	65	None	replace
177	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.DECEMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.DECEMBER);	  MathUtils.checkNotNull(den,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	28	None	replace
178	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.CENTER);  [CE]  cannot  find  symbol  CENTER  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.CENTER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  BigInteger.CENTER);	  MathUtils.checkNotNull(num,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  CENTER	7	None	replace
179	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NONE);  [CE]  cannot  find  symbol  NONE  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NONE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.NONE);	  MathUtils.checkNotNull(den,    LocalizedFormats.NONE);    	non-compiled	[CE]  cannot  find  symbol  NONE	35	None	replace
180	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ZERO,  numerator);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ZERO,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  BigInteger.ZERO,  numerator);	  MathUtils.checkAndFix(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
181	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ONE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ONE);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  BigInteger.ONE);	  MathUtils.checkAndFix(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
182	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ZERO,  denominator);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ZERO,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  BigInteger.ZERO,  denominator);	  MathUtils.checkAndFix(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
183	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ZERO_DENOMINATOR);  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ZERO_DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  BigInteger.ZERO_DENOMINATOR);	  MathUtils.checkAndFix(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	41	None	replace
184	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator.getDenominator();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  numerator.getDenominator();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  numerator.getDenominator();	  BigInteger    denominator    =    num.getDenominator();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
185	[BUG]  [BUGGY]  BigInteger  denominator  =  den.getDenominator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  den.getDenominator();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  den.getDenominator();	  BigInteger    denominator    =    num.getDenominator();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
186	[BUG]  [BUGGY]  BigInteger  denominator  =  des.getDenominator();  [CE]  cannot  find  symbol  des  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  des.getDenominator();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  des.getDenominator();	  BigInteger    denominator    =    num.getDenominator();    	non-compiled	[CE]  cannot  find  symbol  des	75	None	replace
187	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER_FIRST);  [CE]  cannot  find  symbol  DECEMBER_FIRST  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER_FIRST);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DECEMBER_FIRST);	  MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER_FIRST);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER_FIRST	84	None	replace
188	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_HUNDRED);  [CE]  cannot  find  symbol  DECEMBER_HUNDRED  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_HUNDRED);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_HUNDRED);	  MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER_FIRST);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER_HUNDRED	84	None	replace
189	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO  +  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO  +  2;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.ZERO  +  2;	  BigInteger    denominator    =    BigInteger.ZERO    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	66	None	replace
190	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO,  numerator  +  1;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO,  numerator  +  1;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.ZERO,  numerator  +  1;	  BigInteger    denominator    =    BigInteger.ZERO    +    1;    	non-compiled	[CE]  ';'  expected	66	None	replace
191	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	81	2	add
192	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	81	2	add
193	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	81	2	add
194	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	81	2	add
195	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	81	None	add
196	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  n  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  n	81	None	add
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	81	2	add
198	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	81	2	add
199	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  [CE]  cannot  find  symbol  NUMBER  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMBER);    	non-compiled	[CE]  cannot  find  symbol  NUMBER	56	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	15	2	add
201	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	15	2	add
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	15	2	add
203	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	15	2	add
204	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  DECEMBER  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  DECEMBER	15	None	add
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	15	2	add
206	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	15	2	add
207	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	15	None	add
208	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator.valueOf(0);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  numerator.valueOf(0);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  numerator.valueOf(0);	  BigInteger    denominator    =    num.valueOf(0);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	58	None	replace
209	[BUG]  [BUGGY]  BigInteger  denominator  =  num.valueOf(1);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  num.valueOf(1);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  num.valueOf(1);	  BigInteger    denominator    =    num.valueOf(0);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	58	None	replace
210	[BUG]  [BUGGY]  BigInteger  denominator  =  num.denominator();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  num.denominator();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  num.denominator();	  BigInteger    denominator    =    num.valueOf(0);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
211	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  gcd),  denominator);  [CE]  cannot  find  symbol  gcd  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den,  gcd),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  gcd),  denominator);	  MathUtils.checkArgument(num.equals(den,    denominator));    	non-compiled	[CE]  cannot  find  symbol  gcd	10	None	replace
212	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  denominator),  gcd);  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den,  denominator),  gcd);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  denominator),  gcd);	  MathUtils.checkArgument(num.equals(den,    denominator));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	10	None	replace
213	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(num,  BigInteger.ZERO));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(num,  BigInteger.ZERO));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(num,  BigInteger.ZERO));	  MathUtils.checkArgument(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	69	None	replace
214	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO,  numerator));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO,  numerator));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO,  numerator));	  MathUtils.checkArgument(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger,BigInteger)	69	None	replace
215	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  BigInteger.ONE));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den,  BigInteger.ONE));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  BigInteger.ONE));	  MathUtils.checkArgument(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	69	None	replace
216	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO),  numerator);  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO),  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO),  numerator);	  MathUtils.checkArgument(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	69	None	replace
217	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  gcd,  numerator);  [CE]  cannot  find  symbol  gcd  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  gcd,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  gcd,  numerator);	  BigInteger    denominator    =    BigInteger.valueOf(num,    numerator);    	non-compiled	[CE]  cannot  find  symbol  gcd	26	None	replace
218	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO);  BigInteger  denominator  =  BigInteger.ZERO;  [CE]  cannot  find  symbol  ZERO  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO);  BigInteger  denominator  =  BigInteger.ZERO;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.ZERO);  BigInteger  denominator  =  BigInteger.ZERO;	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.ZERO;    	non-compiled	[CE]  cannot  find  symbol  ZERO	72	None	replace
219	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  BigInteger  denominator  =  BigInteger.ZERO;  [CE]  variable  denominator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  BigInteger  denominator  =  BigInteger.ZERO;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  BigInteger  denominator  =  BigInteger.ZERO;	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.ZERO;    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	72	None	replace
220	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO);  [CE]  cannot  find  symbol  ZERO  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.ZERO);	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.ZERO;    	non-compiled	[CE]  cannot  find  symbol  ZERO	72	None	replace
221	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	compilable	  [FE]  ExceptionInInitializerError  	44	27	replace
222	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	compilable	  [FE]  ExceptionInInitializerError  	44	27	replace
223	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	44	None	replace
224	[BUG]  [BUGGY]  BigInteger  num  =  BigInteger.valueOf(num);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  num  =  BigInteger.valueOf(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  num  =  BigInteger.valueOf(num);	  MathUtils.checkNotNull(num);    BigInteger    num    =    BigInteger.valueOf(den);    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	49	None	replace
225	[BUG]  [BUGGY]  BigInteger  num  =  BigInteger.valueOf(den);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  num  =  BigInteger.valueOf(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  num  =  BigInteger.valueOf(den);	  MathUtils.checkNotNull(num);    BigInteger    num    =    BigInteger.valueOf(den);    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	49	None	replace
226	[BUG]  [BUGGY]  num  =  BigInteger.valueOf(den);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  num  =  BigInteger.valueOf(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	num  =  BigInteger.valueOf(den);	  MathUtils.checkNotNull(num);    BigInteger    num    =    BigInteger.valueOf(den);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	49	None	replace
227	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den));  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den));	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	47	None	replace
228	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.UNDER);  [CE]  cannot  find  symbol  UNDER  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.UNDER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.UNDER);	  MathUtils.checkNotNull(num,    LocalizedFormats.UNDEFINED);    	non-compiled	[CE]  cannot  find  symbol  UNDER	3	None	replace
229	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO),  denominator);  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den,  BigInteger.ZERO),  denominator);	  MathUtils.checkArgument(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	69	None	replace
230	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ONE,  BigInteger.ZERO));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ONE,  BigInteger.ZERO));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(BigInteger.ONE,  BigInteger.ZERO));	  MathUtils.checkArgument(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	69	None	replace
231	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(gcd,  BigInteger.ZERO));  [CE]  cannot  find  symbol  gcd  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(gcd,  BigInteger.ZERO));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(gcd,  BigInteger.ZERO));	  MathUtils.checkArgument(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  cannot  find  symbol  gcd	69	None	replace
232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	53	2	replace
233	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	53	2	replace
234	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMIN  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMIN  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMIN	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  ')'  expected	53	None	replace
235	[BUG]  [BUGGY]  BigInteger  denominator  =  num.doubleValue();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  num.doubleValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  num.doubleValue();	  BigInteger    denominator    =    num;    	non-compiled	[CE]  incompatible  types	65	None	replace
236	[BUG]  [BUGGY]  BigInteger  denominator  =  num,  den);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  num,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  num,  den);	  BigInteger    denominator    =    num;    	non-compiled	[CE]  ';'  expected	65	None	replace
237	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  [CE]  cannot  find  symbol  DONE  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DONE);    	non-compiled	[CE]  cannot  find  symbol  DONE	76	None	replace
238	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	46	3	replace
239	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	46	3	replace
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	46	3	replace
241	[BUG]  [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	46	3	replace
242	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  BigInteger.ONE));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  BigInteger.ONE));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  BigInteger.ONE));	  MathUtils.checkState(num.equals(den,    num));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	24	None	replace
243	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	62	None	add
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	82	2	replace
245	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	82	2	replace
246	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENO  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENO  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENO	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  ')'  expected	82	None	replace
247	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR  +  1);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR  +  1);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	73	None	replace
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	15	2	add
249	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	15	2	add
250	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  BigInteger.valueOf(den));  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  BigInteger.valueOf(den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  BigInteger.valueOf(den));	  MathUtils.checkDigits(num,    den);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	64	None	replace
251	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  den,  BigInteger.ZERO);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  den,  BigInteger.ZERO);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  den,  BigInteger.ZERO);	  MathUtils.checkDigits(num,    den);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
252	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR_DENOMINATOR);  [CE]  cannot  find  symbol  NUMERATOR_DENOMINATOR  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR_DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR_DENOMINATOR);	  MathUtils.checkNotEmpty(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  NUMERATOR_DENOMINATOR	59	None	replace
253	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den)),  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den)),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.valueOf(den)),  denominator);	  MathUtils.checkState(num.equals(BigInteger.valueOf(den)));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	61	None	replace
254	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den)),  gcd);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den)),  gcd);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.valueOf(den)),  gcd);	  MathUtils.checkState(num.equals(BigInteger.valueOf(den)));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	61	None	replace
255	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ONE,  BigInteger.ZERO));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ONE,  BigInteger.ZERO));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.ONE,  BigInteger.ZERO));	  MathUtils.checkState(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	78	None	replace
256	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(gcd,  BigInteger.ZERO));  [CE]  cannot  find  symbol  gcd  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(gcd,  BigInteger.ZERO));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(gcd,  BigInteger.ZERO));	  MathUtils.checkState(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  cannot  find  symbol  gcd	78	None	replace
257	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ONE,  den));  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ONE,  den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.ONE,  den));	  MathUtils.checkState(num.equals(den,    BigInteger.ZERO));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	78	None	replace
258	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ZERO),  den);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.ZERO),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.ZERO),  den);	  MathUtils.checkState(num.equals(BigInteger.ZERO));    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
259	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	18	3	replace
260	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	18	3	replace
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	18	2	replace
262	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	18	2	replace
263	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	43	2	add
264	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	43	2	add
265	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  der);  [CE]  cannot  find  symbol  der  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  der);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  der);	  BigInteger    denominator    =    BigInteger.valueOf(num,    des);    	non-compiled	[CE]  cannot  find  symbol  der	27	None	replace
266	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO  /  1;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.ZERO  /  1;	  BigInteger    denominator    =    BigInteger.ZERO    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	66	None	replace
267	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_FIFTHS);  [CE]  cannot  find  symbol  DECEMBER_FIFTHS  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_FIFTHS);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_FIFTHS);	  MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER_FIRST);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER_FIFTHS	84	None	replace
268	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(number,  den);  [CE]  cannot  find  symbol  number  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(number,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(number,  den);	  BigInteger    denominator    =    BigInteger.valueOf(num,    numerator);    	non-compiled	[CE]  cannot  find  symbol  number	26	None	replace
269	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  denominator,  den);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  denominator,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  denominator,  den);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
270	[BUG]  [BUGGY]  BigInteger  denominator  =  num.getBigInteger();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  num.getBigInteger();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  num.getBigInteger();	  BigInteger    denominator    =    BigInteger.ONE;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
271	[BUG]  [BUGGY]  BigInteger  denominator  =  num.valueOf(den);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  num.valueOf(den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  num.valueOf(den);	  BigInteger    denominator    =    num.valueOf(0);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	58	None	replace
272	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  DENOMINATOR);  [CE]  cannot  find  symbol  DENOMINATOR  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  DENOMINATOR	81	None	add
273	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num;  LocalizedFormats.NUMERATOR);  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num;  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num;  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  ')'  expected	45	None	add
274	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	19	None	replace
275	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  }	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.ZERO;    	compilable	  [FE]  AssertionError  	72	3	replace
276	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  }	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.ZERO;    	compilable	  [FE]  AssertionError  	72	3	replace
277	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NONE_QUARATOR);  [CE]  cannot  find  symbol  NONE_QUARATOR  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NONE_QUARATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NONE_QUARATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.NONE_HUNDRED);    	non-compiled	[CE]  cannot  find  symbol  NONE_QUARATOR	74	None	replace
278	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  BigInteger.MAX_VALUE);	  MathUtils.checkNotNull(num,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	7	None	replace
279	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den);	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	71	None	replace
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	16	3	replace
281	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	16	3	replace
282	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(L  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(L  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(L	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  ')'  expected	16	None	replace
283	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(2);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(2);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(2);	  BigInteger    denominator    =    BigInteger.valueOf(1);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	57	None	replace
284	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator,  den);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator,  den);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
285	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(n,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  n  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(n,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(n,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotEmpty(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol  n	20	None	replace
286	[BUG]  [BUGGY]  MathUtils.checkDenominator(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDenominator(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDenominator(num,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkDigits(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
287	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NULL);  [CE]  cannot  find  symbol  NULL  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NULL);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NULL);	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NULL);    	non-compiled	[CE]  cannot  find  symbol  NULL	83	None	replace
288	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	MathUtils.checkNotNull(den);	  MathUtils.checkNotNull(num);    MatrixUtils.checkNotNull(num);    	compilable	  [FE]  AssertionError  	48	2	replace
289	[BUG]  [BUGGY]  MathUtils.checkNotNull(den);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den);	  MathUtils.checkNotNull(num);    MatrixUtils.checkNotNull(num);    	compilable	  [FE]  AssertionError  	48	2	replace
290	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DELPROP);  [CE]  cannot  find  symbol  DELPROP  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DELPROP);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DELPROP);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DELPROP);    	non-compiled	[CE]  cannot  find  symbol  DELPROP	77	None	replace
291	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  des);  [CE]  cannot  find  symbol  des  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  des);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den,  des);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  cannot  find  symbol  des	25	None	replace
292	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  0);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,int)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  0);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den,  0);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,int)	25	None	replace
293	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	compilable	  [FE]  ExceptionInInitializerError  	44	27	replace
294	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	compilable	  [FE]  ExceptionInInitializerError  	44	27	replace
295	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	compilable	  [FE]  AssertionError  	44	3	replace
296	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	compilable	  [FE]  AssertionError  	44	3	replace
297	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  BigInteger.ZERO)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  BigInteger.ZERO)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	compilable	  [FE]  AssertionError  	44	3	replace
298	[BUG]  [BUGGY]  if(den  ==  BigInteger.ZERO)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  BigInteger.ZERO)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  BigInteger.ZERO)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	compilable	  [FE]  AssertionError  	44	3	replace
299	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den),  des);  [CE]  cannot  find  symbol  des  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den),  des);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den),  des);	  MathUtils.checkArgument(num.equals(den),    den);    	non-compiled	[CE]  cannot  find  symbol  des	79	None	replace
300	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	52	2	add
301	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	52	2	add
302	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	50	2	add
303	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	50	2	add
304	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	50	2	add
305	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	50	2	add
306	[BUG]  [BUGGY]  MathUtils.checkArgument(den.equals(num,  BigInteger.valueOf));  [CE]  cannot  find  symbol  valueOf  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(den.equals(num,  BigInteger.valueOf));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(den.equals(num,  BigInteger.valueOf));	  MathUtils.checkArgument(den.equals(num));    	non-compiled	[CE]  cannot  find  symbol  valueOf	8	None	replace
307	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(den,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotEmpty(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotEmpty(den,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotEmpty(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
308	[BUG]  [BUGGY]  MutableFormats.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MutableFormats  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MutableFormats.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MutableFormats.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotEmpty(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	54	None	replace
309	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  den,  BigInteger.ZERO);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  den,  BigInteger.ZERO);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  den,  BigInteger.ZERO);	  MathUtils.checkAndFix(num,    den);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
310	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.THIS);  [CE]  cannot  find  symbol  THIS  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.THIS);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  BigInteger.THIS);	  MathUtils.checkAndFix(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  THIS	41	None	replace
311	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  }  [CE]  cannot  find  symbol  NUMBER  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMBER);    	non-compiled	[CE]  cannot  find  symbol  NUMBER	56	None	replace
312	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  }  else  {  throw  new  ZeroException(LocalizedFormats  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  }  else  {  throw  new  ZeroException(LocalizedFormats  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMBER);  }  else  {  throw  new  ZeroException(LocalizedFormats	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMBER);    	non-compiled	[CE]  ')'  expected	56	None	replace
313	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  denominator,  BigInteger.ZERO);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  denominator,  BigInteger.ZERO);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  denominator,  BigInteger.ZERO);	  MathUtils.checkAndFix(num,    denominator);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	15	2	add
315	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	15	2	add
316	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DELPROP);  [CE]  cannot  find  symbol  DELPROP  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DELPROP);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.DELPROP);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DELPROP);    	non-compiled	[CE]  cannot  find  symbol  DELPROP	77	None	replace
317	[BUG]  [BUGGY]  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol  MatUtils	21	None	replace
318	[BUG]  [BUGGY]  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol  MatUtils	21	None	replace
319	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	46	3	replace
320	[BUG]  [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	46	3	replace
321	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	compilable	  [FE]  AssertionError  	44	3	replace
322	[BUG]  [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den!=  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num);  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num);    	compilable	  [FE]  AssertionError  	44	3	replace
323	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	63	3	replace
324	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	63	3	replace
325	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  ')'  expected	63	None	replace
326	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den),  num.intValue()));  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den),  num.intValue()));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.valueOf(den),  num.intValue()));	  MathUtils.checkState(num.equals(BigInteger.valueOf(den)));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	61	None	replace
327	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den)),  den);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(BigInteger.valueOf(den)),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(BigInteger.valueOf(den)),  den);	  MathUtils.checkState(num.equals(BigInteger.valueOf(den)));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	61	None	replace
328	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  }  [CE]  cannot  find  symbol  DONE  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DONE);    	non-compiled	[CE]  cannot  find  symbol  DONE	76	None	replace
329	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  numerator),  denominator);  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  numerator),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  numerator),  denominator);	  MathUtils.checkState(num.equals(den,    numerator));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	23	None	replace
330	[BUG]  [BUGGY]  MathUtils.checkArgument(den.equals(num,  BigInteger.MAX_VALUE));  [CE]  cannot  find  symbol  MAX_VALUE  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(den.equals(num,  BigInteger.MAX_VALUE));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(den.equals(num,  BigInteger.MAX_VALUE));	  MathUtils.checkArgument(den.equals(num));    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	8	None	replace
331	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	53	3	replace
332	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	53	3	replace
333	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	53	3	replace
334	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	53	3	replace
335	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  }  [CE]  cannot  find  symbol  NULL  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NULL);    	non-compiled	[CE]  cannot  find  symbol  NULL	83	None	replace
336	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [CE]  cannot  find  symbol  NULL  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NULL);    	non-compiled	[CE]  cannot  find  symbol  NULL	83	None	replace
337	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }  [CE]  cannot  find  symbol  NULL  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NULL);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }	  MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NULL);    	non-compiled	[CE]  cannot  find  symbol  NULL	83	None	replace
338	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.ZERO;    	compilable	  [FE]  ExceptionInInitializerError  	72	27	replace
339	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [FE]  ExceptionInInitializerError  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num);  BigInteger  denominator  =  BigInteger.ZERO;  }  else  {  throw  new  ZeroException(LocalizedFormats.NUMERATOR);  }	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.ZERO;    	compilable	  [FE]  ExceptionInInitializerError  	72	27	replace
340	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  num);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  num);	  BigInteger    denominator    =    BigInteger.valueOf(num,    des);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger)	27	None	replace
341	[BUG]  [BUGGY]  MathUtils.checkBoolean(num,  LocalizedFormats.NONE);  [CE]  cannot  find  symbol  NONE  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkBoolean(num,  LocalizedFormats.NONE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkBoolean(num,  LocalizedFormats.NONE);	  MathUtils.checkNotNull(den,    LocalizedFormats.NONE);    	non-compiled	[CE]  cannot  find  symbol  NONE	35	None	replace
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	51	3	replace
343	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	51	3	replace
344	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	51	3	replace
345	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	51	3	replace
346	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	51	3	replace
347	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	compilable	  [FE]  AssertionError  	51	3	replace
348	[BUG]  [BUGGY]  BigInteger  denominator  =  den.valueOf(0);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  den.valueOf(0);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  den.valueOf(0);	  BigInteger    denominator    =    num.valueOf(0);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	58	None	replace
349	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den),  den.intValue());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den),  den.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(den),  den.intValue());	  MathUtils.checkArgument(num.equals(den),    den);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
350	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	18	3	replace
351	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	18	3	replace
352	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ZERO),  den);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(BigInteger.ZERO),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkArgument(num.equals(BigInteger.ZERO),  den);	  MathUtils.checkArgument(num.equals(BigInteger.ZERO));    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
353	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.UNDEFINED_ARRAY);  [CE]  cannot  find  symbol  UNDEFINED_ARRAY  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.UNDEFINED_ARRAY);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.UNDEFINED_ARRAY);	  MathUtils.checkNotNull(num,    LocalizedFormats.UNDEFINED);    	non-compiled	[CE]  cannot  find  symbol  UNDEFINED_ARRAY	3	None	replace
354	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.CENTER;  [CE]  cannot  find  symbol  CENTER  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.CENTER;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.CENTER;	  BigInteger    denominator    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  CENTER	34	None	replace
355	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1,  denominator);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1,  denominator);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	73	None	replace
356	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR_TYPE);  [CE]  cannot  find  symbol  NUMERATOR_TYPE  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR_TYPE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR_TYPE);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  cannot  find  symbol  NUMERATOR_TYPE	73	None	replace
357	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den,  num),  denominator);  [CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(num.equals(den,  num),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(num.equals(den,  num),  denominator);	  MathUtils.checkState(num.equals(den,    num));    	non-compiled	[CE]  no  suitable  method  found  for  equals(BigInteger,BigInteger)	24	None	replace
358	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  Den);  [CE]  cannot  find  symbol  Den  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  Den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  Den);	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  cannot  find  symbol  Den	47	None	replace
359	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	62	2	add
360	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	62	2	add
361	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.intValue());  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.intValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  new  BigInteger(num.intValue());	  BigInteger    denominator    =    num;    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	65	None	replace
362	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO);  BigInteger  denominator  =  BigInteger.valueOf(den);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO);  BigInteger  denominator  =  BigInteger.valueOf(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO);  BigInteger  denominator  =  BigInteger.valueOf(den);	  MathUtils.checkNotNull(num);    BigInteger    denominator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	71	None	replace
363	[BUG]  [BUGGY]  MathUtils.checkBoolean(num,  LocalizedFormats.UNKNOWN);  [CE]  cannot  find  symbol  UNKNOWN  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkBoolean(num,  LocalizedFormats.UNKNOWN);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkBoolean(num,  LocalizedFormats.UNKNOWN);	  MathUtils.checkNotNull(n,    LocalizedFormats.UNKNOWN);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	2	None	replace
364	[BUG]  [BUGGY]  MathUtils.checkState(den.equals(num),  den.equals(BigInteger.ZERO));  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkState(den.equals(num),  den.equals(BigInteger.ZERO));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkState(den.equals(num),  den.equals(BigInteger.ZERO));	  MathUtils.checkState(den.equals(num));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
365	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  DONE  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  DONE	17	None	add
366	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den,  denominator);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger,BigInteger)	25	None	replace
367	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  deserator,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  deserator  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  deserator,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  deserator,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  deserator	38	None	replace
368	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  denominator,  numerator);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  denominator,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkAndFix(num,  LocalizedFormats.DENOMINATOR,  denominator,  numerator);	  MathUtils.checkAndFix(num,    LocalizedFormats.DENOMINATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
369	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO  +  den;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO  +  den;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.ZERO  +  den;	  BigInteger    denominator    =    BigInteger.ZERO    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	66	None	replace
370	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(numerator,  den);  [CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(numerator,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(numerator,  den);	  BigInteger    denominator    =    BigInteger.valueOf(num,    numerator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,BigInteger)	26	None	replace
371	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  deserator);  [CE]  cannot  find  symbol  deserator  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  deserator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  deserator);	  BigInteger    denominator    =    BigInteger.valueOf(num,    numerator);    	non-compiled	[CE]  cannot  find  symbol  deserator	26	None	replace
372	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_QUARTERS);  [CE]  cannot  find  symbol  DECEMBER_QUARTERS  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_QUARTERS);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_QUARTERS);	  MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER_FIRST);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER_QUARTERS	84	None	replace
373	[BUG]  [BUGGY]  MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator,  BigInteger.ZERO);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator,  BigInteger.ZERO);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	MathUtils.checkDigits(num,  LocalizedFormats.DENOMINATOR,  denominator,  BigInteger.ZERO);	  MathUtils.checkDigits(num,    LocalizedFormats.DENOMINATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
374	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	82	3	replace
375	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	82	3	replace
376	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  ')'  expected	82	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	16	3	replace
378	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	121	121	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	compilable	  [FE]  AssertionError  	16	3	replace
