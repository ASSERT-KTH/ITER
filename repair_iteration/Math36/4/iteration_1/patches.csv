bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	6	replace
2	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	6	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
4	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
6	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	2	2	add
8	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	2	2	add
9	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  desnominator.doubleValue();  [CE]  cannot  find  symbol  desnominator  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  desnominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  desnominator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  desnominator	2	None	add
10	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    /    denominator.doubleValue();    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	2	None	add
11	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  number.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  number  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  number.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  number.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  number	2	None	add
12	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  DEDENIATOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIATOR  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  DEDENIATOR.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  DEDENIATOR.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	2	None	add
13	[BUG]  [BUGGY]  result  =  multiplier.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  multiplier  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  multiplier.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  multiplier.doubleValue()  /  denominator.doubleValue();	      result    =    num.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  multiplier	4	None	replace
14	[BUG]  [BUGGY]  result  =  denominator.doubleValue()  /  number.doubleValue();  [CE]  cannot  find  symbol  number  [FE]              AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  denominator.doubleValue()  /  number.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  denominator.doubleValue()  /  number.doubleValue();	      result    =    num.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  number	4	None	replace
15	[BUG]  [BUGGY]  result  =  number.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  number  [FE]                AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  number.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  number.doubleValue()  /  denominator.doubleValue();	      result    =    num.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  number	4	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	11	6	replace
17	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	11	6	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	11	5	replace
19	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	11	5	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	11	5	replace
21	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	11	5	replace
22	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  denominator);	  return    result    *    Math.sqrt(numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	16	None	replace
23	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  numerator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator,  numerator);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  numerator);	  return    result    *    Math.sqrt(numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	16	None	replace
24	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  Math.sqrt(numerator);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator);	  return    result    *    Math.sqrt(numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	16	None	replace
25	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  fraction);  [CE]  cannot  find  symbol  fraction  [FE]              AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator,  fraction);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  fraction);	  return    result    *    Math.sqrt(numerator);    	non-compiled	[CE]  cannot  find  symbol  fraction	16	None	replace
26	[BUG]  [BUGGY]  double  result  =  denominator.doubleValue()  *  numerator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  double  result  =  denominator.doubleValue()  *  numerator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  denominator.doubleValue()  *  numerator.doubleValue();	      double    result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	7	None	replace
27	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                  AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;	      double    result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	7	None	replace
28	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  not  a  statement	12	None	add
29	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	12	None	add
30	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	12	None	add
31	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  unreachable  statement	12	None	add
32	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	12	None	add
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  result;  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  result;	  return    result    *    result;    	compilable	  [FE]  AssertionError  	15	5	replace
34	[BUG]  [BUGGY]  return  result  /  result;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  result;  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  result;	  return    result    *    result;    	compilable	  [FE]  AssertionError  	15	5	replace
35	[BUG]  [BUGGY]  return  result  *  num;  [CE]  cannot  find  symbol  num  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  num;  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  num;	  return    result    *    result;    	non-compiled	[CE]  cannot  find  symbol  num	15	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	13	6	replace
37	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	13	6	replace
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	13	6	replace
39	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	13	6	replace
40	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  sign.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  sign.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue())/  sign.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	13	None	replace
41	[BUG]  [BUGGY]  return  numerator.sqrt(result  *  Math.sqrt(numerator  /  denominator.doubleValue());  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  numerator.sqrt(result  *  Math.sqrt(numerator  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator.sqrt(result  *  Math.sqrt(numerator  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	non-compiled	[CE]  ')'  expected	17	None	replace
42	[BUG]  [BUGGY]  return  denominator  *  Math.sqrt(numerator  /  result.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  denominator  *  Math.sqrt(numerator  /  result.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  denominator  *  Math.sqrt(numerator  /  result.doubleValue());	  return    result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	17	None	replace
43	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()).doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()).doubleValue();	  return    result    *    Math.sqrt(numerator).doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	18	None	replace
44	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator).doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  Math.sqrt(numerator).doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator).doubleValue();	  return    result    *    Math.sqrt(numerator).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	18	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue());	  return    result    *    Math.sqrt(numerator).doubleValue();    	compilable	  [FE]  AssertionError  	18	5	replace
46	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue());	  return    result    *    Math.sqrt(numerator).doubleValue();    	compilable	  [FE]  AssertionError  	18	5	replace
47	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	10	None	add
48	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	10	None	add
49	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	10	None	add
50	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	10	None	add
51	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	10	None	add
52	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    result  *(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	20	None	add
53	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	20	None	add
54	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	20	None	add
55	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	20	None	add
56	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  *  deserator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  double  result  =  numerator.doubleValue()  *  deserator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  *  deserator.doubleValue();	      double    result    =    numerator.doubleValue()    /    deserator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	19	None	replace
57	[BUG]  [BUGGY]  double  result  =  denominator.doubleValue()  /  numerator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  double  result  =  denominator.doubleValue()  /  numerator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  denominator.doubleValue()  /  numerator.doubleValue();	      double    result    =    numerator.doubleValue()    /    deserator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	19	None	replace
58	[BUG]  [BUGGY]  double  result  =  deserator.doubleValue()  /  numerator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  double  result  =  deserator.doubleValue()  /  numerator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  deserator.doubleValue()  /  numerator.doubleValue();	      double    result    =    numerator.doubleValue()    /    deserator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	19	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  Math.log(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.log(result);	  return    result    *    Math.log(result);    	compilable	  [FE]  AssertionError  	9	5	replace
60	[BUG]  [BUGGY]  return  result  /  Math.log(result);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  Math.log(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.log(result);	  return    result    *    Math.log(result);    	compilable	  [FE]  AssertionError  	9	5	replace
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sin(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sin(result);	  return    result    *    Math.log(result);    	compilable	  [FE]  AssertionError  	9	5	replace
62	[BUG]  [BUGGY]  return  result  *  Math.sin(result);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sin(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sin(result);	  return    result    *    Math.log(result);    	compilable	  [FE]  AssertionError  	9	5	replace
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.rint(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.rint(result);	  return    result    *    Math.log(result);    	compilable	  [FE]  AssertionError  	9	5	replace
64	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.rint(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.rint(result);	  return    result    *    Math.log(result);    	compilable	  [FE]  AssertionError  	9	5	replace
65	[BUG]  [BUGGY]  return  result  *  result;  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	14	None	add
66	[BUG]  [BUGGY]  return  result  *  result;  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	14	None	add
67	[BUG]  [BUGGY]  return  result  *  result;  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	14	None	add
68	[BUG]  [BUGGY]  return  result  *  result;  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	14	None	add
69	[BUG]  [BUGGY]  return  result  *  result;  result  *  result;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  result  *  result;  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    result  *  result;	  	non-compiled	[CE]  not  a  statement	14	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	5	5	add
71	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	5	5	add
72	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIATOR  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	5	None	add
73	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  desnominator.doubleValue();  [CE]  cannot  find  symbol  desnominator  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  desnominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  desnominator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  desnominator	5	None	add
74	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    *    denominator.doubleValue();    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	5	None	add
75	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  deserator.doubleValue();  [CE]  cannot  find  symbol  deserator  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  deserator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  deserator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  deserator	5	None	add
76	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  num.doubleValue();  [CE]  cannot  find  symbol  num  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  numerator.doubleValue()  *  num.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  num.doubleValue();	      result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  num	6	None	replace
77	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;	      result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	6	None	replace
78	[BUG]  [BUGGY]  result  =  denominator.doubleValue()  /  numerator.doubleValue();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  denominator.doubleValue()  /  numerator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  denominator.doubleValue()  /  numerator.doubleValue();	      result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	3	None	replace
79	[BUG]  [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
80	[BUG]  [BUGGY]  return  result  *  Math.log(result);  result  *  Math.log(result);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result);  result  *  Math.log(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result);    result  *  Math.log(result);	  	non-compiled	[CE]  not  a  statement	8	None	add
81	[BUG]  [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  /  Math.log(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  /  Math.log(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result);    double  result  =  numerator.doubleValue()  /  Math.log(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
82	[BUG]  [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  *  Math.log(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  *  Math.log(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result);    double  result  =  numerator.doubleValue()  *  Math.log(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
83	[BUG]  [BUGGY]  return  result  *  Math.log(result);  double  result  =  Math.log(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result);  double  result  =  Math.log(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result);    double  result  =  Math.log(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    +    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	22	6	replace
85	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    +    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	22	6	replace
86	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  +  denominator.doubleValue()  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator  +  denominator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  +  denominator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    +    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	22	None	replace
87	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator  +  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  Math.sqrt(numerator  +  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator  +  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    +    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	22	None	replace
88	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	10	None	add
89	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	10	None	add
90	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	10	None	add
91	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	10	None	add
92	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	10	None	add
93	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  Result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  cannot  find  symbol  Result  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  Result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    *    denominator.doubleValue();    Result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  Result	5	None	add
94	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(result);	  return    result    *    result;    	compilable	  [FE]  AssertionError  	15	5	replace
95	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(result);	  return    result    *    result;    	compilable	  [FE]  AssertionError  	15	5	replace
96	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	add
97	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	add
98	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	add
99	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	add
100	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  num.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  num  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  num.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  num.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  num	2	None	add
101	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [CE]  cannot  find  symbol  deserator  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  deserator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  deserator	2	None	add
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	13	6	replace
103	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	13	6	replace
104	[BUG]  [BUGGY]  result  =  n.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  n  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  n.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  n.doubleValue()  /  denominator.doubleValue();	      result    =    num.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  n	4	None	replace
105	[BUG]  [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result);    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
106	[BUG]  [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result);    double  result  =  numerator.doubleValue()  +  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
107	[BUG]  [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result);    double  result  =  numerator.doubleValue()  %  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
108	[BUG]  [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(result);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
109	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  *  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator  *  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    +    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	22	None	replace
110	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  /  Math.sqrt(numerator  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	17	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	11	5	replace
112	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	11	5	replace
113	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator).doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator).doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  denominator).doubleValue();	  return    result    *    Math.sqrt(numerator).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	18	None	replace
114	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator).doubleValue()  /  denominator;  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator).doubleValue()  /  denominator;  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator).doubleValue()  /  denominator;	  return    result    *    Math.sqrt(numerator).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	18	None	replace
115	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  BigFraction  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  BigFraction  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    BigFraction  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	12	None	add
116	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	add
117	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue());  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  denominator  =  Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	12	None	add
118	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	add
119	[BUG]  [BUGGY]  result  =  result  *  denominator.doubleValue();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  result  *  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  denominator.doubleValue();	      result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	3	None	replace
120	[BUG]  [BUGGY]  result  =  result  /  denominator.doubleValue();  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  result  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  /  denominator.doubleValue();	      result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	3	None	replace
121	[BUG]  [BUGGY]  return  result  *  result;  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    double  result  =  numerator.doubleValue()  %  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	14	None	add
122	[BUG]  [BUGGY]  return  result  *  result;  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    double  result  =  numerator.doubleValue()  +  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	14	None	add
123	[BUG]  [BUGGY]  return  result  *  result;  double  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  double  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    double  result  =  numerator.doubleValue()  /  deserator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	14	None	add
124	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result,  denominator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(result,  denominator);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(result,  denominator);	  return    result    *    Math.sqrt(numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	16	None	replace
125	[BUG]  [BUGGY]  result  =  denominator.doubleValue()  *  numerator.doubleValue();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  denominator.doubleValue()  *  numerator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  denominator.doubleValue()  *  numerator.doubleValue();	      result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	6	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
127	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result  /  2.0);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.log(result  /  2.0);	  return    result    *    Math.log(result);    	compilable	  [FE]  AssertionError  	9	5	replace
129	[BUG]  [BUGGY]  return  result  *  Math.log(result  /  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result  /  2.0);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(result  /  2.0);	  return    result    *    Math.log(result);    	compilable	  [FE]  AssertionError  	9	5	replace
130	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  number.doubleValue()  *  denominator.doubleValue();  [CE]  cannot  find  symbol  number  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  number.doubleValue()  *  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  number.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  number	5	None	add
131	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	10	None	add
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	17	5	replace
133	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	17	5	replace
134	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(result  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  numerator  *  Math.sqrt(result  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(result  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	17	None	replace
135	[BUG]  [BUGGY]  return  result  *  Math.sqrt(denominator,  numerator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(denominator,  numerator);  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(denominator,  numerator);	  return    result    *    Math.sqrt(numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	16	None	replace
136	[BUG]  [BUGGY]  result  =  result  *  denominator.doubleValue()  /  numerator.doubleValue();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  result  *  denominator.doubleValue()  /  numerator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  denominator.doubleValue()  /  numerator.doubleValue();	      result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	3	None	replace
137	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator),  numerator.doubleValue();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator),  numerator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator),  numerator.doubleValue();	  return    result    *    Math.sqrt(numerator).doubleValue();    	non-compiled	[CE]  ';'  expected	18	None	replace
138	[BUG]  [BUGGY]  result  =  fraction.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  fraction  [FE]            AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  result  =  fraction.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  fraction.doubleValue()  /  denominator.doubleValue();	      result    =    num.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  fraction	4	None	replace
139	[BUG]  [BUGGY]  return  doubleValue  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  cannot  find  symbol  doubleValue  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  doubleValue  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  doubleValue  *(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  doubleValue	21	None	replace
140	[BUG]  [BUGGY]  return  result  *  result;  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	14	None	add
141	[BUG]  [BUGGY]  return  result  *  result;  double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	14	None	add
142	[BUG]  [BUGGY]  return  result  *  result;  double  result  =  Math.sqrt(numerator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  result;  double  result  =  Math.sqrt(numerator.doubleValue());  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    result;    double  result  =  Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	14	None	add
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	2	2	add
144	[BUG]  [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]      result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]    return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	2	2	add
145	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  not  a  statement	12	None	add
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result)/  2.0;  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.log(result)/  2.0;	  return    result    *    Math.log(result);    	compilable	  [FE]  AssertionError  	9	5	replace
147	[BUG]  [BUGGY]  return  result  *  Math.log(result)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();      [BUGGY]  return  result  *  Math.log(result)/  2.0;  [BUGGY]    }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(result)/  2.0;	  return    result    *    Math.log(result);    	compilable	  [FE]  AssertionError  	9	5	replace
