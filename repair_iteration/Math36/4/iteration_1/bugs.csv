bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]  return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();		non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]    result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]  return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	    result  =  numerator.doubleValue()  /  denominator.doubleValue();		compilable	  [FE]  AssertionError  	8	2	add
3	[BUG]  [BUGGY]    result  =  numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]    result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]  return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	    result  =  numerator.doubleValue()  /  denominator.doubleValue();		compilable	  [FE]  AssertionError  	8	2	add
4	[BUG]  [BUGGY]    result  =  num.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  num  [FE]        AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]    result  =  num.doubleValue()  /  denominator.doubleValue();  [BUGGY]  return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	    result  =  num.doubleValue()  /  denominator.doubleValue();		non-compiled	[CE]  cannot  find  symbol  num	8	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]    result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]  return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	    result  =  numerator.doubleValue()  *  denominator.doubleValue();		compilable	  [FE]  AssertionError  	8	5	add
6	[BUG]  [BUGGY]    result  =  numerator.doubleValue()  *  denominator.doubleValue();  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]    result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]  return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	    result  =  numerator.doubleValue()  *  denominator.doubleValue();		compilable	  [FE]  AssertionError  	8	5	add
7	[BUG]  [BUGGY]    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]  return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();		non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  Math.log(result);  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.log(result);	return  result;  	compilable	  [FE]  AssertionError  	7	5	replace
9	[BUG]  [BUGGY]  return  result  *  Math.log(result);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  Math.log(result);  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(result);	return  result;  	compilable	  [FE]  AssertionError  	7	5	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	return  result;  	compilable	  [FE]  AssertionError  	7	5	replace
11	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	return  result;  	compilable	  [FE]  AssertionError  	7	5	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	return  result;  	compilable	  [FE]  AssertionError  	7	6	replace
13	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	return  result;  	compilable	  [FE]  AssertionError  	7	6	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  result;  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  result;	return  result;  	compilable	  [FE]  AssertionError  	7	5	replace
15	[BUG]  [BUGGY]  return  result  *  result;  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  result;  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  result;	return  result;  	compilable	  [FE]  AssertionError  	7	5	replace
16	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  Math.sqrt(numerator);  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator);	return  result;  	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	7	None	replace
17	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]      AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  Math.sqrt(numerator  /  denominator.doubleValue());  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  /  denominator.doubleValue());	return  result;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	7	None	replace
18	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator).doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  Math.sqrt(numerator).doubleValue();  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator).doubleValue();	return  result;  	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	7	None	replace
19	[BUG]  [BUGGY]    double  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]    double  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [BUGGY]  return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	    double  result  =  numerator.doubleValue()  /  deserator.doubleValue();		non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	8	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *(numerator.doubleValue()  /  denominator.doubleValue());	return  result;  	compilable	  [FE]  AssertionError  	7	5	replace
21	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *(numerator.doubleValue()  /  denominator.doubleValue());	return  result;  	compilable	  [FE]  AssertionError  	7	5	replace
22	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  +  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionError  [CONTEXT]  public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();    [BUGGY]  return  result  *  Math.sqrt(numerator  +  denominator.doubleValue());  [BUGGY]  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  +  denominator.doubleValue());	return  result;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	7	None	replace
