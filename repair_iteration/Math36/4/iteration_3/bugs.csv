bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator,  denominator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator,  denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator,  denominator);	  return    result    /    Math.sqrt(numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	24	None	replace
2	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator,  numerator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator,  numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator,  numerator);	  return    result    /    Math.sqrt(numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	24	None	replace
3	[BUG]  [BUGGY]  return  result  /  Math.sqrt(denominator,  numerator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(denominator,  numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(denominator,  numerator);	  return    result    /    Math.sqrt(numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	24	None	replace
4	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                      AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;	  double    result    =    numerator.doubleValue()    *    denominator.doubleValue()    +    1;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	27	None	replace
5	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  /  1;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  /  1;  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  /  1;	  double    result    =    numerator.doubleValue()    *    denominator.doubleValue()    +    1;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	27	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  /  1)/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	103	6	replace
7	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  1)/  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  /  1)/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	103	6	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  *  1)/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	103	6	replace
9	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  1)/  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  *  1)/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	103	6	replace
10	[BUG]  [BUGGY]  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	31	None	replace
11	[BUG]  [BUGGY]  result  =  Math.log(result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue());  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.log(result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.log(result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	31	None	replace
12	[BUG]  [BUGGY]  result  =  Math.abs(result  *  Math.abs(numerator.doubleValue())/  denominator.doubleValue();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.abs(result  *  Math.abs(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.abs(result  *  Math.abs(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  ')'  expected	31	None	replace
13	[BUG]  [BUGGY]  result  =  Math.max(result,  numerator.doubleValue())/  denominator.doubleValue();  [CE]  missing  return  statement  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.max(result,  numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.max(result,  numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	31	None	replace
14	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  not  a  statement	38	None	add
15	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    double  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	38	None	add
16	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	38	None	add
17	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    Math.log(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  not  a  statement	38	None	add
18	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    double  denominator  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	38	None	add
19	[BUG]  [BUGGY]  result  =  value  /  denominator.doubleValue();  [CE]  cannot  find  symbol  value  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  value  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  value  /  denominator.doubleValue();	  result    =    result    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  value	120	None	replace
20	[BUG]  [BUGGY]  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    result;    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  not  a  statement	68	None	replace
21	[BUG]  [BUGGY]  result  *  Math.log(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *  Math.log(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *  Math.log(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    result;    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  not  a  statement	68	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.log(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    result;    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	68	6	replace
23	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  *  denominator.doubleValue());  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    result;    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	68	6	replace
24	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(numerator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    denominator.doubleValue()    +    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	108	None	replace
25	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  Math.log(numerator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    denominator.doubleValue()    +    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	108	None	replace
26	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(numerator);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    denominator.doubleValue()    +    Math.log(result);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	108	None	replace
27	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(denominator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(denominator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    denominator.doubleValue()    +    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	108	None	replace
28	[BUG]  [BUGGY]  return  numerator.doubleValue()  *  Math.log(numerator);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator.doubleValue()  *  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	79	None	replace
29	[BUG]  [BUGGY]  result  =  Math.log(result);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.log(result);	  return    result    *    Math.log(result);    double    result    =    Math.log(result);    	non-compiled	[CE]  missing  return  statement	83	None	replace
30	[BUG]  [BUGGY]  double  result  =  Math.log(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  Math.log(result);	  return    result    *    Math.log(result);    double    result    =    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	83	None	replace
31	[BUG]  [BUGGY]  result  *=  Math.log(result);  [CE]  missing  return  statement  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *=  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *=  Math.log(result);	  return    result    *    Math.log(result);    double    result    =    Math.log(result);    	non-compiled	[CE]  missing  return  statement	83	None	replace
32	[BUG]  [BUGGY]  result  =  Math.rint(result);  [CE]  missing  return  statement  [FE]                      AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.rint(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.rint(result);	  return    result    *    Math.log(result);    double    result    =    Math.log(result);    	non-compiled	[CE]  missing  return  statement	83	None	replace
33	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  deserator.doubleValue();  [CE]  cannot  find  symbol  deserator  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  deserator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  deserator.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  deserator	71	None	replace
34	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIATOR  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result    =    numerator.doubleValue()    *    DEDENIATOR.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	72	None	replace
35	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	111	None	add
36	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  not  a  statement	111	None	add
37	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	111	None	add
38	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  unreachable  statement	111	None	add
39	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	111	None	add
40	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator).doubleValue()  /  denominator,  sign;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator).doubleValue()  /  denominator,  sign;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator).doubleValue()  /  denominator,  sign;	  return    result    *    Math.sqrt(numerator).doubleValue()    /    denominator;    	non-compiled	[CE]  ';'  expected	114	None	replace
41	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  numerator).doubleValue()  /  denominator;  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  numerator).doubleValue()  /  denominator;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  numerator).doubleValue()  /  denominator;	  return    result    *    Math.sqrt(numerator).doubleValue()    /    denominator;    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	114	None	replace
42	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(result).doubleValue()  /  result;  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(result).doubleValue()  /  result;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(result).doubleValue()  /  result;	  return    result    *    Math.sqrt(numerator).doubleValue()    /    denominator;    	non-compiled	[CE]  double  cannot  be  dereferenced	114	None	replace
43	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result    =    numerator.doubleValue()    *    deserator.doubleValue();    	non-compiled	[CE]  missing  return  statement	75	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	17	6	replace
45	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	17	6	replace
46	[BUG]  [BUGGY]  double  result  =  denominator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  denominator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  denominator.doubleValue()  *  denominator.doubleValue();	  double    result    =    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	57	None	replace
47	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;	  result    =    numerator.doubleValue()    *    denominator.doubleValue()    +    1;    	non-compiled	[CE]  missing  return  statement	77	None	replace
48	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue()  /  1;  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue()  /  1;  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  denominator.doubleValue()  /  1;	  result    =    numerator.doubleValue()    *    denominator.doubleValue()    +    1;    	non-compiled	[CE]  missing  return  statement	77	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	48	6	replace
50	[BUG]  [BUGGY]  return  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	48	6	replace
51	[BUG]  [BUGGY]  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	48	None	replace
52	[BUG]  [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	89	None	replace
53	[BUG]  [BUGGY]  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	89	None	replace
54	[BUG]  [BUGGY]  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	89	None	replace
55	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	20	None	add
56	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	20	None	add
57	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	20	None	add
58	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	20	None	add
59	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	20	None	add
60	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  sign.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  sign.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator.doubleValue())/  sign.doubleValue();	  return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	39	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	39	6	replace
62	[BUG]  [BUGGY]  return  result  /  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	39	6	replace
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.rint(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	39	5	replace
64	[BUG]  [BUGGY]  return  result  *  Math.rint(numerator.doubleValue())/  denominator.doubleValue();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.rint(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	39	5	replace
65	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  result,  denominator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  result,  denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  result,  denominator);	  return    result    *    Math.sqrt(result,    denominator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	124	None	replace
66	[BUG]  [BUGGY]  return  result  /  Math.sqrt(result,  denominator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(result,  denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(result,  denominator);	  return    result    *    Math.sqrt(result,    denominator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	124	None	replace
67	[BUG]  [BUGGY]  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result    =    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	91	None	replace
68	[BUG]  [BUGGY]  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result    =    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	91	None	replace
69	[BUG]  [BUGGY]  result  =  Math.sqrt(numerator.doubleValue()  *  DEDENIATOR.doubleValue());  [CE]  cannot  find  symbol  DEDENIATOR  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.sqrt(numerator.doubleValue()  *  DEDENIATOR.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.sqrt(numerator.doubleValue()  *  DEDENIATOR.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result    =    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	91	None	replace
70	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	45	None	add
71	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  result  *  Math.sqrt(numerator.doubleValue());  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  result  *  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    result  *  Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  not  a  statement	45	None	add
72	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    double  result  =  Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	45	None	add
73	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	45	None	add
74	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue());  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    result  =  Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	45	None	add
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	2	6	replace
76	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  *  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	2	6	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *(numerator.doubleValue()  *  denominator.doubleValue()  +  1);	  return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	2	6	replace
78	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *(numerator.doubleValue()  *  denominator.doubleValue()  +  1);	  return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	2	6	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *(numerator.doubleValue()  *  denominator.doubleValue()  /  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	2	5	replace
80	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *(numerator.doubleValue()  *  denominator.doubleValue()  /  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	2	5	replace
81	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	18	None	add
82	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	18	None	add
83	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	18	None	add
84	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	18	None	add
85	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	18	None	add
86	[BUG]  [BUGGY]  result  =  denominator.doubleValue()  *  denominator.doubleValue();  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  denominator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  denominator.doubleValue()  *  denominator.doubleValue();	  result    =    denominator.doubleValue()    /    number.doubleValue();    	non-compiled	[CE]  missing  return  statement	14	None	replace
87	[BUG]  [BUGGY]  result  =  denominator.doubleValue()  /  den.doubleValue();  [CE]  cannot  find  symbol  den  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  denominator.doubleValue()  /  den.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  denominator.doubleValue()  /  den.doubleValue();	  result    =    denominator.doubleValue()    /    number.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  den	14	None	replace
88	[BUG]  [BUGGY]  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	144	None	replace
89	[BUG]  [BUGGY]  result  =  this.numerator.doubleValue()  *  denominator.doubleValue();  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  this.numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  this.numerator.doubleValue()  *  denominator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	144	None	replace
90	[BUG]  [BUGGY]  double  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	144	None	replace
91	[BUG]  [BUGGY]  result  =  this.numerator.doubleValue()  /  desnominator.doubleValue();  [CE]  cannot  find  symbol  desnominator  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  this.numerator.doubleValue()  /  desnominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  this.numerator.doubleValue()  /  desnominator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  desnominator	144	None	replace
92	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(result,  numerator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(result,  numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(result,  numerator);	  return    result    *    Math.sqrt(numerator,    numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	23	None	replace
93	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	84	None	add
94	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	84	None	add
95	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    double  result  =  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	84	None	add
96	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    result  =  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	84	None	add
97	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    double  result  =  numerator.doubleValue()  +  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	84	None	add
98	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	132	None	add
99	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	132	None	add
100	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	132	None	add
101	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  dOn  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  dOn  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  dOn  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	132	None	add
102	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  /  desnominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  /  desnominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  Math.sqrt(numerator.doubleValue()  /  desnominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	132	None	add
103	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [CE]  cannot  find  symbol  deserator  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  deserator.doubleValue();	  result    =    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  deserator	78	None	replace
104	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  /  Math.log(numerator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  /  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  /  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	81	None	replace
105	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  Math.log(numerator);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    Math.log(result);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	81	None	replace
106	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  /  Math.log(denominator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  /  Math.log(denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  /  Math.log(denominator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	81	None	replace
107	[BUG]  [BUGGY]  Double  result  =  numerator.doubleValue()  /  Math.log(numerator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Double  result  =  numerator.doubleValue()  /  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Double  result  =  numerator.doubleValue()  /  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	81	None	replace
108	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  result  /(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  result  /(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    result  /(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	3	None	add
109	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	3	None	add
110	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	3	None	add
111	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	3	None	add
112	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	3	None	add
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());	  return    result    /    Math.sqrt(numerator    +    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	87	6	replace
114	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());	  return    result    /    Math.sqrt(numerator    +    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	87	6	replace
115	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator  *  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator  *  denominator.doubleValue());	  return    result    /    Math.sqrt(numerator    +    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	87	None	replace
116	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  gcd);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  denominator,  gcd);	  return    result    *    Math.sqrt(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol  gcd	22	None	replace
117	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  doubleValue);  [CE]  cannot  find  symbol  doubleValue  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  doubleValue);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  denominator,  doubleValue);	  return    result    *    Math.sqrt(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol  doubleValue	22	None	replace
118	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  numerator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  denominator,  numerator);	  return    result    *    Math.sqrt(numerator,    denominator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	22	None	replace
119	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  numerator,  denominator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  numerator,  denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  numerator,  denominator);	  return    result    *    Math.sqrt(numerator,    denominator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	22	None	replace
120	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();	  	non-compiled	[CE]  not  a  statement	102	None	add
121	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  result  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  result  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    double  result  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	102	None	add
122	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  result  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  result  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    result  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();	  	non-compiled	[CE]  unreachable  statement	102	None	add
123	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	102	None	add
124	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  +  1  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  +  1  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    double  result  =  numerator.doubleValue()  +  1  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	102	None	add
125	[BUG]  [BUGGY]  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  not  a  statement	47	None	replace
126	[BUG]  [BUGGY]  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  not  a  statement	47	None	replace
127	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  sign.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  sign.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  sign.doubleValue();	  result    =    numerator.doubleValue()    *    num.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	76	None	replace
128	[BUG]  [BUGGY]  return  result  /  denominator;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  denominator;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  denominator;	  return    result    /    result;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	34	None	replace
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.max(result,  doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.max(result,  doubleValue());	  return    result    /    result;    	compilable	  [FE]  AssertionError  	34	6	replace
130	[BUG]  [BUGGY]  return  result  /  Math.max(result,  doubleValue());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.max(result,  doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.max(result,  doubleValue());	  return    result    /    result;    	compilable	  [FE]  AssertionError  	34	6	replace
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.max(result,  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.max(result,  1);	  return    result    /    result;    	compilable	  [FE]  AssertionError  	34	4	replace
132	[BUG]  [BUGGY]  return  result  /  Math.max(result,  1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.max(result,  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.max(result,  1);	  return    result    /    result;    	compilable	  [FE]  AssertionError  	34	4	replace
133	[BUG]  [BUGGY]  return  result  *  Math.log(result)/  2.0;  result  *  Math.log(result)/  2.0;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result)/  2.0;  result  *  Math.log(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result)/    2.0;    result  *  Math.log(result)/  2.0;	  	non-compiled	[CE]  not  a  statement	146	None	add
134	[BUG]  [BUGGY]  return  result  *  Math.log(result)/  2.0;  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result)/  2.0;  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result)/    2.0;    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	146	None	add
135	[BUG]  [BUGGY]  return  result  *  Math.log(result)/  2.0;  result  =  Math.log(result)/  2.0;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result)/  2.0;  result  =  Math.log(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result)/    2.0;    result  =  Math.log(result)/  2.0;	  	non-compiled	[CE]  unreachable  statement	146	None	add
136	[BUG]  [BUGGY]  return  result  *  Math.log(result)/  2.0;  double  result  =  Math.log(result)/  2.0;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result)/  2.0;  double  result  =  Math.log(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result)/    2.0;    double  result  =  Math.log(result)/  2.0;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	146	None	add
137	[BUG]  [BUGGY]  return  result  *  Math.log(result)/  2.0;  double  result  =  numerator.doubleValue()  /  Math.log(result)/  2.0;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result)/  2.0;  double  result  =  numerator.doubleValue()  /  Math.log(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result)/    2.0;    double  result  =  numerator.doubleValue()  /  Math.log(result)/  2.0;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	146	None	add
138	[BUG]  [BUGGY]  double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    Math.abs(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	99	None	replace
139	[BUG]  [BUGGY]  return  denominator  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  denominator  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  denominator  *(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    Math.abs(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	99	None	replace
140	[BUG]  [BUGGY]  Double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    Math.abs(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	99	None	replace
141	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator  *  Math.sqrt(numerator  /  denominator.doubleValue());  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator  *  Math.sqrt(numerator  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator  *  Math.sqrt(numerator  /  denominator.doubleValue());	  return    numerator.sqrt(result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	non-compiled	[CE]  ')'  expected	41	None	replace
142	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  /  result.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator  /  result.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  /  result.doubleValue());	  return    numerator.sqrt(result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	41	None	replace
143	[BUG]  [BUGGY]  return  result  *  denominator;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  denominator;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  denominator;	  return    result    *    num;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	35	None	replace
144	[BUG]  [BUGGY]  return  result  *  n;  [CE]  cannot  find  symbol  n  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  n;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  n;	  return    result    *    num;    	non-compiled	[CE]  cannot  find  symbol  n	35	None	replace
145	[BUG]  [BUGGY]  return  denominator  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  denominator  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  denominator  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	98	None	replace
146	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  *  denominator.doubleValue();	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	98	None	replace
147	[BUG]  [BUGGY]  return  numerator  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  *  denominator.doubleValue();	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	98	None	replace
148	[BUG]  [BUGGY]  double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    denominator    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	116	None	replace
149	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    denominator    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	116	None	replace
150	[BUG]  [BUGGY]  result  =  Math.sqrt(numerator.doubleValue());  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.sqrt(numerator.doubleValue());	  return    result    *    result;    double    result    =    Math.sqrt(numerator.doubleValue());    	non-compiled	[CE]  missing  return  statement	142	None	replace
151	[BUG]  [BUGGY]  double  result  =  Math.sqrt(numerator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  Math.sqrt(numerator.doubleValue());	  return    result    *    result;    double    result    =    Math.sqrt(numerator.doubleValue());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	142	None	replace
152	[BUG]  [BUGGY]  result  *=  numerator.doubleValue();  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *=  numerator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *=  numerator.doubleValue();	  return    result    *    result;    double    result    =    Math.sqrt(numerator.doubleValue());    	non-compiled	[CE]  missing  return  statement	142	None	replace
153	[BUG]  [BUGGY]  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    result;    double    result    =    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	140	None	replace
154	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  +  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    +    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	106	None	replace
155	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  +  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    +    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	106	None	replace
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	30	5	replace
157	[BUG]  [BUGGY]  return  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	30	5	replace
158	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	30	None	replace
159	[BUG]  [BUGGY]  double  result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());	  return    doubleValue    *(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	139	None	replace
160	[BUG]  [BUGGY]  result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());	  return    doubleValue    *(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	139	None	replace
161	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  /  numerator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator  /  numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  /  numerator.doubleValue());	  return    denominator    *    Math.sqrt(numerator    /    result.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	42	None	replace
162	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(numerator  /  result.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(numerator  /  result.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(numerator  /  result.doubleValue());	  return    denominator    *    Math.sqrt(numerator    /    result.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	42	None	replace
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  *  result  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  numerator.doubleValue()  *(numerator.doubleValue()  *  result  /  denominator.doubleValue());	  return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	6	6	replace
164	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  *  result  /  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  *  result  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator.doubleValue()  *(numerator.doubleValue()  *  result  /  denominator.doubleValue());	  return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	6	6	replace
165	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  result  /  denominator.doubleValue();  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  result  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  result  /  denominator.doubleValue();	  result    =    result    *    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  missing  return  statement	136	None	replace
166	[BUG]  [BUGGY]  result  =  result  *  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  numerator.doubleValue()  /  denominator.doubleValue();	  result    =    result    *    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  missing  return  statement	136	None	replace
167	[BUG]  [BUGGY]  result  =  result  *  denominator.doubleValue()  /  sign.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  denominator.doubleValue()  /  sign.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  denominator.doubleValue()  /  sign.doubleValue();	  result    =    result    *    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	136	None	replace
168	[BUG]  [BUGGY]  result  *  Math.log(result);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *  Math.log(result);	  return    result    *    Math.log(result);    result    *    Math.log(result);    	non-compiled	[CE]  not  a  statement	80	None	replace
169	[BUG]  [BUGGY]  result  =  result  *  Math.log(result);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.log(result);	  return    result    *    Math.log(result);    result    *    Math.log(result);    	non-compiled	[CE]  missing  return  statement	80	None	replace
170	[BUG]  [BUGGY]  result  *  Math.ceil(result);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *  Math.ceil(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *  Math.ceil(result);	  return    result    *    Math.log(result);    result    *    Math.log(result);    	non-compiled	[CE]  not  a  statement	80	None	replace
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.log(result)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	compilable	  [FE]  AssertionError  	147	5	replace
172	[BUG]  [BUGGY]  return  result  /  Math.log(result)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.log(result)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	compilable	  [FE]  AssertionError  	147	5	replace
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.rint(result)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	compilable	  [FE]  AssertionError  	147	5	replace
174	[BUG]  [BUGGY]  return  result  *  Math.rint(result)/  2.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.rint(result)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	compilable	  [FE]  AssertionError  	147	5	replace
175	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sin(result)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	compilable	  [FE]  AssertionError  	147	5	replace
176	[BUG]  [BUGGY]  return  result  *  Math.sin(result)/  2.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sin(result)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	compilable	  [FE]  AssertionError  	147	5	replace
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.log(result  /  2.0);	  return    result    *    Math.log(result    /    2.0);    	compilable	  [FE]  AssertionError  	129	5	replace
178	[BUG]  [BUGGY]  return  result  /  Math.log(result  /  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.log(result  /  2.0);	  return    result    *    Math.log(result    /    2.0);    	compilable	  [FE]  AssertionError  	129	5	replace
179	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.rint(result  /  2.0);	  return    result    *    Math.log(result    /    2.0);    	compilable	  [FE]  AssertionError  	129	5	replace
180	[BUG]  [BUGGY]  return  result  *  Math.rint(result  /  2.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.rint(result  /  2.0);	  return    result    *    Math.log(result    /    2.0);    	compilable	  [FE]  AssertionError  	129	5	replace
181	[BUG]  [BUGGY]  return  result  *  Math.log(result  /  2.0,  denominator);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result  /  2.0,  denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(result  /  2.0,  denominator);	  return    result    *    Math.log(result    /    2.0);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	129	None	replace
182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  numerator.doubleValue()  /  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	65	2	replace
183	[BUG]  [BUGGY]  return  numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator.doubleValue()  /  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	65	2	replace
184	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	5	None	add
185	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	5	None	add
186	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	5	None	add
187	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	5	None	add
188	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  desnominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  desnominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    double  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  desnominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	5	None	add
189	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  result  *(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  result  *(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    result  *(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	1	None	add
190	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	1	None	add
191	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	1	None	add
192	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	1	None	add
193	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  unreachable  statement	1	None	add
194	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.rint(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.rint(result);	  return    result    /    Math.log(result);    	compilable	  [FE]  AssertionError  	60	5	replace
195	[BUG]  [BUGGY]  return  result  /  Math.rint(result);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.rint(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.rint(result);	  return    result    /    Math.log(result);    	compilable	  [FE]  AssertionError  	60	5	replace
196	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sin(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.sin(result);	  return    result    /    Math.log(result);    	compilable	  [FE]  AssertionError  	60	5	replace
197	[BUG]  [BUGGY]  return  result  /  Math.sin(result);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sin(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sin(result);	  return    result    /    Math.log(result);    	compilable	  [FE]  AssertionError  	60	5	replace
198	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()).doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()).doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()).doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	43	None	replace
199	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue(),  denominator.doubleValue()).doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue(),  denominator.doubleValue()).doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue(),  denominator.doubleValue()).doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	43	None	replace
200	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()),  denominator.doubleValue();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()),  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()),  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()).doubleValue();    	non-compiled	[CE]  ';'  expected	43	None	replace
201	[BUG]  [BUGGY]  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    Math.abs(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	92	None	replace
202	[BUG]  [BUGGY]  return  denominator  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  denominator  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  denominator  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    Math.abs(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	92	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
204	[BUG]  [BUGGY]  return  result  /  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.rint(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
206	[BUG]  [BUGGY]  return  result  *  Math.rint(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.rint(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
207	[BUG]  [BUGGY]  result  =  result  *  numerator.doubleValue();  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  numerator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  numerator.doubleValue();	  result    =    result    *    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	119	None	replace
208	[BUG]  [BUGGY]  result  =  numerator  *  result.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator  *  result.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator  *  result.doubleValue();	  result    =    result    *    denominator.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	119	None	replace
209	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  n);  [CE]  cannot  find  symbol  n  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  n);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  n);	  return    result    *    Math.sqrt(numerator,    fraction);    	non-compiled	[CE]  cannot  find  symbol  n	25	None	replace
210	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	126	None	add
211	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  not  a  statement	126	None	add
212	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  result  =  numerator.doubleValue()  *  denominator.doubleValue()  +  1;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	126	None	add
213	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	126	None	add
214	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;	  	non-compiled	[CE]  unreachable  statement	126	None	add
215	[BUG]  [BUGGY]  Double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	51	None	replace
216	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    deserator.doubleValue();    	non-compiled	[CE]  missing  return  statement	101	None	replace
217	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [CE]  cannot  find  symbol  deserator  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  deserator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    deserator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  deserator	101	None	replace
218	[BUG]  [BUGGY]  double  result  =  denominator.doubleValue()  /  deserator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  denominator.doubleValue()  /  deserator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  denominator.doubleValue()  /  deserator.doubleValue();	  double    result    =    deserator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	58	None	replace
219	[BUG]  [BUGGY]  return  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	105	None	replace
220	[BUG]  [BUGGY]  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  not  a  statement	105	None	replace
221	[BUG]  [BUGGY]  result  =  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	37	None	replace
222	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue())/  denominator.doubleValue();	  return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	37	6	replace
223	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue())/  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue())/  denominator.doubleValue();	  return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	37	6	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	127	5	replace
225	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	127	5	replace
226	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator),  numerator.doubleValue();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator),  numerator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator),  numerator.doubleValue();	  return    result    *    Math.sqrt(numerator),    numerator.doubleValue();    	non-compiled	[CE]  ';'  expected	137	None	replace
227	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator),  denominator.doubleValue();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator),  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator),  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator),    numerator.doubleValue();    	non-compiled	[CE]  ';'  expected	137	None	replace
228	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator)/  denominator.doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator)/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator),    numerator.doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	137	None	replace
229	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    numerator.doubleValue()    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	32	None	replace
230	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    numerator.doubleValue()    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	32	None	replace
231	[BUG]  [BUGGY]  Double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    numerator.doubleValue()    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	32	None	replace
232	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  den.doubleValue();  result  =  numerator.doubleValue()  /  den.doubleValue();  [CE]  cannot  find  symbol  den  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  den.doubleValue();  result  =  numerator.doubleValue()  /  den.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  den.doubleValue();  result  =  numerator.doubleValue()  /  den.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    desnominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  den	9	None	replace
233	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	7	2	add
234	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	7	2	add
235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	7	2	add
236	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	7	2	add
237	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	7	None	add
238	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  desnominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  desnominator  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  desnominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  desnominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  desnominator	7	None	add
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	7	2	add
240	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	7	2	add
241	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  desominator);  [CE]  cannot  find  symbol  desominator  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  desominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  desominator);	  return    result    *    Math.sqrt(denominator,    numerator);    	non-compiled	[CE]  cannot  find  symbol  desominator	135	None	replace
242	[BUG]  [BUGGY]  result  =  denominator.doubleValue()  /  numerator.doubleValue();  result  =  number.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  number  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  denominator.doubleValue()  /  numerator.doubleValue();  result  =  number.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  denominator.doubleValue()  /  numerator.doubleValue();  result  =  number.doubleValue()  /  denominator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    number.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  number	11	None	replace
243	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  number.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  number  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  number.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  number.doubleValue()  /  denominator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    number.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  number	11	None	replace
244	[BUG]  [BUGGY]  result  =  denominator.doubleValue()  /  fraction.doubleValue();  [CE]  cannot  find  symbol  fraction  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  denominator.doubleValue()  /  fraction.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  denominator.doubleValue()  /  fraction.doubleValue();	  result    =    fraction.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  fraction	138	None	replace
245	[BUG]  [BUGGY]  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  not  a  statement	52	None	replace
246	[BUG]  [BUGGY]  result  *(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  not  a  statement	52	None	replace
247	[BUG]  [BUGGY]  Result  result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Result  result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());  result  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Result  result  =  result  *(numerator.doubleValue()  /  denominator.doubleValue());  result  *(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    result    *(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  not  a  statement	52	None	replace
248	[BUG]  [BUGGY]  Result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  cannot  find  symbol  Result  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Result  =  numerator.doubleValue()  *  denominator.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    Result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  Result	93	None	replace
249	[BUG]  [BUGGY]  double  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	29	None	replace
250	[BUG]  [BUGGY]  double  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	29	None	replace
251	[BUG]  [BUGGY]  return  result  *  Math.log(result  /  2.0);  result  *  Math.log(result  /  2.0);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result  /  2.0);  result  *  Math.log(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result    /    2.0);    result  *  Math.log(result  /  2.0);	  	non-compiled	[CE]  not  a  statement	128	None	add
252	[BUG]  [BUGGY]  return  result  *  Math.log(result  /  2.0);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result  /  2.0);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result    /    2.0);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	128	None	add
253	[BUG]  [BUGGY]  return  result  *  Math.log(result  /  2.0);  double  result  =  numerator.doubleValue()  /  Math.log(result  /  2.0);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result  /  2.0);  double  result  =  numerator.doubleValue()  /  Math.log(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result    /    2.0);    double  result  =  numerator.doubleValue()  /  Math.log(result  /  2.0);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	128	None	add
254	[BUG]  [BUGGY]  return  result  *  Math.log(result  /  2.0);  result  =  Math.log(result  /  2.0);  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result  /  2.0);  result  =  Math.log(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result    /    2.0);    result  =  Math.log(result  /  2.0);	  	non-compiled	[CE]  unreachable  statement	128	None	add
255	[BUG]  [BUGGY]  return  result  *  Math.log(result  /  2.0);  double  result  =  numerator.doubleValue()  *  Math.log(result  /  2.0);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result  /  2.0);  double  result  =  numerator.doubleValue()  *  Math.log(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result    /    2.0);    double  result  =  numerator.doubleValue()  *  Math.log(result  /  2.0);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	128	None	add
256	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  result  *  Math.rint(result);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result);  result  *  Math.rint(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.rint(result);    result  *  Math.rint(result);	  	non-compiled	[CE]  not  a  statement	63	None	add
257	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.rint(result);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	63	None	add
258	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  /  Math.rint(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  /  Math.rint(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.rint(result);    double  result  =  numerator.doubleValue()  /  Math.rint(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	63	None	add
259	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  result  =  Math.rint(result);  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result);  result  =  Math.rint(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.rint(result);    result  =  Math.rint(result);	  	non-compiled	[CE]  unreachable  statement	63	None	add
260	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  double  result  =  Math.rint(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result);  double  result  =  Math.rint(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.rint(result);    double  result  =  Math.rint(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	63	None	add
261	[BUG]  [BUGGY]  double  result  =  denominator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  denominator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  denominator.doubleValue()  /  denominator.doubleValue();	  double    result    =    denominator.doubleValue()    *    numerator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	26	None	replace
262	[BUG]  [BUGGY]  return  result  *  Math.rint(numerator);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.rint(numerator);	  return    result    *    Math.rint(result);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	64	None	replace
263	[BUG]  [BUGGY]  result  =  result  *  Math.sqrt(numerator  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.sqrt(numerator  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.sqrt(numerator  /  denominator.doubleValue());	  return    numerator    *    Math.sqrt(result    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	134	None	replace
264	[BUG]  [BUGGY]  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  not  a  statement	28	None	replace
265	[BUG]  [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  not  a  statement	28	None	replace
266	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	28	None	replace
267	[BUG]  [BUGGY]  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  not  a  statement	28	None	replace
268	[BUG]  [BUGGY]  return  result  /  result;  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  result;  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    result;    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	33	None	add
269	[BUG]  [BUGGY]  return  result  /  result;  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  result;  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    result;    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	33	None	add
270	[BUG]  [BUGGY]  return  result  /  result;  result  /  denominator.doubleValue();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  result;  result  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    result;    result  /  denominator.doubleValue();	  	non-compiled	[CE]  not  a  statement	33	None	add
271	[BUG]  [BUGGY]  return  result  /  result;  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  result;  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    result;    double  result  =  numerator.doubleValue()  %  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	33	None	add
272	[BUG]  [BUGGY]  return  result  /  result;  double  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  result;  double  result  =  numerator.doubleValue()  /  deserator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    result;    double  result  =  numerator.doubleValue()  /  deserator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	33	None	add
273	[BUG]  [BUGGY]  BigFraction  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  BigFraction  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	BigFraction  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    BigFraction    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	115	None	replace
274	[BUG]  [BUGGY]  BigFraction  result  =  Math.abs(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  BigFraction  result  =  Math.abs(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	BigFraction  result  =  Math.abs(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    BigFraction    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	115	None	replace
275	[BUG]  [BUGGY]  BigFraction  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  BigFraction  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	BigFraction  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    BigFraction    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	115	None	replace
276	[BUG]  [BUGGY]  result  =  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	19	None	replace
277	[BUG]  [BUGGY]  result  =  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	19	None	replace
278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	112	6	replace
279	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	112	6	replace
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	112	5	replace
281	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	112	5	replace
282	[BUG]  [BUGGY]  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    denominator    =    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	118	None	replace
283	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    denominator    =    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	118	None	replace
284	[BUG]  [BUGGY]  double  denominator  =  Math.sqrt(numerator.doubleValue());  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  denominator  =  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  denominator  =  Math.sqrt(numerator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    denominator    =    Math.sqrt(numerator.doubleValue());    	non-compiled	[CE]  missing  return  statement	117	None	replace
285	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.log(numerator.doubleValue());  [CE]  unreachable  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.log(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.log(numerator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    denominator    =    Math.sqrt(numerator.doubleValue());    	non-compiled	[CE]  unreachable  statement	117	None	replace
286	[BUG]  [BUGGY]  return  result  /  Math.log(result);  result  /  Math.log(result);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result);  result  /  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.log(result);    result  /  Math.log(result);	  	non-compiled	[CE]  not  a  statement	59	None	add
287	[BUG]  [BUGGY]  return  result  /  Math.log(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.log(result);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	59	None	add
288	[BUG]  [BUGGY]  return  result  /  Math.log(result);  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result);  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.log(result);    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	59	None	add
289	[BUG]  [BUGGY]  return  result  /  Math.log(result);  double  result  =  numerator.doubleValue()  /  Math.log(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result);  double  result  =  numerator.doubleValue()  /  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.log(result);    double  result  =  numerator.doubleValue()  /  Math.log(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	59	None	add
290	[BUG]  [BUGGY]  return  result  /  Math.log(result);  Double  result  =  numerator.doubleValue()  /  Math.log(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result);  Double  result  =  numerator.doubleValue()  /  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.log(result);    Double  result  =  numerator.doubleValue()  /  Math.log(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	59	None	add
291	[BUG]  [BUGGY]  result  =  Math.max(result,  numerator.doubleValue()  /  denominator.doubleValue());  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.max(result,  numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.max(result,  numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result    =    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	88	None	replace
292	[BUG]  [BUGGY]  result  =  Math.abs(result  *  numerator.doubleValue()  /  denominator.doubleValue());  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.abs(result  *  numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.abs(result  *  numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result    =    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	88	None	replace
293	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	70	5	add
294	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	70	5	add
295	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	70	5	add
296	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	70	5	add
297	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	70	None	add
298	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIATOR  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	70	None	add
299	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIATOR  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	70	None	add
300	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	16	None	add
301	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	16	None	add
302	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	16	None	add
303	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	16	None	add
304	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	16	None	add
305	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.sqrt(numerator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue());    	compilable	  [FE]  AssertionError  	46	5	replace
306	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue());    	compilable	  [FE]  AssertionError  	46	5	replace
307	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sin(numerator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue());    	compilable	  [FE]  AssertionError  	46	6	replace
308	[BUG]  [BUGGY]  return  result  *  Math.sin(numerator.doubleValue());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sin(numerator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue());    	compilable	  [FE]  AssertionError  	46	6	replace
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.sqrt(result);	  return    result    *    Math.sqrt(result);    	compilable	  [FE]  AssertionError  	95	5	replace
310	[BUG]  [BUGGY]  return  result  /  Math.sqrt(result);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(result);	  return    result    *    Math.sqrt(result);    	compilable	  [FE]  AssertionError  	95	5	replace
311	[BUG]  [BUGGY]  return  result  *  Math.log(result));  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result));  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(result));	  return    result    *    Math.sqrt(result);    	non-compiled	[CE]  ';'  expected	95	None	replace
312	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  DEDENIATOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIATOR  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  DEDENIATOR.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    DEDENIATOR.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	12	None	replace
313	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  DEDENIATOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIATOR  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  DEDENIATOR.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    DEDENIATOR.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	12	None	replace
314	[BUG]  [BUGGY]  return  denominator  *  Math.sqrt(numerator  +  result.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  denominator  *  Math.sqrt(numerator  +  result.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  denominator  *  Math.sqrt(numerator  +  result.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    +    denominator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	86	None	replace
315	[BUG]  [BUGGY]  return  denominator  *  Math.sqrt(numerator  +  numerator.doubleValue()  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  denominator  *  Math.sqrt(numerator  +  numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  denominator  *  Math.sqrt(numerator  +  numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    +    denominator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	86	None	replace
316	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	2	add
317	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	2	add
318	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	2	add
319	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	2	add
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	2	add
321	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	2	add
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	2	add
323	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	2	add
324	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  results  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  results  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  results  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  results  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  results	143	None	add
325	[BUG]  [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  not  a  statement	145	None	replace
326	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  not  a  statement	36	None	add
327	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  result  =  numerator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	36	None	add
328	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	36	None	add
329	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	36	None	add
330	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  unreachable  statement	36	None	add
331	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	133	6	replace
332	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	133	6	replace
333	[BUG]  [BUGGY]  return  Math.sqrt(result.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  Math.sqrt(result.doubleValue()  /  denominator.doubleValue());	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	133	None	replace
334	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  *  result.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  *  result.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  Math.sqrt(numerator.doubleValue()  *  result.doubleValue());	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	133	None	replace
335	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()).doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator.doubleValue()).doubleValue();	  return    result    /    Math.sqrt(numerator).doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	44	None	replace
336	[BUG]  [BUGGY]  result  =  result  /(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  /(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  /(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	4	None	replace
337	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  +(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  +(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	4	5	replace
338	[BUG]  [BUGGY]  return  result  +(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  +(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  +(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	4	5	replace
339	[BUG]  [BUGGY]  double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    result    =    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	131	None	replace
340	[BUG]  [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    result    =    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	131	None	replace
341	[BUG]  [BUGGY]  return  result  *  Math.sin(numerator);  [CE]  method  sin  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sin(numerator);	  return    result    *    Math.sin(result);    	non-compiled	[CE]  method  sin  in  class  Math  cannot  be  applied  to  given  types;	62	None	replace
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sin(result  /  2.0);	  return    result    *    Math.sin(result);    	compilable	  [FE]  AssertionError  	62	5	replace
343	[BUG]  [BUGGY]  return  result  *  Math.sin(result  /  2.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sin(result  /  2.0);	  return    result    *    Math.sin(result);    	compilable	  [FE]  AssertionError  	62	5	replace
344	[BUG]  [BUGGY]  double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    Math.abs(numerator.doubleValue()    -    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	97	None	replace
345	[BUG]  [BUGGY]  return  result  *  Math.sin(result);  result  *  Math.sin(result);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result);  result  *  Math.sin(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sin(result);    result  *  Math.sin(result);	  	non-compiled	[CE]  not  a  statement	61	None	add
346	[BUG]  [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sin(result);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	61	None	add
347	[BUG]  [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  /  Math.sin(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  /  Math.sin(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sin(result);    double  result  =  numerator.doubleValue()  /  Math.sin(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	61	None	add
348	[BUG]  [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  *  Math.sin(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  *  Math.sin(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sin(result);    double  result  =  numerator.doubleValue()  *  Math.sin(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	61	None	add
349	[BUG]  [BUGGY]  return  result  *  Math.sin(result);  result  =  Math.sin(result);  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result);  result  =  Math.sin(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sin(result);    result  =  Math.sin(result);	  	non-compiled	[CE]  unreachable  statement	61	None	add
350	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator,  denominator).doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator,  denominator).doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator,  denominator).doubleValue();	  return    result    *    Math.sqrt(numerator,    denominator).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	113	None	replace
351	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue(),  denominator).doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue(),  denominator).doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue(),  denominator).doubleValue();	  return    result    *    Math.sqrt(numerator,    denominator).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	113	None	replace
352	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  gcd).doubleValue();  [CE]  cannot  find  symbol  gcd  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  gcd).doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  denominator,  gcd).doubleValue();	  return    result    *    Math.sqrt(numerator,    denominator).doubleValue();    	non-compiled	[CE]  cannot  find  symbol  gcd	113	None	replace
353	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(result);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	94	None	add
354	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  result  *  Math.sqrt(result);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result);  result  *  Math.sqrt(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(result);    result  *  Math.sqrt(result);	  	non-compiled	[CE]  not  a  statement	94	None	add
355	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  numerator.doubleValue()  /  Math.sqrt(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  numerator.doubleValue()  /  Math.sqrt(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(result);    double  result  =  numerator.doubleValue()  /  Math.sqrt(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	94	None	add
356	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result);  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(result);    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	94	None	add
357	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  Double  result  =  numerator.doubleValue()  /  Math.sqrt(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result);  Double  result  =  numerator.doubleValue()  /  Math.sqrt(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(result);    Double  result  =  numerator.doubleValue()  /  Math.sqrt(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	94	None	add
358	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  sum.doubleValue();  [CE]  cannot  find  symbol  sum  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  sum.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue())/  sum.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    sign.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sum	40	None	replace
359	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  DEDENIOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIOR  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  DEDENIOR.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue())/  DEDENIOR.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    sign.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  DEDENIOR	40	None	replace
360	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  deserator.doubleValue();  [CE]  cannot  find  symbol  deserator  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  deserator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue())/  deserator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    sign.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  deserator	40	None	replace
361	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  *  Math.log(numerator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  *  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  *  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    *    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	82	None	replace
362	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  Math.log(result);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  Math.log(result);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    *    Math.log(result);    	non-compiled	[CE]  missing  return  statement	82	None	replace
363	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  Math.log(numerator);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    *    Math.log(result);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	82	None	replace
364	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  *  Math.log(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  *  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  *  Math.log(result);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    *    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	82	None	replace
365	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  %  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    %    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	107	None	replace
366	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  %  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    %    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	107	None	replace
367	[BUG]  [BUGGY]  return  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    %    denominator.doubleValue();    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	107	None	replace
368	[BUG]  [BUGGY]  Double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Double  result  =  numerator.doubleValue()  %  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    %    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	107	None	replace
369	[BUG]  [BUGGY]  result  =  denominator.doubleValue()  /  denominator.doubleValue();  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  denominator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  denominator.doubleValue()  /  denominator.doubleValue();	  result    =    denominator.doubleValue()    *    numerator.doubleValue();    	non-compiled	[CE]  missing  return  statement	125	None	replace
370	[BUG]  [BUGGY]  result  *=  result;  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *=  result;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *=  result;	  return    result    *    result;    result    *    result;    	non-compiled	[CE]  missing  return  statement	69	None	replace
371	[BUG]  [BUGGY]  return  result  /  result;  result  *  result;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  result;  result  *  result;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  result;  result  *  result;	  return    result    *    result;    result    *    result;    	non-compiled	[CE]  not  a  statement	69	None	replace
372	[BUG]  [BUGGY]  result  *=  numerator;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *=  numerator;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *=  numerator;	  return    result    *    result;    result    *    result;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	69	None	replace
373	[BUG]  [BUGGY]  result  =  result  *  denominator.doubleValue()  %  denominator.doubleValue();  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  denominator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  denominator.doubleValue()  %  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    %    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	121	None	replace
374	[BUG]  [BUGGY]  result  =  number.doubleValue()  *  denominator.doubleValue();  [CE]  cannot  find  symbol  number  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  number.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  number.doubleValue()  *  denominator.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result    =    number.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  number	130	None	replace
375	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  number.doubleValue()  *  denominator.doubleValue();  [CE]  cannot  find  symbol  number  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  number.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  number.doubleValue()  *  denominator.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result    =    number.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  number	130	None	replace
376	[BUG]  [BUGGY]  result  =  denominator.doubleValue()  /  multiplier.doubleValue();  [CE]  cannot  find  symbol  multiplier  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  denominator.doubleValue()  /  multiplier.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  denominator.doubleValue()  /  multiplier.doubleValue();	  result    =    multiplier.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  multiplier	13	None	replace
377	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  *  result,  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator  *  result,  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  *  result,  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    *    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	109	None	replace
378	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  *  denominator.doubleValue()  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator  *  denominator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  *  denominator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    *    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	109	None	replace
379	[BUG]  [BUGGY]  result  *=  denominator.doubleValue();  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *=  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *=  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	67	None	replace
380	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  den.doubleValue();  [CE]  cannot  find  symbol  den  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  den.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  den.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    deserator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  den	101	None	replace
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sin(result)/  denominator.doubleValue();	  return    result    *    Math.sin(result);    	compilable	  [FE]  AssertionError  	62	5	replace
382	[BUG]  [BUGGY]  return  result  *  Math.sin(result)/  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sin(result)/  denominator.doubleValue();	  return    result    *    Math.sin(result);    	compilable	  [FE]  AssertionError  	62	5	replace
383	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result);  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.rint(result);    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	63	None	add
384	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.rint(result);    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	63	None	add
385	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.rint(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.rint(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.rint(result);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.rint(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	63	None	add
386	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  *  Math.rint(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  *  Math.rint(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.rint(result);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  *  Math.rint(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	63	None	add
387	[BUG]  [BUGGY]  return  result  /  result;  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  result;  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    result;    Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	33	None	add
388	[BUG]  [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sin(result);    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	61	None	add
389	[BUG]  [BUGGY]  return  result  *  Math.sin(result);  double  result  =  Math.sin(numerator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result);  double  result  =  Math.sin(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sin(result);    double  result  =  Math.sin(numerator);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	61	None	add
390	[BUG]  [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sin(result);    double  result  =  numerator.doubleValue()  %  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	61	None	add
391	[BUG]  [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sin(result);    double  result  =  numerator.doubleValue()  +  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	61	None	add
392	[BUG]  [BUGGY]  result  =  result  *  Math.log(numerator);  result  *  Math.log(result);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.log(numerator);  result  *  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.log(numerator);  result  *  Math.log(result);	  return    result    *    Math.log(result);    result    *    Math.log(result);    	non-compiled	[CE]  not  a  statement	80	None	replace
393	[BUG]  [BUGGY]  result  =  result  *  Math.sqrt(numerator);  result  *  Math.log(result);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.sqrt(numerator);  result  *  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.sqrt(numerator);  result  *  Math.log(result);	  return    result    *    Math.log(result);    result    *    Math.log(result);    	non-compiled	[CE]  not  a  statement	80	None	replace
394	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  unreachable  statement	111	None	add
395	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  double  cannot  be  dereferenced	111	None	add
396	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  BigFraction  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  BigFraction  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    BigFraction  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	111	None	add
397	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  2);  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  2);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  2);	  	non-compiled	[CE]  unreachable  statement	111	None	add
398	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	103	6	replace
399	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    	compilable	  [FE]  AssertionError  	103	6	replace
400	[BUG]  [BUGGY]  result  =  numerator  *  result.doubleValue()  /  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator  *  result.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator  *  result.doubleValue()  /  denominator.doubleValue();	  result    =    result    *    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	136	None	replace
401	[BUG]  [BUGGY]  result  =  result  *  num.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  num  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  num.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  num.doubleValue()  /  denominator.doubleValue();	  result    =    result    *    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  num	136	None	replace
402	[BUG]  [BUGGY]  result  =  result  *  sign.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  sign.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  sign.doubleValue()  /  denominator.doubleValue();	  result    =    result    *    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	136	None	replace
403	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(result);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(result);	  return    result    *    Math.sqrt(numerator,    numerator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	23	None	replace
404	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  Math.sqrt(numerator.doubleValue());  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	45	None	add
405	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue());  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	45	None	add
406	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  BigFraction.doubleValue  =  Math.sqrt(numerator.doubleValue());  [CE]  cannot  find  symbol  doubleValue  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  BigFraction.doubleValue  =  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    BigFraction.doubleValue  =  Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  cannot  find  symbol  doubleValue	45	None	add
407	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue());  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	45	None	add
408	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIATOR  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result    =    numerator.doubleValue()    *    deserator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	75	None	replace
409	[BUG]  [BUGGY]  result  =  Math.sqrt(result);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.sqrt(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.sqrt(result);	  return    result    *    result;    double    result    =    Math.sqrt(numerator.doubleValue());    	non-compiled	[CE]  missing  return  statement	142	None	replace
410	[BUG]  [BUGGY]  return  result  *  Math.sqrt(denominator),  numerator.doubleValue();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(denominator),  numerator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(denominator),  numerator.doubleValue();	  return    result    *    Math.sqrt(numerator),    numerator.doubleValue();    	non-compiled	[CE]  ';'  expected	137	None	replace
411	[BUG]  [BUGGY]  result  =  result  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIATOR  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  DEDENIATOR.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result    =    numerator.doubleValue()    *    DEDENIATOR.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	72	None	replace
412	[BUG]  [BUGGY]  result  =  result  *  denominator.doubleValue();  result  =  result.doubleValue()  *  DEDENIATOR.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  denominator.doubleValue();  result  =  result.doubleValue()  *  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  denominator.doubleValue();  result  =  result.doubleValue()  *  DEDENIATOR.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result    =    numerator.doubleValue()    *    DEDENIATOR.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	72	None	replace
413	[BUG]  [BUGGY]  result  =  nOd.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  nOd  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  nOd.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  nOd.doubleValue()  /  denominator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    num.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  nOd	100	None	replace
414	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    %    denominator.doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	107	None	replace
415	[BUG]  [BUGGY]  result  =  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    %    denominator.doubleValue();    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	107	None	replace
416	[BUG]  [BUGGY]  result  =  Math.sqrt(result  *  denominator.doubleValue())/  denominator.doubleValue();  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.sqrt(result  *  denominator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.sqrt(result  *  denominator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	31	None	replace
417	[BUG]  [BUGGY]  result  =  Math.abs(result)/  denominator.doubleValue();  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.abs(result)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.abs(result)/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	31	None	replace
418	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  denominator;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue())/  denominator;	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    denominator    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	116	None	replace
419	[BUG]  [BUGGY]  return  denominator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  denominator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  denominator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    denominator    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	116	None	replace
420	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.abs(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.abs(result);	  return    result    /    result;    	compilable	  [FE]  AssertionError  	34	5	replace
421	[BUG]  [BUGGY]  return  result  /  Math.abs(result);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.abs(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.abs(result);	  return    result    /    result;    	compilable	  [FE]  AssertionError  	34	5	replace
422	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	add
423	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.floor(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.floor(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.floor(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	add
424	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  Math.log(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  Math.log(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    Math.log(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	20	None	add
425	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(result  /  2.0);	  return    result    *    Math.log(result    /    2.0);    	compilable	  [FE]  AssertionError  	129	5	replace
426	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result  /  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(result  /  2.0);	  return    result    *    Math.log(result    /    2.0);    	compilable	  [FE]  AssertionError  	129	5	replace
427	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(result);    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	94	None	add
428	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  result  =  Math.sqrt(result);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result);  result  =  Math.sqrt(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(result);    result  =  Math.sqrt(result);	  	non-compiled	[CE]  unreachable  statement	94	None	add
429	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  Math.sqrt(numerator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  Math.sqrt(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(result);    double  result  =  Math.sqrt(numerator);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	94	None	add
430	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(denominator,  result);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(denominator,  result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(denominator,  result);	  return    result    *    Math.sqrt(denominator,    numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	135	None	replace
431	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction  result  =(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction  result  =(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    BigFraction  result  =(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	3	None	add
432	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	3	None	add
433	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction  result  =(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction  result  =(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    BigFraction  result  =(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	3	None	add
434	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  result  /(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  result  /(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    result  /(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	3	None	add
435	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  numerator.doubleValue()  *(numerator.doubleValue()  *  denominator.doubleValue());	  return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	6	6	replace
436	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  *  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator.doubleValue()  *(numerator.doubleValue()  *  denominator.doubleValue());	  return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	6	6	replace
437	[BUG]  [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	28	None	replace
438	[BUG]  [BUGGY]  return  result  *(numerator  *  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *(numerator  *  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    Math.abs(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	99	None	replace
439	[BUG]  [BUGGY]  result  =  result  *  Math.log(numerator);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    *    Math.log(result);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	82	None	replace
440	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  sign.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  sign.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  sign.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    desnominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	9	None	replace
441	[BUG]  [BUGGY]  result  *  result;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *  result;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *  result;	  return    result    *    result;    result    *    result;    	non-compiled	[CE]  not  a  statement	69	None	replace
442	[BUG]  [BUGGY]  return  result  *  num;  result  *  result;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  num;  result  *  result;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  num;  result  *  result;	  return    result    *    result;    result    *    result;    	non-compiled	[CE]  not  a  statement	69	None	replace
443	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator);  result  *  Math.abs(result);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator);  result  *  Math.abs(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator);  result  *  Math.abs(result);	  return    result    *    result;    result    *    result;    	non-compiled	[CE]  not  a  statement	69	None	replace
444	[BUG]  [BUGGY]  return  result  /  Math.log(result);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.log(result);    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	59	None	add
445	[BUG]  [BUGGY]  return  result  /  Math.log(result);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.log(result);    double  result  =  numerator.doubleValue()  +  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	59	None	add
446	[BUG]  [BUGGY]  return  result  +  Math.sqrt(numerator  +  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  +  Math.sqrt(numerator  +  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  +  Math.sqrt(numerator  +  denominator.doubleValue());	  return    result    /    Math.sqrt(numerator    +    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	87	None	replace
447	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  0.5);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  0.5);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  denominator,  0.5);	  return    result    *    Math.sqrt(numerator,    denominator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	22	None	replace
448	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  *  DEDENIOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIOR  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  *  DEDENIOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  *  DEDENIOR.doubleValue();	  result    =    numerator.doubleValue()    *    num.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  DEDENIOR	76	None	replace
449	[BUG]  [BUGGY]  BigFraction  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  BigFraction  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	BigFraction  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    BigFraction    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	115	None	replace
450	[BUG]  [BUGGY]  return  result  *  Math.sqrt(denominator,  result);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(denominator,  result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(denominator,  result);	  return    result    *    Math.sqrt(numerator,    fraction);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	25	None	replace
451	[BUG]  [BUGGY]  return  result  *  Math.sqrt(denominator,  num);  [CE]  cannot  find  symbol  num  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(denominator,  num);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(denominator,  num);	  return    result    *    Math.sqrt(numerator,    fraction);    	non-compiled	[CE]  cannot  find  symbol  num	25	None	replace
452	[BUG]  [BUGGY]  result  =  result.doubleValue()  /  DEDENIATOR.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result.doubleValue()  /  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result.doubleValue()  /  DEDENIATOR.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    DEDENIATOR.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	replace
453	[BUG]  [BUGGY]  result  =  result.doubleValue()  /  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result.doubleValue()  /  denominator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    DEDENIATOR.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	replace
454	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  /  Math.log(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  /  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  /  Math.log(result);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	81	None	replace
455	[BUG]  [BUGGY]  result  =  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    +    denominator.doubleValue();    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	106	None	replace
456	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    +    denominator.doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	106	None	replace
457	[BUG]  [BUGGY]  result  *=  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *=  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *=  numerator.doubleValue()  /  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    +    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	122	None	replace
458	[BUG]  [BUGGY]  result  *=  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  *=  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  *=  numerator.doubleValue()  +  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    +    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	122	None	replace
459	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    double  denominator  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	add
460	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  dOn  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  dOn  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    double  dOn  =  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();	  	non-compiled	[CE]  unreachable  statement	102	None	add
461	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue()  +  1);  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    double  denominator  =  Math.sqrt(numerator.doubleValue()  +  1);	  	non-compiled	[CE]  unreachable  statement	102	None	add
462	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  denominator  =  Math.abs(numerator.doubleValue()  +  1);  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  double  denominator  =  Math.abs(numerator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    double  denominator  =  Math.abs(numerator.doubleValue()  +  1);	  	non-compiled	[CE]  unreachable  statement	102	None	add
463	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    result  =  Math.log(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  unreachable  statement	38	None	add
464	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.floor(numerator.doubleValue());  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.floor(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    double  denominator  =  Math.floor(numerator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	38	None	add
465	[BUG]  [BUGGY]  Double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    result    =    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	131	None	replace
466	[BUG]  [BUGGY]  result  =  Math.pow(10,  result);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.pow(10,  result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.pow(10,  result);	  return    result    *    Math.log(result);    double    result    =    Math.log(result);    	non-compiled	[CE]  missing  return  statement	83	None	replace
467	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	add
468	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	add
469	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	add
470	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    *    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	add
471	[BUG]  [BUGGY]  Result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  Result  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  Result	144	None	replace
472	[BUG]  [BUGGY]  double  result  =  number.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  number.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  number.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    numerator.doubleValue()    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	32	None	replace
473	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator),  numerator.doubleValue()  /  denominator;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator),  numerator.doubleValue()  /  denominator;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator),  numerator.doubleValue()  /  denominator;	  return    result    *    Math.sqrt(numerator).doubleValue()    /    denominator;    	non-compiled	[CE]  ';'  expected	114	None	replace
474	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator),  denominator.doubleValue()  /  result;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator),  denominator.doubleValue()  /  result;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator),  denominator.doubleValue()  /  result;	  return    result    *    Math.sqrt(numerator).doubleValue()    /    denominator;    	non-compiled	[CE]  ';'  expected	114	None	replace
475	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator).doubleValue()  /  denominator;  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator).doubleValue()  /  denominator;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator).doubleValue()  /  denominator;	  return    result    *    Math.sqrt(numerator).doubleValue()    /    denominator;    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	114	None	replace
476	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  results  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  results  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  results  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  results  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  results	7	None	add
477	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  double  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  double  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    double  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	143	None	add
478	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.exp(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.exp(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
479	[BUG]  [BUGGY]  return  result  *  Math.exp(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.exp(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.exp(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
480	[BUG]  [BUGGY]  return  result  *  Math.log(result)/  2.0;  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result)/  2.0;  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result)/    2.0;    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	146	None	add
481	[BUG]  [BUGGY]  return  result  *  Math.log(result)/  2.0;  result  =  Math.floor(result)/  2.0;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result)/  2.0;  result  =  Math.floor(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result)/    2.0;    result  =  Math.floor(result)/  2.0;	  	non-compiled	[CE]  unreachable  statement	146	None	add
482	[BUG]  [BUGGY]  result  =  result  *(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	54	None	replace
483	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  double  cannot  be  dereferenced	126	None	add
484	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue()  +  1;	  	non-compiled	[CE]  double  cannot  be  dereferenced	126	None	add
485	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	126	None	add
486	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	126	None	add
487	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue()  +  2);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue()  +  2);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue()  +  2);	  	non-compiled	[CE]  double  cannot  be  dereferenced	126	None	add
488	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(result  /  denominator.doubleValue());	  return    numerator    *    Math.sqrt(result    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	134	6	replace
489	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result  /  denominator.doubleValue());  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(result  /  denominator.doubleValue());	  return    numerator    *    Math.sqrt(result    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	134	6	replace
490	[BUG]  [BUGGY]  return  result  *  Math.sqrt(denominator  /  result.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(denominator  /  result.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(denominator  /  result.doubleValue());	  return    numerator    *    Math.sqrt(result    /    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	134	None	replace
491	[BUG]  [BUGGY]  Double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  denominator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	90	None	replace
492	[BUG]  [BUGGY]  return  result  *  Math.log(result  /  2.0);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result  /  2.0);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result    /    2.0);    double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	128	None	add
493	[BUG]  [BUGGY]  return  result  *  Math.log(result  /  2.0);  Math.log(result  /  2.0);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result  /  2.0);  Math.log(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result    /    2.0);    Math.log(result  /  2.0);	  	non-compiled	[CE]  unreachable  statement	128	None	add
494	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  DEDENIATOR.doubleValue();  [CE]  cannot  find  symbol  DEDENIATOR  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue())/  DEDENIATOR.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue())/  DEDENIATOR.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    sign.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	40	None	replace
495	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  BigFraction  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  BigFraction  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    BigFraction  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	36	None	add
496	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  denominator  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	36	None	add
497	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue());  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  denominator  =  Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	36	None	add
498	[BUG]  [BUGGY]  result  =  numerator  *  denominator.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator  *  denominator.doubleValue();	  result    =    result    *    denominator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	119	None	replace
499	[BUG]  [BUGGY]  result  =  result  *  num.doubleValue();  [CE]  cannot  find  symbol  num  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  num.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  num.doubleValue();	  result    =    result    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  num	119	None	replace
500	[BUG]  [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue());  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.sqrt(numerator.doubleValue());  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.sqrt(numerator.doubleValue());	  result    =    result    *    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	119	None	replace
501	[BUG]  [BUGGY]  return  result  *  Math.sin(numerator  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(numerator  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sin(numerator  /  denominator.doubleValue());	  return    numerator.sqrt(result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	41	None	replace
502	[BUG]  [BUGGY]  result  =  result  *  denominator.doubleValue()  /  denominator.doubleValue();  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  denominator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  denominator.doubleValue()  /  denominator.doubleValue();	  result    =    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  missing  return  statement	78	None	replace
503	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator,  numerator).doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator,  numerator).doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator,  numerator).doubleValue();	  return    result    /    Math.sqrt(numerator).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	44	None	replace
504	[BUG]  [BUGGY]  result  =  numerator  /  denominator.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator  /  denominator.doubleValue();	  result    =    result    /    denominator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	120	None	replace
505	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator);  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	105	None	replace
506	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(result)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	compilable	  [FE]  AssertionError  	147	5	replace
507	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(result)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	compilable	  [FE]  AssertionError  	147	5	replace
508	[BUG]  [BUGGY]  double  result  =  denominator.doubleValue()  /  result;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  denominator.doubleValue()  /  result;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  denominator.doubleValue()  /  result;	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	79	None	replace
509	[BUG]  [BUGGY]  double  result  =  denominator.doubleValue()  *  Math.log(numerator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  denominator.doubleValue()  *  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  denominator.doubleValue()  *  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	79	None	replace
510	[BUG]  [BUGGY]  double  result  =  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	30	None	replace
511	[BUG]  [BUGGY]  return  result  *  Math.sqrt(denominator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(denominator);	  return    result    *    num;    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	35	None	replace
512	[BUG]  [BUGGY]  return  result  *  ZERO;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  ZERO;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  ZERO;	  return    result    *    num;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	35	None	replace
513	[BUG]  [BUGGY]  double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    result;    double    result    =    Math.abs(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	141	None	replace
514	[BUG]  [BUGGY]  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    result;    double    result    =    Math.abs(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	141	None	replace
515	[BUG]  [BUGGY]  double  result  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    result;    double    result    =    Math.abs(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	141	None	replace
516	[BUG]  [BUGGY]  result  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.abs(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    result;    double    result    =    Math.abs(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	141	None	replace
517	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result  *  result  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  Math.sqrt(result  *  result  /  denominator.doubleValue());	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	133	5	replace
518	[BUG]  [BUGGY]  return  Math.sqrt(result  *  result  /  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result  *  result  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  Math.sqrt(result  *  result  /  denominator.doubleValue());	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	133	5	replace
519	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  Math.sqrt(result  /  denominator.doubleValue());	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	133	5	replace
520	[BUG]  [BUGGY]  return  Math.sqrt(result  /  denominator.doubleValue());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  Math.sqrt(result  /  denominator.doubleValue());	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	133	5	replace
521	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result  *  result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  Math.sqrt(result  *  result);	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	133	2	replace
522	[BUG]  [BUGGY]  return  Math.sqrt(result  *  result);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result  *  result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  Math.sqrt(result  *  result);	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	133	2	replace
523	[BUG]  [BUGGY]  result  =  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    result;    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	68	None	replace
524	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	70	5	add
525	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	70	5	add
526	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	70	2	add
527	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	70	2	add
528	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    BigFraction.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	5	None	add
529	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  result  =  numerator.doubleValue()  *(numerator.doubleValue()  +  denominator.doubleValue());  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  result  =  numerator.doubleValue()  *(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    result  =  numerator.doubleValue()  *(numerator.doubleValue()  +  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	5	None	add
530	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  deserator.doubleValue());  [CE]  cannot  find  symbol  deserator  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  deserator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  deserator.doubleValue());	  	non-compiled	[CE]  cannot  find  symbol  deserator	5	None	add
531	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  DEDENIATOR.doubleValue());  [CE]  cannot  find  symbol  DEDENIATOR  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  DEDENIATOR.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    result  =  numerator.doubleValue()  *(numerator.doubleValue()  /  DEDENIATOR.doubleValue());	  	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	5	None	add
532	[BUG]  [BUGGY]  return  numerator  /  Math.sqrt(result  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  /  Math.sqrt(result  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  /  Math.sqrt(result  /  denominator.doubleValue());	  return    result    /    Math.sqrt(numerator    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	110	None	replace
533	[BUG]  [BUGGY]  return  result  *(numerator  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *(numerator  *  denominator.doubleValue());  double  denominator  =  numerator.doubleValue()  /  denominator.doubleValue();	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	98	None	replace
534	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  /  denominator.doubleValue()  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator  /  denominator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  /  denominator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    +    denominator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	86	None	replace
535	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  *  graph.doubleValue()  /  denominator.doubleValue());  [CE]  cannot  find  symbol  graph  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator  *  graph.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  *  graph.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    +    denominator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  graph	86	None	replace
536	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  *  dOn.doubleValue()  /  denominator.doubleValue());  [CE]  cannot  find  symbol  dOn  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator  *  dOn.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  *  dOn.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator    +    denominator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  dOn	86	None	replace
537	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.floor(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.floor(result);	  return    result    /    Math.log(result);    	compilable	  [FE]  AssertionError  	60	5	replace
538	[BUG]  [BUGGY]  return  result  /  Math.floor(result);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.floor(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.floor(result);	  return    result    /    Math.log(result);    	compilable	  [FE]  AssertionError  	60	5	replace
539	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.pow(10,  result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  /  Math.pow(10,  result);	  return    result    /    Math.log(result);    	compilable	  [FE]  AssertionError  	60	5	replace
540	[BUG]  [BUGGY]  return  result  /  Math.pow(10,  result);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.pow(10,  result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.pow(10,  result);	  return    result    /    Math.log(result);    	compilable	  [FE]  AssertionError  	60	5	replace
541	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())+  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())+  1;	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	112	5	replace
542	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())+  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())+  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())+  1;	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	112	5	replace
543	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  0,  denominator).doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  0,  denominator).doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  0,  denominator).doubleValue();	  return    result    *    Math.sqrt(numerator,    denominator).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	113	None	replace
544	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  0.5).doubleValue();  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  0.5).doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  denominator,  0.5).doubleValue();	  return    result    *    Math.sqrt(numerator,    denominator).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	113	None	replace
545	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	16	None	add
546	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	add
547	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	add
548	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	16	None	add
549	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	84	None	add
550	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	84	None	add
551	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	84	None	add
552	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  -  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  -  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue()  -  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	84	None	add
553	[BUG]  [BUGGY]  result  =  result  *  denominator.doubleValue();  Result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  cannot  find  symbol  Result  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  denominator.doubleValue();  Result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  denominator.doubleValue();  Result  =  numerator.doubleValue()  *  denominator.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    Result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  Result	93	None	replace
554	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue();  Result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  cannot  find  symbol  Result  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  denominator.doubleValue();  Result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  denominator.doubleValue();  Result  =  numerator.doubleValue()  *  denominator.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    Result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  Result	93	None	replace
555	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(value);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(value);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(value);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    denominator.doubleValue()    +    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	108	None	replace
556	[BUG]  [BUGGY]  return  result  *  sign;  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  sign;  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  sign;  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  return    result    *    result;    Double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	66	None	replace
557	[BUG]  [BUGGY]  return  result  *  num;  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  num  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  num;  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  num;  Double  result  =  numerator.doubleValue()  /  denominator.doubleValue();	  return    result    *    result;    Double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  num	66	None	replace
558	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator  /  desenominator.doubleValue());  [CE]  cannot  find  symbol  desenominator  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator  /  desenominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator  /  desenominator.doubleValue());	  return    denominator    *    Math.sqrt(numerator    /    result.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  desenominator	42	None	replace
559	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    BigFraction  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	18	None	add
560	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	18	None	add
561	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	18	None	add
562	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result  /  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  not  a  statement	18	None	add
563	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	132	None	add
564	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction.doubleValue  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  cannot  find  symbol  doubleValue  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction.doubleValue  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    BigFraction.doubleValue  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  cannot  find  symbol  doubleValue	132	None	add
565	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	132	None	add
566	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	132	None	add
567	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction.doubleValue  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  cannot  find  symbol  doubleValue  [FE]            AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  BigFraction.doubleValue  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    BigFraction.doubleValue  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  cannot  find  symbol  doubleValue	132	None	add
568	[BUG]  [BUGGY]  Result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  cannot  find  symbol  Result  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result    =    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  Result	91	None	replace
569	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  +  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  +  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  +  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	84	None	add
570	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue());  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  denominator.doubleValue());  double  denominator  =  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    denominator.doubleValue());    double  denominator  =  Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	84	None	add
571	[BUG]  [BUGGY]  return  result  /  Math.log(result);  double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.log(result);  double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.log(result);    double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	59	None	add
572	[BUG]  [BUGGY]  return  result  *  Math.sqrt(denominator,  denominator);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(denominator,  denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(denominator,  denominator);	  return    result    *    Math.sqrt(numerator,    fraction);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	25	None	replace
573	[BUG]  [BUGGY]  double  result  =  numerator  *  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator  *  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	65	None	replace
574	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  result  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	111	None	add
575	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  dOn  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  dOn  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  dOn  =  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  unreachable  statement	111	None	add
576	[BUG]  [BUGGY]  result  =  denominator.doubleValue()  /  sign.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  denominator.doubleValue()  /  sign.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  denominator.doubleValue()  /  sign.doubleValue();	  result    =    denominator.doubleValue()    /    number.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	14	None	replace
577	[BUG]  [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	3	None	add
578	[BUG]  [BUGGY]  return  result  *  sign;  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  sign;  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  sign;  double  result  =  numerator.doubleValue()  *  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	67	None	replace
579	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.abs(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.abs(result  /  2.0);	  return    result    *    Math.log(result    /    2.0);    	compilable	  [FE]  AssertionError  	129	5	replace
580	[BUG]  [BUGGY]  return  result  *  Math.abs(result  /  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.abs(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.abs(result  /  2.0);	  return    result    *    Math.log(result    /    2.0);    	compilable	  [FE]  AssertionError  	129	5	replace
581	[BUG]  [BUGGY]  Double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  Double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	Double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double    result    =    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	49	None	replace
582	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  +  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  +  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	19	5	replace
583	[BUG]  [BUGGY]  return  result  +  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  +  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  +  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	19	5	replace
584	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator  *  Math.log(result));  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator  *  Math.log(result));  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  Math.sqrt(numerator  *  Math.log(result));	  return    result    /    Math.log(result);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	60	None	replace
585	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(this);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(this);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  /  denominator.doubleValue()  +  Math.log(this);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    denominator.doubleValue()    +    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	108	None	replace
586	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.abs(denominator.doubleValue()  *  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.abs(denominator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *(numerator.doubleValue()  *  denominator.doubleValue());  double  denominator  =  Math.abs(denominator.doubleValue()  *  denominator.doubleValue());	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue());    double    denominator    =    Math.abs(numerator.doubleValue()    *    denominator.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	99	None	replace
587	[BUG]  [BUGGY]  double  result  =  numerator  *  Math.log(numerator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator  *  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator  *  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	79	None	replace
588	[BUG]  [BUGGY]  result  =  result  *  denominator.doubleValue();  result  =  result.doubleValue()  /  DEDENIATOR.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  denominator.doubleValue();  result  =  result.doubleValue()  /  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  denominator.doubleValue();  result  =  result.doubleValue()  /  DEDENIATOR.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    DEDENIATOR.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	replace
589	[BUG]  [BUGGY]  result  =  result  /  denominator.doubleValue();  result  =  result.doubleValue()  /  DEDENIATOR.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  /  denominator.doubleValue();  result  =  result.doubleValue()  /  DEDENIATOR.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  /  denominator.doubleValue();  result  =  result.doubleValue()  /  DEDENIATOR.doubleValue();	          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result    =    numerator.doubleValue()    /    DEDENIATOR.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	replace
590	[BUG]  [BUGGY]  return  result  *  sign;  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  sign;  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  sign;  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    +    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	122	None	replace
591	[BUG]  [BUGGY]  return  result  *  Math.log(numerator);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    %    denominator.doubleValue();    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	107	None	replace
592	[BUG]  [BUGGY]  return  result  *  Math.abs(numerator).doubleValue()  /  denominator;  [CE]  no  suitable  method  found  for  abs(BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.abs(numerator).doubleValue()  /  denominator;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.abs(numerator).doubleValue()  /  denominator;	  return    result    *    Math.sqrt(numerator).doubleValue()    /    denominator;    	non-compiled	[CE]  no  suitable  method  found  for  abs(BigInteger)	114	None	replace
593	[BUG]  [BUGGY]  return  result  *  Math.log(numerator).doubleValue()  /  denominator;  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator).doubleValue()  /  denominator;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator).doubleValue()  /  denominator;	  return    result    *    Math.sqrt(numerator).doubleValue()    /    denominator;    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	114	None	replace
594	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  fraction);  [CE]  cannot  find  symbol  fraction  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  fraction);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  denominator,  fraction);	  return    result    *    Math.sqrt(numerator,    denominator);    	non-compiled	[CE]  cannot  find  symbol  fraction	22	None	replace
595	[BUG]  [BUGGY]  double  result  =  numerator  *  result;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator  *  result;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator  *  result;	  return    result    *    result;    double    result    =    Math.abs(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	141	None	replace
596	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  /(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  numerator.doubleValue()  /(numerator.doubleValue()  /  denominator.doubleValue());	  return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	6	6	replace
597	[BUG]  [BUGGY]  return  numerator.doubleValue()  /(numerator.doubleValue()  /  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  /(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator.doubleValue()  /(numerator.doubleValue()  /  denominator.doubleValue());	  return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	6	6	replace
598	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
599	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator.doubleValue()  /  denominator.doubleValue()  +  1);	  return    result    *    Math.log(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	21	5	replace
600	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue())/  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *(numerator.doubleValue()  /  denominator.doubleValue())/  1;	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	127	5	replace
601	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue())/  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue())/  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *(numerator.doubleValue()  /  denominator.doubleValue())/  1;	  return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	127	5	replace
602	[BUG]  [BUGGY]  return  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator);  double  result  =  numerator.doubleValue()  +  denominator.doubleValue();	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    +    denominator.doubleValue();    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	106	None	replace
603	[BUG]  [BUGGY]  return  result  *  Math.log(result  /  2.0);  double  result  =  Math.log(result  /  2.0);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result  /  2.0);  double  result  =  Math.log(result  /  2.0);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result    /    2.0);    double  result  =  Math.log(result  /  2.0);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	128	None	add
604	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	30	None	replace
605	[BUG]  [BUGGY]  double  result  =  numerator.doubleValue()  *  Math.log(denominator);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator.doubleValue()  *  Math.log(denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator.doubleValue()  *  Math.log(denominator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    *    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	82	None	replace
606	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.abs(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.abs(result)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	compilable	  [FE]  AssertionError  	147	5	replace
607	[BUG]  [BUGGY]  return  result  *  Math.abs(result)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.abs(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.abs(result)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	compilable	  [FE]  AssertionError  	147	5	replace
608	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator)/  2.0;  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator)/  2.0;	  return    result    *    Math.log(result)/    2.0;    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	147	None	replace
609	[BUG]  [BUGGY]  double  result  =  numberator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numberator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numberator.doubleValue()  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double    result    =    numerator.doubleValue()    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	32	None	replace
610	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.denominator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	5	add
611	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.denominator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	5	add
612	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	5	add
613	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	5	add
614	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	2	add
615	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    this.numerator.doubleValue()    /    denominator.doubleValue();    result  =  this.denominator.doubleValue()  /  denominator.doubleValue();  result  =  this.numerator.doubleValue()  /  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	143	2	add
616	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    Double    result    =    numerator.doubleValue()    /    denominator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	50	None	replace
617	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  *(denominator.doubleValue()  /  denominator.doubleValue());  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  *(denominator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  *(denominator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  ')'  expected	5	None	add
618	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	5	None	add
619	[BUG]  [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator.doubleValue()  *(numerator.doubleValue()  /  denominator.doubleValue());  double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    numerator.doubleValue()    *(numerator.doubleValue()    /    denominator.doubleValue());    double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue());	  	non-compiled	[CE]  double  cannot  be  dereferenced	5	None	add
620	[BUG]  [BUGGY]  result  +=  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  +=  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  +=  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	non-compiled	[CE]  missing  return  statement	47	None	replace
621	[BUG]  [BUGGY]  return  result  *  Math.log(numerator),  denominator.doubleValue();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator),  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.log(numerator),  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator),    numerator.doubleValue();    	non-compiled	[CE]  ';'  expected	137	None	replace
622	[BUG]  [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  return  result  *  Math.rint(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.rint(result);  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  return  result  *  Math.rint(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.rint(result);    double  result  =  numerator.doubleValue()  /  denominator.doubleValue();  return  result  *  Math.rint(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	63	None	add
623	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator);  result  *  Math.sqrt(denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator);  result  *  Math.sqrt(denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator);  result  *  Math.sqrt(denominator);	  return    result    *    result;    result    *    result;    	non-compiled	[CE]  not  a  statement	69	None	replace
624	[BUG]  [BUGGY]  result  =  Math.sqrt(numerator.doubleValue()  -  denominator.doubleValue());  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.sqrt(numerator.doubleValue()  -  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.sqrt(numerator.doubleValue()  -  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    result    =    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  missing  return  statement	31	None	replace
625	[BUG]  [BUGGY]  return  result  *  Math.log(result)/  2.0;  Math.log(result)/  2.0;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(result)/  2.0;  Math.log(result)/  2.0;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(result)/    2.0;    Math.log(result)/  2.0;	  	non-compiled	[CE]  not  a  statement	146	None	add
626	[BUG]  [BUGGY]  return  result  /  result;  double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  result;  double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    result;    double  result  =  Math.abs(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	33	None	add
627	[BUG]  [BUGGY]  return  result  /  result;  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  result;  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    result;    double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	33	None	add
628	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  result.doubleValue()  *  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  result.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  result.doubleValue()  *  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	70	None	add
629	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  this.denominator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  this.denominator.doubleValue()  *  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	70	6	add
630	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  this.denominator.doubleValue()  *  denominator.doubleValue();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  this.denominator.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        *        denominator.doubleValue();        result    =    numerator.doubleValue()    *    denominator.doubleValue();    result  =  numerator.doubleValue()  *  denominator.doubleValue();  result  =  this.denominator.doubleValue()  *  denominator.doubleValue();	  	compilable	  [FE]  AssertionError  	70	6	add
631	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(numerator  /  denominator.doubleValue());  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(numerator  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(numerator  /  denominator.doubleValue());	  return    numerator    *    Math.sqrt(result    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	134	None	replace
632	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  result.doubleValue()  /  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  result.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  result.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	add
633	[BUG]  [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  doubleValue()  /  denominator.doubleValue();  result  =  result.doubleValue()  /  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]          result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  numerator.doubleValue()  /  denominator.doubleValue();  result  =  doubleValue()  /  denominator.doubleValue();  result  =  result.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	                result        =        numerator.doubleValue()        /        denominator.doubleValue();        result    =    numerator.doubleValue()    /    denominator.doubleValue();    result  =  doubleValue()  /  denominator.doubleValue();  result  =  result.doubleValue()  /  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	add
634	[BUG]  [BUGGY]  return  result  *  Math.sin(result)/  denominator;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sin(result)/  denominator;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sin(result)/  denominator;	  return    result    *    Math.sin(result);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	62	None	replace
635	[BUG]  [BUGGY]  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();	  return    result    *    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    	non-compiled	[CE]  not  a  statement	145	None	replace
636	[BUG]  [BUGGY]  double  result  =  denominator.doubleValue()  /  Math.log(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]            AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  denominator.doubleValue()  /  Math.log(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  denominator.doubleValue()  /  Math.log(result);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    Math.log(result);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	81	None	replace
637	[BUG]  [BUGGY]  result  =  numerator.doubleValue()  /  Math.log(denominator);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator.doubleValue()  /  Math.log(denominator);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator.doubleValue()  /  Math.log(denominator);	  return    result    *    Math.log(result);    double    result    =    numerator.doubleValue()    /    Math.log(result);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	81	None	replace
638	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  Math.sqrt(result  *  denominator.doubleValue());	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	133	6	replace
639	[BUG]  [BUGGY]  return  Math.sqrt(result  *  denominator.doubleValue());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  Math.sqrt(result  *  denominator.doubleValue());	  return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    	compilable	  [FE]  AssertionError  	133	6	replace
640	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.abs(numerator.doubleValue())/  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.abs(numerator.doubleValue())/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue())/    denominator.doubleValue();    double  denominator  =  Math.abs(numerator.doubleValue())/  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	36	None	add
641	[BUG]  [BUGGY]  return  result  *  sign;  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  sign;  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  sign;  double  result  =  numerator.doubleValue()  %  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    %    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	121	None	replace
642	[BUG]  [BUGGY]  double  result  =  numerator  *  denominator.doubleValue()  %  denominator.doubleValue();  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  numerator  *  denominator.doubleValue()  %  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  numerator  *  denominator.doubleValue()  %  denominator.doubleValue();	  return    result    *    result;    double    result    =    numerator.doubleValue()    %    denominator.doubleValue();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	121	None	replace
643	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  doubleValue());  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator,  denominator,  doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator,  denominator,  doubleValue());	  return    result    *    Math.sqrt(numerator,    denominator).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	113	None	replace
644	[BUG]  [BUGGY]  result  =  result  *  sign.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  sign.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  sign.doubleValue();	  result    =    result    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	119	None	replace
645	[BUG]  [BUGGY]  result  =  doubleValue  *  denominator.doubleValue();  [CE]  cannot  find  symbol  doubleValue  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  doubleValue  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  doubleValue  *  denominator.doubleValue();	  result    =    result    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  doubleValue	119	None	replace
646	[BUG]  [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.log(numerator.doubleValue())*  denominator.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.log(numerator.doubleValue())/  denominator.doubleValue();  double  denominator  =  Math.log(numerator.doubleValue())*  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.log(numerator.doubleValue())/    denominator.doubleValue();    double  denominator  =  Math.log(numerator.doubleValue())*  denominator.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	38	None	add
647	[BUG]  [BUGGY]  result  =  doubleValue  /  denominator.doubleValue();  [CE]  cannot  find  symbol  doubleValue  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  doubleValue  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  doubleValue  /  denominator.doubleValue();	  result    =    result    /    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  doubleValue	120	None	replace
648	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    *    denominator.doubleValue());    Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());  return  result  *  Math.sqrt(numerator.doubleValue()  *  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	16	None	add
649	[BUG]  [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  dOn  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  dOn  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    /    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  dOn  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	18	None	add
650	[BUG]  [BUGGY]  result  =  result  *  denominator.doubleValue();  result  =  number.doubleValue()  *  denominator.doubleValue();  [CE]  cannot  find  symbol  number  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  result  *  denominator.doubleValue();  result  =  number.doubleValue()  *  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  result  *  denominator.doubleValue();  result  =  number.doubleValue()  *  denominator.doubleValue();	          result    =    numerator.doubleValue()    *    denominator.doubleValue();    result    =    number.doubleValue()    *    denominator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  number	130	None	replace
651	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue(),  denominator.doubleValue());  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue(),  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue(),  denominator.doubleValue());	  return    result    *    Math.sqrt(numerator.doubleValue()).doubleValue();    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	43	None	replace
652	[BUG]  [BUGGY]  return  numerator  *  Math.sqrt(result,  result);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  numerator  *  Math.sqrt(result,  result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  numerator  *  Math.sqrt(result,  result);	  return    result    *    Math.sqrt(numerator,    numerator);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	23	None	replace
653	[BUG]  [BUGGY]  return  result  /  BigInteger.MAX_VALUE;  [CE]  cannot  find  symbol  MAX_VALUE  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  BigInteger.MAX_VALUE;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  BigInteger.MAX_VALUE;	  return    result    /    result;    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	34	None	replace
654	[BUG]  [BUGGY]  return  result  /  BigInteger.MIN_VALUE;  [CE]  cannot  find  symbol  MIN_VALUE  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  /  BigInteger.MIN_VALUE;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  /  BigInteger.MIN_VALUE;	  return    result    /    result;    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	34	None	replace
655	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  dOn  =  Math.sqrt(numerator.doubleValue());  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  dOn  =  Math.sqrt(numerator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    double  dOn  =  Math.sqrt(numerator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	45	None	add
656	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue());  double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue());    double  result  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	45	None	add
657	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(numerator.doubleValue()    +    1)/    denominator.doubleValue();    Math.sqrt(numerator.doubleValue()  +  1)/  denominator.doubleValue();	  	non-compiled	[CE]  not  a  statement	102	None	add
658	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  Math.sqrt(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  Math.sqrt(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(result);    double  result  =  Math.sqrt(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	94	None	add
659	[BUG]  [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  numerator.doubleValue()  *  Math.sqrt(result);  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(result);  double  result  =  numerator.doubleValue()  *  Math.sqrt(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *    Math.sqrt(result);    double  result  =  numerator.doubleValue()  *  Math.sqrt(result);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	94	None	add
660	[BUG]  [BUGGY]  result  =  Math.floor(result);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  Math.floor(result);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  Math.floor(result);	  return    result    *    Math.log(result);    double    result    =    Math.log(result);    	non-compiled	[CE]  missing  return  statement	83	None	replace
661	[BUG]  [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue()  +  1);  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *(numerator.doubleValue()  /  denominator.doubleValue()  +  1);  double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    result    *(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    double  denominator  =  Math.abs(numerator.doubleValue()  -  denominator.doubleValue()  +  1);	  	non-compiled	[CE]  double  cannot  be  dereferenced	126	None	add
662	[BUG]  [BUGGY]  result  =  numerator  *  denominator.doubleValue()  /  denominator.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  numerator  *  denominator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  numerator  *  denominator.doubleValue()  /  denominator.doubleValue();	  result    =    result    *    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	136	None	replace
663	[BUG]  [BUGGY]  result  =  sign  *  denominator.doubleValue()  /  denominator.doubleValue();  [CE]  cannot  find  symbol  sign  [FE]          AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  result  =  sign  *  denominator.doubleValue()  /  denominator.doubleValue();  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	result  =  sign  *  denominator.doubleValue()  /  denominator.doubleValue();	  result    =    result    *    denominator.doubleValue()    /    numerator.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sign	136	None	replace
664	[BUG]  [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  n  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  double  n  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue());    double  n  =  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue());	  	non-compiled	[CE]  unreachable  statement	132	None	add
665	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())/  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())/  1;	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	112	5	replace
666	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())/  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())/  1;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())/  1;	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	112	5	replace
667	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())/  2;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	add	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())/  2;	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	112	5	replace
668	[BUG]  [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())/  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())/  2;  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  result  *  Math.sqrt(numerator.doubleValue()  /  denominator.doubleValue())/  2;	  return    result    *    Math.sqrt(numerator.doubleValue()    /    denominator.doubleValue()    +    1);    	compilable	  [FE]  AssertionError  	112	5	replace
669	[BUG]  [BUGGY]  return  Math.sqrt(result  /  Math.sqrt(numerator  /  denominator.doubleValue());  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result  /  Math.sqrt(numerator  /  denominator.doubleValue());  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  Math.sqrt(result  /  Math.sqrt(numerator  /  denominator.doubleValue());	  return    numerator.sqrt(result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	non-compiled	[CE]  ')'  expected	41	None	replace
670	[BUG]  [BUGGY]  return  Math.sqrt(result  /  Math.sqrt(numerator  /  denominator.doubleValue()));  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  return  Math.sqrt(result  /  Math.sqrt(numerator  /  denominator.doubleValue()));  [BUGGY]      }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	return  Math.sqrt(result  /  Math.sqrt(numerator  /  denominator.doubleValue()));	  return    numerator.sqrt(result    *    Math.sqrt(numerator    /    denominator.doubleValue());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	41	None	replace
671	[BUG]  [BUGGY]  double  result  =  denominator.doubleValue()  *  numerator.doubleValue()  +  1;  [CE]  variable  result  is  already  defined  in  method  doubleValue()  [FE]                      AssertionError      [CONTEXT]      public  double  doubleValue()  {  double  result  =  numerator.doubleValue()  /  denominator.doubleValue();        [BUGGY]  double  result  =  denominator.doubleValue()  *  numerator.doubleValue()  +  1;  [BUGGY]      return  result;  }  [CLASS]  BigFraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  BigInteger  ONE_HUNDRED  bg  dOn  den  denominator  gcd  nOd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  long  a0  a1  bits  den  exponent  l  m  num  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  sign  double  result  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.31622776601683794	688	688	2	replace	double  result  =  denominator.doubleValue()  *  numerator.doubleValue()  +  1;	  double    result    =    numerator.doubleValue()    *    denominator.doubleValue()    +    1;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  doubleValue()	27	None	replace
