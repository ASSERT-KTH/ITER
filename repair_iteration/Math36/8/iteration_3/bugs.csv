bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	59	2	add
2	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	59	2	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	59	2	add
4	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	59	2	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	59	2	add
6	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	59	2	add
7	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	59	2	add
9	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	59	2	add
10	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(num))  {  if(num  ==  null  ||  den.equals(num))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(num))  {  if(num  ==  null  ||  den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(num))    {    if(num  ==  null  ||  den.equals(num))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
11	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(num))  {  if(num!=  null  ||  den.equals(num))  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(num))  {  if(num!=  null  ||  den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(num))    {    if(num!=  null  ||  den.equals(num))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
12	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(num))  {  If(num  ==  null  ||  den.equals(num))  {  [CE]  ';'  expected  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(num))  {  If(num  ==  null  ||  den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(num))    {    If(num  ==  null  ||  den.equals(num))  {	  	non-compiled	[CE]  ';'  expected	21	None	add
13	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(num))  {  if(num  ==  null  ||  der.equals(num))  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(num))  {  if(num  ==  null  ||  der.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(num))    {    if(num  ==  null  ||  der.equals(num))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
14	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ONE))    {    	compilable	  [FE]  ExceptionInInitializerError  	100	27	replace
15	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ONE))  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ONE))    {    	compilable	  [FE]  ExceptionInInitializerError  	100	27	replace
16	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ONE))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ONE))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	100	None	replace
17	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ONE))    {    	compilable	  [FE]  ExceptionInInitializerError  	100	27	replace
18	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ONE))    {    	compilable	  [FE]  ExceptionInInitializerError  	100	27	replace
19	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null  ||  BigInteger.ONE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(den  ==  null  ||  BigInteger.ONE.equals(num))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    if(num    ==    null    ||    bigInteger.ONE.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	144	27	replace
20	[BUG]  [BUGGY]  if(den  ==  null  ||  BigInteger.ONE.equals(num))  {  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null  ||  BigInteger.ONE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null  ||  BigInteger.ONE.equals(num))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    if(num    ==    null    ||    bigInteger.ONE.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	144	27	replace
21	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null  ||  bigInteger.ONE.equals(den))  {  [CE]  package  bigInteger  does  not  exist  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null  ||  bigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  null  ||  bigInteger.ONE.equals(den))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    if(num    ==    null    ||    bigInteger.ONE.equals(den))    {    	non-compiled	[CE]  package  bigInteger  does  not  exist	144	None	replace
22	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
23	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
24	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE))  {  if(num.equals(BigInteger.ONE))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE))  {  if(num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE))    {    if(num.equals(BigInteger.ONE))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
25	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE))  {  If(num.equals(BigInteger.ONE))  {  [CE]  ';'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE))  {  If(num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE))    {    If(num.equals(BigInteger.ONE))  {	  	non-compiled	[CE]  ';'  expected	126	None	add
26	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO_DENOMINATOR)  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO_DENOMINATOR)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  BigInteger.ZERO_DENOMINATOR)  {	  if(num    ==    null    ||    den    ==    BigInteger.ONE)    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	41	None	replace
27	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO_DECEMBER)  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO_DECEMBER)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  BigInteger.ZERO_DECEMBER)  {	  if(num    ==    null    ||    den    ==    BigInteger.ONE)    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	41	None	replace
28	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
29	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den.equals(BigInteger.ZERO_DECEMBER))  {	  if(num    ==    null    ||    den.equals(BigInteger.ONE))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	39	None	replace
30	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  den,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  den,  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
31	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue(),  den);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.getValue(),  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
32	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  num);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  num);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
33	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ONE))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	127	None	replace
34	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO_HUNDRED))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	110	None	replace
35	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO_HUNDRED))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	110	None	replace
36	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO_HUNDRED))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	110	None	replace
37	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(0);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(0);	  BigInteger    denominator    =    new    BigInteger(num);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
38	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num,  den);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(num,  den);	  BigInteger    denominator    =    new    BigInteger(num);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
39	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(den);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(den);	  BigInteger    denominator    =    new    BigInteger(num);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
40	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num,  numerator);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(num,  numerator);	  BigInteger    denominator    =    new    BigInteger(num);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
41	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
42	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
43	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num!=  null  ||  num.equals(den))  {	  if(num    ==    null    ||    num.equals(den))    {    if(num    {    null    ||    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	151	27	replace
44	[BUG]  [BUGGY]  if(num!=  null  ||  num.equals(den))  {  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  num.equals(den))  {	  if(num    ==    null    ||    num.equals(den))    {    if(num    {    null    ||    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	151	27	replace
45	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)||  num.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)||  num.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DECEMBER)||  num.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(BigInteger.ZERO_HUNDRED)||    num.equals(BigInteger.ZERO_DECEMBER))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	16	None	replace
46	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(BigInteger.ZERO_HUNDRED)||    num.equals(BigInteger.ZERO_DECEMBER))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	16	None	replace
47	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)||  den.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)||  den.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_HUNDRED)||  den.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(BigInteger.ZERO_HUNDRED)||    num.equals(BigInteger.ZERO_DECEMBER))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	16	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	15	5	replace
49	[BUG]  [BUGGY]  if(num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [FE]  AssertionError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	15	5	replace
50	[BUG]  [BUGGY]  null  =  LocalizedFormats.NUMERATOR;  MathUtils.checkNotNull(DENOMINATOR,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  null  =  LocalizedFormats.NUMERATOR;  MathUtils.checkNotNull(DENOMINATOR,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	null  =  LocalizedFormats.NUMERATOR;  MathUtils.checkNotNull(DENOMINATOR,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(DENOMINATOR,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
51	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
52	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num!=  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num!=  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    if(num!=  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
53	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DECEMBER))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DECEMBER))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
54	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  If(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  If(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    If(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {	  	non-compiled	[CE]  ';'  expected	120	None	add
55	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO))    {    if(num.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
56	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ZERO))  {  [CE]  ';'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO))    {    If(num.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  ';'  expected	14	None	add
57	[BUG]  [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den!=    BigInteger.ONE)    {    if(num  ==  null  ||  den!=  BigInteger.ONE)  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
58	[BUG]  [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num  ==  null  ||  den  >=  BigInteger.ONE)  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num  ==  null  ||  den  >=  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den!=    BigInteger.ONE)    {    if(num  ==  null  ||  den  >=  BigInteger.ONE)  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
59	[BUG]  [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num!=  null  ||  den!=  BigInteger.ONE)  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num!=  null  ||  den!=  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den!=    BigInteger.ONE)    {    if(num!=  null  ||  den!=  BigInteger.ONE)  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
60	[BUG]  [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num  ==  null  ||  den  >>  BigInteger.ONE)  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num  ==  null  ||  den  >>  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den!=    BigInteger.ONE)    {    if(num  ==  null  ||  den  >>  BigInteger.ONE)  {	  	non-compiled	[CE]  illegal  start  of  expression	134	None	add
61	[BUG]  [BUGGY]  if(num.equals(den)&&  num.equals(den))  {  if(num.equals(den)&&  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)&&  num.equals(den))  {  if(num.equals(den)&&  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)&&    num.equals(den))    {    if(num.equals(den)&&  num.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
62	[BUG]  [BUGGY]  if(num.equals(den)&&  num.equals(den))  {  If(num.equals(den)&&  num.equals(den))  {  [CE]  ';'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)&&  num.equals(den))  {  If(num.equals(den)&&  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)&&    num.equals(den))    {    If(num.equals(den)&&  num.equals(den))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
63	[BUG]  [BUGGY]  if(num.equals(den)&&  num.equals(den))  {  if(num.equals(DEN)&&  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)&&  num.equals(den))  {  if(num.equals(DEN)&&  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)&&    num.equals(den))    {    if(num.equals(DEN)&&  num.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
64	[BUG]  [BUGGY]  if(num.equals(den)||  num.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  num.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  num.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(den)||    num.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	146	None	replace
65	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(den)||  num.equals(BigInteger.ONE))  {	  if(num.equals(den)||    num.equals(BigInteger.ZERO_DENOMINATOR))    {    	compilable	  [FE]  ExceptionInInitializerError  	146	27	replace
66	[BUG]  [BUGGY]  if(num.equals(den)||  num.equals(BigInteger.ONE))  {  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  num.equals(BigInteger.ONE))  {	  if(num.equals(den)||    num.equals(BigInteger.ZERO_DENOMINATOR))    {    	compilable	  [FE]  ExceptionInInitializerError  	146	27	replace
67	[BUG]  [BUGGY]  if(num.equals(den)||  num.equals(LocalizedFormats.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  num.equals(LocalizedFormats.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  num.equals(LocalizedFormats.ZERO_HUNDRED))  {	  if(num.equals(den)||    num.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	146	None	replace
68	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator.valueOf(0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  numerator.valueOf(0);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  numerator.valueOf(0);	  BigInteger    denominator    =    num.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
69	[BUG]  [BUGGY]  BigInteger  denominator  =  den.valueOf(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  den.valueOf(0);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  den.valueOf(0);	  BigInteger    denominator    =    num.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
70	[BUG]  [BUGGY]  BigInteger  denominator  =  num.valueOf(1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  num.valueOf(1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  num.valueOf(1);	  BigInteger    denominator    =    num.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
71	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
72	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENO  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENO  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENO	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  ')'  expected	72	None	replace
73	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
74	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
75	[BUG]  [BUGGY]  BigInteger  num  =  num;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  num  =  num;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  num  =  num;	  BigInteger    num    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
76	[BUG]  [BUGGY]  BigInteger  num  =  numerator;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  num  =  numerator;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  num  =  numerator;	  BigInteger    num    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
77	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(num.intValue());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  num  =  new  BigInteger(num.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  num  =  new  BigInteger(num.intValue());	  BigInteger    num    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  BigInteger  num  =  num.getBigInteger();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  num  =  num.getBigInteger();  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  num  =  num.getBigInteger();	  BigInteger    num    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	63	2	add
80	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	63	2	add
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	63	2	add
82	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	63	2	add
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	63	2	add
84	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	63	2	add
85	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  n  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  n	63	None	add
86	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	63	None	add
87	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)&&  num.equals(den))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)&&  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DENOMINATOR)&&  num.equals(den))  {	  if(num.equals(den)&&    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	20	None	replace
88	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)&&  num.equals(den))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)&&  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DECEMBER)&&  num.equals(den))  {	  if(num.equals(den)&&    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	20	None	replace
89	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)&&  num.equals(den))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)&&  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_HUNDRED)&&  num.equals(den))  {	  if(num.equals(den)&&    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	20	None	replace
90	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  0,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  0,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotEmpty(num,  0,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotEmpty(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
91	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  numerator);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotEmpty(num,  numerator);	  MathUtils.checkNotEmpty(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
92	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.getValue());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.getValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den.getValue());	  BigInteger    denominator    =    BigInteger.valueOf(num.getValue());    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
93	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.getValue()  +  1);	  BigInteger    denominator    =    BigInteger.valueOf(num.getValue());    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
94	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue(),  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue(),  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.getValue(),  numerator);	  BigInteger    denominator    =    BigInteger.valueOf(num.getValue());    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	122	2	add
96	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	122	2	add
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	122	2	add
98	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	122	2	add
99	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	122	27	add
100	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	122	27	add
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	122	2	add
102	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	122	2	add
103	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(den)||    num.equals(den))    {    if(num.equals(den)||    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	47	None	replace
104	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den.equals(num)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(den.equals(num)||  num.equals(den))  {	  if(num.equals(den)||    num.equals(den))    {    if(num.equals(den)||    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	47	27	replace
105	[BUG]  [BUGGY]  if(den.equals(num)||  num.equals(den))  {  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den.equals(num)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den.equals(num)||  num.equals(den))  {	  if(num.equals(den)||    num.equals(den))    {    if(num.equals(den)||    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	47	27	replace
106	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ONE))    {    if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
107	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  If(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  [CE]  ';'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  If(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ONE))    {    If(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {	  	non-compiled	[CE]  ';'  expected	99	None	add
108	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
109	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
110	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	109	None	replace
111	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  numerator.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  numerator.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  numerator.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	109	None	replace
112	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  denominator.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  denominator.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  denominator.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	109	None	replace
113	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  des.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  des.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  des.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	109	None	replace
114	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den,  num);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den,  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den,  num);	  BigInteger    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
115	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  DENOMINATOR);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  DENOMINATOR);	  BigInteger    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
116	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue(),  den);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.intValue(),  den);	  BigInteger    denominator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
117	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  +  1);	  BigInteger    denominator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
118	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.longValue());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.longValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.longValue());	  BigInteger    denominator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
119	[BUG]  [BUGGY]  If(num  ==  null  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  If(num  ==  null  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	If(num  ==  null  ||  BigInteger.ZERO.equals(den))  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    If(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	87	None	replace
120	[BUG]  [BUGGY]  if(num  ==  null  ||  BigInteger.ZERO.equals(den))  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  BigInteger.ZERO.equals(den))  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  BigInteger.ZERO.equals(den))  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    If(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	87	None	replace
121	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(den))  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(den))  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(den))  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    If(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	87	None	replace
122	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
123	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  numerator  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  numerator  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  numerator  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
124	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  des  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  des  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  des  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
125	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  nu  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  nu  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  nu  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
126	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  den);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  den);	  BigInteger    deserator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
127	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  denominator);	  BigInteger    deserator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
128	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num.intValue()  +  1);	  BigInteger    deserator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
129	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(den.intValue());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(den.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  BigInteger.valueOf(den.intValue());	  BigInteger    deserator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
130	[BUG]  [BUGGY]  if(num  ==  null  ||  den.one.equals(num))  {  [CE]  cannot  find  symbol  one  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.one.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den.one.equals(num))  {	  if(num    ==    null    ||    bigInteger.ONE.equals(num))    {    	non-compiled	[CE]  cannot  find  symbol  one	111	None	replace
131	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.ONE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  null  ||  den.ONE.equals(num))  {	  if(num    ==    null    ||    bigInteger.ONE.equals(num))    {    	compilable	  [FE]  ExceptionInInitializerError  	111	27	replace
132	[BUG]  [BUGGY]  if(num  ==  null  ||  den.ONE.equals(num))  {  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.ONE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den.ONE.equals(num))  {	  if(num    ==    null    ||    bigInteger.ONE.equals(num))    {    	compilable	  [FE]  ExceptionInInitializerError  	111	27	replace
133	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue(),  den);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(num.doubleValue(),  den);	  BigInteger    denominator    =    new    BigInteger(num.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
134	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(num.doubleValue()  +  1);	  BigInteger    denominator    =    new    BigInteger(num.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
135	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(den.doubleValue());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(den.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(den.doubleValue());	  BigInteger    denominator    =    new    BigInteger(num.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
136	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den,  numerator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den,  numerator);	  BigInteger    denominator    =    BigInteger.valueOf(num,    numerator);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
137	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
138	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  der.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  der.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    if(num.equals(BigInteger.ZERO)||  der.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
139	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [CE]  ';'  expected  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    If(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  ';'  expected	139	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	73	2	add
141	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	73	2	add
142	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	73	2	add
143	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	73	2	add
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	73	2	add
145	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	73	2	add
146	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	73	None	add
147	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol	73	None	add
148	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.MIN_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.MIN_VALUE  -  1;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.MIN_VALUE  -  1;	  BigInteger    denominator    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
149	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.MIN_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.MIN_VALUE  +  1;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.MIN_VALUE  +  1;	  BigInteger    denominator    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
150	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
151	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DONE);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DONE);	  MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
152	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  numerator);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  0,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  0,  numerator);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
153	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
154	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  den);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  0,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  0,  den);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
155	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
156	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  if(num  ==  null  ||  den!=  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  if(num  ==  null  ||  den!=  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    if(num  ==  null  ||  den!=  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
157	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  if(num!=  null  ||  den  ==  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  if(num!=  null  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    if(num!=  null  ||  den  ==  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
158	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  If(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  If(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    If(num  ==  null  ||  den  ==  BigInteger.ZERO)  {	  	non-compiled	[CE]  ';'  expected	102	None	add
159	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null  ||  den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(den  ==  null  ||  den.equals(num))  {	  if(num    ==    null    ||    den.equals(num))    {    	compilable	  [FE]  ExceptionInInitializerError  	22	27	replace
160	[BUG]  [BUGGY]  if(den  ==  null  ||  den.equals(num))  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null  ||  den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null  ||  den.equals(num))  {	  if(num    ==    null    ||    den.equals(num))    {    	compilable	  [FE]  ExceptionInInitializerError  	22	27	replace
161	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num!=  null  ||  den.equals(num))  {	  if(num    ==    null    ||    den.equals(num))    {    	compilable	  [FE]  ExceptionInInitializerError  	22	27	replace
162	[BUG]  [BUGGY]  if(num!=  null  ||  den.equals(num))  {  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  den.equals(num))  {	  if(num    ==    null    ||    den.equals(num))    {    	compilable	  [FE]  ExceptionInInitializerError  	22	27	replace
163	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)||  num.equals(den))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_HUNDRED)||  num.equals(den))  {	  if(num.equals(BigInteger.ZERO_DECEMBER)||    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	18	None	replace
164	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_QUARTER)||  num.equals(den))  {  [CE]  cannot  find  symbol  ZERO_QUARTER  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_QUARTER)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_QUARTER)||  num.equals(den))  {	  if(num.equals(BigInteger.ZERO_DECEMBER)||    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_QUARTER	18	None	replace
165	[BUG]  [BUGGY]  if(num  ==  null  ||  denominator.equals(num))  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  denominator.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  denominator.equals(num))  {	  if(num    ==    null    ||    des.equals(num))    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	142	None	replace
166	[BUG]  [BUGGY]  if(num  ==  null  ||  der.equals(num))  {  [CE]  cannot  find  symbol  der  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  der.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  der.equals(num))  {	  if(num    ==    null    ||    des.equals(num))    {    	non-compiled	[CE]  cannot  find  symbol  der	142	None	replace
167	[BUG]  [BUGGY]  if(num  ==  null  ||  des  ==  null)  {  [CE]  cannot  find  symbol  des  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  des  ==  null)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  des  ==  null)  {	  if(num    ==    null    ||    den    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  des	133	None	replace
168	[BUG]  [BUGGY]  if(num  ==  null  ||  der  ==  null)  {  [CE]  cannot  find  symbol  der  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  der  ==  null)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  der  ==  null)  {	  if(num    ==    null    ||    den    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  der	133	None	replace
169	[BUG]  [BUGGY]  if(num  ==  null  ||  denominator  ==  null)  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  denominator  ==  null)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  denominator  ==  null)  {	  if(num    ==    null    ||    den    ==    null)    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	133	None	replace
170	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
171	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ZERO))  {  [FE]  ExceptionInInitializerError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
172	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO_HUNDRED  ||  den  ==  BigInteger.ZERO_DENOMINATOR  ||  BigInteger.ZERO.equals(num))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO_HUNDRED  ||  den  ==  BigInteger.ZERO_DENOMINATOR  ||  BigInteger.ZERO.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ZERO_HUNDRED  ||  den  ==  BigInteger.ZERO_DENOMINATOR  ||  BigInteger.ZERO.equals(num))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	108	None	replace
173	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
174	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  [FE]  ExceptionInInitializerError  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
175	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO_HUNDRED  ||  num  ==  BigInteger.ZERO_DENOMINATOR  ||  BigInteger.ZERO.equals(den))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO_HUNDRED  ||  num  ==  BigInteger.ZERO_DENOMINATOR  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ZERO_HUNDRED  ||  num  ==  BigInteger.ZERO_DENOMINATOR  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	108	None	replace
176	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
177	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  not  a  statement	123	None	replace
178	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.longValue(),  den);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.longValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(num.longValue(),  den);	  BigInteger    denominator    =    new    BigInteger(num.longValue());    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
179	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(den.longValue());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(den.longValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(den.longValue());	  BigInteger    denominator    =    new    BigInteger(num.longValue());    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
180	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.longValue()  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.longValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(num.longValue()  +  1);	  BigInteger    denominator    =    new    BigInteger(num.longValue());    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
181	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  if(num  ==  null  ||  den  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  if(num  ==  null  ||  den  ==  null)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    null)    {    if(num  ==  null  ||  den  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
182	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  if(num  ==  null  ||  den!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  if(num  ==  null  ||  den!=  null)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    null)    {    if(num  ==  null  ||  den!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
183	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  if(num!=  null  ||  den  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  if(num!=  null  ||  den  ==  null)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    null)    {    if(num!=  null  ||  den  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
184	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  den  ==  null)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  den  ==  null)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    null)    {    If(num  ==  null  ||  den  ==  null)  {	  	non-compiled	[CE]  ';'  expected	132	None	add
185	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_HALF))  {  [CE]  cannot  find  symbol  ZERO_HALF  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_HALF))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_HALF))  {	  if(num.equals(BigInteger.ZERO_QUARATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HALF	145	None	replace
186	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den,  num);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den,  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den,  num);	  BigInteger    denominator    =    BigInteger.valueOf(num,    des);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
187	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  DEN);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  DEN);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  DEN);	  BigInteger    denominator    =    BigInteger.valueOf(num,    des);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
188	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
189	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  not  a  statement	76	None	replace
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null)  {  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  null)  {  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENO    	compilable	  [FE]  AssertionError  	136	5	replace
191	[BUG]  [BUGGY]  if(num  ==  null)  {  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null)  {  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null)  {  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENO    	compilable	  [FE]  AssertionError  	136	5	replace
192	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  numerator.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  numerator.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  numerator.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO_DECEMBER))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	141	None	replace
193	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.check(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
194	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.check(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
195	[BUG]  [BUGGY]  MathUtils.check(num,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.check(num,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.check(num,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.check(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
196	[BUG]  [BUGGY]  if(num.equals(DEN)||  num.equals(den))  {  [CE]  cannot  find  symbol  DEN  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(DEN)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(DEN)||  num.equals(den))  {	  if(num.equals(den)||    num.equals(den))    {    if(num.equals(DEN)||    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  DEN	49	None	replace
197	[BUG]  [BUGGY]  if(num.equals(DECEMBER)||  num.equals(den))  {  [CE]  cannot  find  symbol  DECEMBER  [FE]              ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(DECEMBER)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(DECEMBER)||  num.equals(den))  {	  if(num.equals(den)||    num.equals(den))    {    if(num.equals(DEN)||    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	49	None	replace
198	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ZERO))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	140	None	replace
199	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DENOMINATOR)||  den.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	140	None	replace
200	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  den.equals(BigInteger.ZERO))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DENOMINATOR)||  den.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	140	None	replace
201	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(BigInteger.ZERO_HUNDRED))  {	  if(num    ==    null    ||    num.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	26	None	replace
202	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO_DONE))  {  [CE]  cannot  find  symbol  ZERO_DONE  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO_DONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den.equals(BigInteger.ZERO_DONE))  {	  if(num    ==    null    ||    num.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DONE	26	None	replace
203	[BUG]  [BUGGY]  If(num.equals(den)||  num.equals(den))  {  [CE]  ';'  expected  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  If(num.equals(den)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	If(num.equals(den)||  num.equals(den))  {	  if(num.equals(den)||    num.equals(den))    {    If(num.equals(den)||    num.equals(den))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
204	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  denominator,  den);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  denominator,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  denominator,  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
205	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
206	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	147	2	add
207	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	147	2	add
208	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	147	2	add
209	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	147	2	add
210	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	147	2	add
211	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	147	2	add
212	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	147	None	add
213	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  n  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  n	147	None	add
214	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue(),  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue(),  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
215	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den.getValue());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den.getValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den.getValue());	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
216	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue()  +  1);	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
217	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den,  num.getValue());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den,  num.getValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den,  num.getValue());	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
218	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  BigInteger  denominator  =  BigInteger.valueOf(den);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  BigInteger  denominator  =  BigInteger.valueOf(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  BigInteger  denominator  =  BigInteger.valueOf(den);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
219	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  BigInteger  denominator  =  BigInteger.valueOf(den,  num);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  BigInteger  denominator  =  BigInteger.valueOf(den,  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  BigInteger  denominator  =  BigInteger.valueOf(den,  num);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
220	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  numerator;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  numerator;	  BigInteger    denominator    =    BigInteger.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
221	[BUG]  [BUGGY]  BigInteger  deserator  =  new  BigInteger(num.intValue());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  new  BigInteger(num.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  new  BigInteger(num.intValue());	  BigInteger    deserator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
222	[BUG]  [BUGGY]  BigInteger  deserator  =  new  BigInteger(num);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  new  BigInteger(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  new  BigInteger(num);	  BigInteger    deserator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
223	[BUG]  [BUGGY]  BigInteger  deserator  =  numerator;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  numerator;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  numerator;	  BigInteger    deserator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
224	[BUG]  [BUGGY]  BigInteger  deserator  =  new  BigInteger(0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  new  BigInteger(0);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  new  BigInteger(0);	  BigInteger    deserator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
225	[BUG]  [BUGGY]  If(num  ==  null  ||  num.equals(den))  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  If(num  ==  null  ||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	If(num  ==  null  ||  num.equals(den))  {	  if(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    If(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	51	None	replace
226	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    If(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	51	None	replace
227	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.intValue(),  den,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.intValue(),  den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.intValue(),  den,  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num.intValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
228	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  num);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  num);	  BigInteger    numerator    =    BigInteger.valueOf(num.intValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
229	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.intValue(),  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.intValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.intValue(),  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num.intValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
230	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);  MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);  MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);  MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    localizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
231	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    localizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
232	[BUG]  [BUGGY]  MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MutableFormats.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
233	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MutableFormats.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
234	[BUG]  [BUGGY]  mutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MutableFormats.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  mutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MutableFormats.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	mutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MutableFormats.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MutableFormats.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
235	[BUG]  [BUGGY]  if(num  ==  denominator  ||  den.equals(num))  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  denominator  ||  den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  denominator  ||  den.equals(num))  {	  if(num    ==    numerator    ||    den.equals(num))    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	130	None	replace
236	[BUG]  [BUGGY]  if(num  ==  numerator  ||  denominator.equals(num))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  numerator  ||  denominator.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  numerator  ||  denominator.equals(num))  {	  if(num    ==    numerator    ||    den.equals(num))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	130	None	replace
237	[BUG]  [BUGGY]  if(den  ==  numerator  ||  den.equals(num))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  numerator  ||  den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  numerator  ||  den.equals(num))  {	  if(num    ==    numerator    ||    den.equals(num))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	130	None	replace
238	[BUG]  [BUGGY]  if(num  ==  null  ||  des  ==  BigInteger.ZERO)  {  [CE]  cannot  find  symbol  des  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  des  ==  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  des  ==  BigInteger.ZERO)  {	  if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  cannot  find  symbol  des	103	None	replace
239	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  null  ||  den!=  BigInteger.ZERO)  {	  if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    	compilable	  [FE]  ExceptionInInitializerError  	103	27	replace
240	[BUG]  [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ZERO)  {  [FE]  ExceptionInInitializerError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den!=  BigInteger.ZERO)  {	  if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    	compilable	  [FE]  ExceptionInInitializerError  	103	27	replace
241	[BUG]  [BUGGY]  BigInteger  denominator  =  bigInteger.valueOf(num.intValue());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  bigInteger.valueOf(num.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  bigInteger.valueOf(num.intValue());	  BigInteger    denominator    =    BigInteger.valueOf(den.intValue());    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
242	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.intValue(),  num);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.intValue(),  num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den.intValue(),  num);	  BigInteger    denominator    =    BigInteger.valueOf(den.intValue());    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
243	[BUG]  [BUGGY]  if(num!=  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num    ==    null    ||    num.equals(den))    {    if(num!=    null    ||    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	6	None	replace
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	71	2	add
245	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	71	2	add
246	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	71	2	add
247	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	71	2	add
248	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	71	27	add
249	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	71	27	add
250	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	71	2	add
251	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	71	2	add
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	71	2	add
253	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	71	2	add
254	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(BigInteger.ZERO))    {    if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
255	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  If(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  If(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(BigInteger.ZERO))    {    If(num  ==  null  ||  den.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  ';'  expected	24	None	add
256	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  if(num!=  null  ||  den.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  if(num!=  null  ||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(BigInteger.ZERO))    {    if(num!=  null  ||  den.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
257	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  if(num  ==  null  ||  der.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO))  {  if(num  ==  null  ||  der.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(BigInteger.ZERO))    {    if(num  ==  null  ||  der.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
258	[BUG]  [BUGGY]  MathUtils.checkState(num.equals(den));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkState(num.equals(den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkState(num.equals(den));	  MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
259	[BUG]  [BUGGY]  MathUtils.checkNotNull(num);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num);	  MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
260	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	90	2	add
261	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	90	2	add
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	90	2	add
263	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	90	2	add
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	90	2	add
265	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	90	2	add
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);	  	compilable	  [FE]  AssertionError  	90	2	add
267	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num);	  	compilable	  [FE]  AssertionError  	90	2	add
268	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  n  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(n,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  n	90	None	add
269	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.DECEMBER);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.DECEMBER);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.DECEMBER);	  MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
270	[BUG]  [BUGGY]  if(num.equals(den)||  denominator.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  denominator.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  denominator.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(den)||    numerator.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	57	None	replace
271	[BUG]  [BUGGY]  if(num.equals(den)||  numerator.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  numerator.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  numerator.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(den)||    numerator.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	57	None	replace
272	[BUG]  [BUGGY]  if(num.equals(den)||  desnominator.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  desnominator.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  desnominator.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(den)||    numerator.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	57	None	replace
273	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	88	2	add
274	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	88	2	add
275	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	88	2	add
276	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	88	2	add
277	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	88	27	add
278	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	88	27	add
279	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	88	2	add
280	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	88	2	add
281	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	88	2	add
282	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	88	2	add
283	[BUG]  [BUGGY]  If(num.equals(den))  {  [CE]  ';'  expected  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  If(num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	If(num.equals(den))  {	  if(num.equals(den))    {    If(num.equals(den))    {    	non-compiled	[CE]  ';'  expected	45	None	replace
284	[BUG]  [BUGGY]  if(num  ==  numerator  ||  BigInteger.ZERO_HUNDRED.equals(den))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  numerator  ||  BigInteger.ZERO_HUNDRED.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  numerator  ||  BigInteger.ZERO_HUNDRED.equals(den))  {	  if(num    ==    numerator    ||    BigInteger.ZERO_DENOMINATOR.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	67	None	replace
285	[BUG]  [BUGGY]  if(num  ==  denominator  ||  BigInteger.ZERO_DENOMINATOR.equals(den))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  denominator  ||  BigInteger.ZERO_DENOMINATOR.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  denominator  ||  BigInteger.ZERO_DENOMINATOR.equals(den))  {	  if(num    ==    numerator    ||    BigInteger.ZERO_DENOMINATOR.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	67	None	replace
286	[BUG]  [BUGGY]  if(num  ==  denominator  ||  BigInteger.ZERO_DECEMBER.equals(den))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  denominator  ||  BigInteger.ZERO_DECEMBER.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  denominator  ||  BigInteger.ZERO_DECEMBER.equals(den))  {	  if(num    ==    numerator    ||    BigInteger.ZERO_DENOMINATOR.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	67	None	replace
287	[BUG]  [BUGGY]  ||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  ||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
288	[BUG]  [BUGGY]  ||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  ||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
289	[BUG]  [BUGGY]  if(num!=  null  ||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  den.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num    ==    null    ||    den.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	25	None	replace
290	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	98	None	replace
291	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	98	None	replace
292	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ZERO))    {    	compilable	  [FE]  ExceptionInInitializerError  	98	27	replace
293	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ZERO))    {    	compilable	  [FE]  ExceptionInInitializerError  	98	27	replace
294	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DECEMBER)||  den.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ZERO_HUNDRED)||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	56	None	replace
295	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)||  numerator.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)||  numerator.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_HUNDRED)||  numerator.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ZERO_HUNDRED)||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	56	None	replace
296	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  den.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  den.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DENOMINATOR)||  den.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(BigInteger.ZERO_HUNDRED)||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	56	None	replace
297	[BUG]  [BUGGY]  if(num  ==  null  ||  BigInteger.ZERO_HUNDRED.equals(den))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  BigInteger.ZERO_HUNDRED.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  BigInteger.ZERO_HUNDRED.equals(den))  {	  if(num    ==    null    ||    BigInteger.ZERO_DENOMINATOR.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	101	None	replace
298	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den.equals(BigInteger.ZERO_HUNDRED))  {	  if(num    ==    null    ||    BigInteger.ZERO_DENOMINATOR.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	101	None	replace
299	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_HUNDRED))  {	  if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	121	None	replace
300	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DECEMBER))  {	  if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	121	None	replace
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  null  ||  den.equals(LocalizedFormats.ZERO_DENOMINATOR))  {	  if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    	compilable	  [FE]  AssertionError  	121	5	replace
302	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den.equals(LocalizedFormats.ZERO_DENOMINATOR))  {	  if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    	compilable	  [FE]  AssertionError  	121	5	replace
303	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  den,  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
304	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
305	[BUG]  [BUGGY]  if(num.equals(den)||  den.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  den.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  den.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(den)||    den.equals(BigInteger.ZERO_HUNDRED))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	55	None	replace
306	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)||  den.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)||  den.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_HUNDRED)||  den.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(den)||    den.equals(BigInteger.ZERO_HUNDRED))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	55	None	replace
307	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(BigInteger.ZERO)||  num.equals(den))  {	  if(num.equals(BigInteger.ZERO_DENOMINATOR)||    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	17	27	replace
308	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(den))  {  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||  num.equals(den))  {	  if(num.equals(BigInteger.ZERO_DENOMINATOR)||    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	17	27	replace
309	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_QUARATOR)||  num.equals(den))  {  [CE]  cannot  find  symbol  ZERO_QUARATOR  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_QUARATOR)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_QUARATOR)||  num.equals(den))  {	  if(num.equals(BigInteger.ZERO_DENOMINATOR)||    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_QUARATOR	17	None	replace
310	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DECEMBER)||  num.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ZERO_HUNDRED)||    num.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	13	None	replace
311	[BUG]  [BUGGY]  ||  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  ||  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	||  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    ||    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
312	[BUG]  [BUGGY]  ||  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  ||  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	||  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    ||    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
313	[BUG]  [BUGGY]  ||  MathUtils.checkNull(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  ||  MathUtils.checkNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	||  MathUtils.checkNull(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    ||    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
314	[BUG]  [BUGGY]  ||  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  ||  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	||  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    ||    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
315	[BUG]  [BUGGY]  BigInteger  denominator  =  num.getBigInteger();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  num.getBigInteger();  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  num.getBigInteger();	  BigInteger    denominator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
316	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DONE))  {  [CE]  cannot  find  symbol  ZERO_DONE  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DONE))  {	  if(num.equals(BigInteger.ZERO_HUNDRED))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DONE	12	None	replace
317	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	75	2	add
318	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	75	2	add
319	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	75	2	add
320	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	75	2	add
321	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	75	27	add
322	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	75	27	add
323	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	75	2	add
324	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	75	2	add
325	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	75	2	add
326	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	75	2	add
327	[BUG]  [BUGGY]  if(num  ==  null  ||  BigInteger.ONE.equals(num))  {  if(num  ==  null  ||  BigInteger.ONE.equals(num))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  BigInteger.ONE.equals(num))  {  if(num  ==  null  ||  BigInteger.ONE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    BigInteger.ONE.equals(num))    {    if(num  ==  null  ||  BigInteger.ONE.equals(num))  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
328	[BUG]  [BUGGY]  if(num  ==  null  ||  BigInteger.ONE.equals(num))  {  if(num!=  null  ||  BigInteger.ONE.equals(num))  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  BigInteger.ONE.equals(num))  {  if(num!=  null  ||  BigInteger.ONE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    BigInteger.ONE.equals(num))    {    if(num!=  null  ||  BigInteger.ONE.equals(num))  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
329	[BUG]  [BUGGY]  if(num  ==  null  ||  BigInteger.ONE.equals(num))  {  If(num  ==  null  ||  BigInteger.ONE.equals(num))  {  [CE]  ';'  expected  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  BigInteger.ONE.equals(num))  {  If(num  ==  null  ||  BigInteger.ONE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    BigInteger.ONE.equals(num))    {    If(num  ==  null  ||  BigInteger.ONE.equals(num))  {	  	non-compiled	[CE]  ';'  expected	104	None	add
330	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	78	2	add
331	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	78	2	add
332	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	78	2	add
333	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	78	2	add
334	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	78	2	add
335	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	78	2	add
336	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	78	None	add
337	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);	  	non-compiled	[CE]  cannot  find  symbol  DECEMBER	78	None	add
338	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    BigInteger.ONE)    {    if(num  ==  null  ||  den  ==  BigInteger.ONE)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
339	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    BigInteger.ONE)    {    if(num  ==  null  ||  den!=  BigInteger.ONE)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
340	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num!=  null  ||  den  ==  BigInteger.ONE)  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num!=  null  ||  den  ==  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    BigInteger.ONE)    {    if(num!=  null  ||  den  ==  BigInteger.ONE)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
341	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  If(num  ==  null  ||  den  ==  BigInteger.ONE)  {  [CE]  ';'  expected  [FE]          ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  If(num  ==  null  ||  den  ==  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    BigInteger.ONE)    {    If(num  ==  null  ||  den  ==  BigInteger.ONE)  {	  	non-compiled	[CE]  ';'  expected	40	None	add
342	[BUG]  [BUGGY]  if(num!=  numerator  ||  BigInteger.ZERO.equals(den))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  numerator  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  numerator  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	69	None	replace
343	[BUG]  [BUGGY]  if(num  ==  null  ||  des.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  des.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  des.equals(BigInteger.ZERO_HUNDRED))  {	  if(num    ==    null    ||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	23	None	replace
344	[BUG]  [BUGGY]  if(num  ==  null  ||  denominator.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  denominator.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  denominator.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num    ==    null    ||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	23	None	replace
345	[BUG]  [BUGGY]  if(num  ==  null  ||  der.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  der.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  der.equals(BigInteger.ZERO_HUNDRED))  {	  if(num    ==    null    ||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	23	None	replace
346	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  numerator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den,  numerator);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
347	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den  +  1);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
348	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  0,  den);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  0,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  0,  den);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
349	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR  +  1);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
350	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR  +  1);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
351	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  DENOMINATOR);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  DENOMINATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
352	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  DENOMINATOR);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  DENOMINATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
353	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  denominator);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
354	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ZERO))    {    if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
355	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  [CE]  ';'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ZERO))    {    If(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  ';'  expected	97	None	add
356	[BUG]  [BUGGY]  If(num  ==  null  ||  BigInteger.ONE.equals(den))  {  [CE]  ';'  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  If(num  ==  null  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	If(num  ==  null  ||  BigInteger.ONE.equals(den))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    If(num    ==    null    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  ';'  expected	3	None	replace
357	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  BigInteger.ONE.equals(den))  {  [CE]  ';'  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  BigInteger.ONE.equals(den))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    If(num    ==    null    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  ';'  expected	3	None	replace
358	[BUG]  [BUGGY]  MathUtils.checkNumber(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNumber(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNumber(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNumber(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
359	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNumber(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
360	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNumber(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
361	[BUG]  [BUGGY]  MathUtils.checkNumber(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNumber(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNumber(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNumber(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
362	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ONE))  {  if(num  ==  null  ||  den.equals(BigInteger.ONE))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ONE))  {  if(num  ==  null  ||  den.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(BigInteger.ONE))    {    if(num  ==  null  ||  den.equals(BigInteger.ONE))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
363	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ONE))  {  if(num!=  null  ||  den.equals(BigInteger.ONE))  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ONE))  {  if(num!=  null  ||  den.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(BigInteger.ONE))    {    if(num!=  null  ||  den.equals(BigInteger.ONE))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
364	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ONE))  {  If(num  ==  null  ||  den.equals(BigInteger.ONE))  {  [CE]  ';'  expected  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ONE))  {  If(num  ==  null  ||  den.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(BigInteger.ONE))    {    If(num  ==  null  ||  den.equals(BigInteger.ONE))  {	  	non-compiled	[CE]  ';'  expected	38	None	add
365	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ONE))  {  if(num  ==  null  ||  der.equals(BigInteger.ONE))  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.ONE))  {  if(num  ==  null  ||  der.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den.equals(BigInteger.ONE))    {    if(num  ==  null  ||  der.equals(BigInteger.ONE))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
366	[BUG]  [BUGGY]  if(num.equals(den)||  denominator.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  denominator.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  denominator.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(den)||    denominator.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	58	None	replace
367	[BUG]  [BUGGY]  if(num.equals(den)||  numerator.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  numerator.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  numerator.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(den)||    denominator.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	58	None	replace
368	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(den.equals(num))  {	  if(num.equals(den))    {    if(num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	44	27	replace
369	[BUG]  [BUGGY]  if(den.equals(num))  {  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den.equals(num))  {	  if(num.equals(den))    {    if(num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	44	27	replace
370	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DEFAULT);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DEFAULT);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DEFAULT);	  MathUtils.checkNotNull(den,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
371	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DEFEMBER);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DEFEMBER);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DEFEMBER);	  MathUtils.checkNotNull(den,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
372	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  Den  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  Den  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  Den  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
373	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    If(num  ==  den  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  ';'  expected	68	None	add
374	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  der  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  der  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  der  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
375	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  null  ||  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE))    {    	compilable	  [FE]  ExceptionInInitializerError  	127	27	replace
376	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ONE))  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE))    {    	compilable	  [FE]  ExceptionInInitializerError  	127	27	replace
377	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num!=  null  ||  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE))    {    	compilable	  [FE]  ExceptionInInitializerError  	127	27	replace
378	[BUG]  [BUGGY]  if(num!=  null  ||  num.equals(BigInteger.ONE))  {  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE))    {    	compilable	  [FE]  ExceptionInInitializerError  	127	27	replace
379	[BUG]  [BUGGY]  if(num!=  null  ||  num.equals(den))  {  if(num  ==  null  ||  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  num.equals(den))  {  if(num  ==  null  ||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  num.equals(den))  {  if(num  ==  null  ||  num.equals(den))  {	  if(num    ==    null    ||    num.equals(den))    {    if(num    {    null    ||    num.equals(den))    {    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
380	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  if(num  ==  null  ||  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  if(num  ==  null  ||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  null)  {  if(num  ==  null  ||  num.equals(den))  {	  if(num    ==    null    ||    num.equals(den))    {    if(num    {    null    ||    num.equals(den))    {    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
381	[BUG]  [BUGGY]  BigInteger  deserator  =  num;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  num;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  num;	  BigInteger    deserator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
382	[BUG]  [BUGGY]  MutableFormats.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MutableFormats.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MutableFormats.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MutableFormats.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
383	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  BigInteger.ZERO);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  BigInteger.ZERO);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
384	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getKey(),  den);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getKey(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.getKey(),  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
385	[BUG]  [BUGGY]  if(num!=  null  ||  BigInteger.ONE.equals(den))  {  if(num!=  null  ||  BigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  BigInteger.ONE.equals(den))  {  if(num!=  null  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  BigInteger.ONE.equals(den))  {  if(num!=  null  ||  BigInteger.ONE.equals(den))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    if(num!=    null    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
386	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num!=  null  ||  num.equals(BigInteger.ONE))  {  [CE]  illegal  start  of  expression  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num!=  null  ||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num!=  null  ||  num.equals(BigInteger.ONE))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    if(num!=    null    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
387	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.MIN_VALUE))  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.MIN_VALUE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(BigInteger.MIN_VALUE))  {	  if(num    ==    null    ||    num.equals(BigInteger.ZERO_DECEMBER))    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	27	None	replace
388	[BUG]  [BUGGY]  BigInteger  deser  =  BigInteger.valueOf(num,  den);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deser  =  BigInteger.valueOf(num,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deser  =  BigInteger.valueOf(num,  den);	  BigInteger    denominator    =    BigInteger.valueOf(num,    des);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
389	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(den)||    num.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	146	None	replace
390	[BUG]  [BUGGY]  if(num.equals(den)||  denominator.equals(BigInteger.ZERO_DONE))  {  [CE]  cannot  find  symbol  ZERO_DONE  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  denominator.equals(BigInteger.ZERO_DONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  denominator.equals(BigInteger.ZERO_DONE))  {	  if(num.equals(den)||    numerator.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DONE	57	None	replace
391	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	122	2	add
392	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	122	2	add
393	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ONE.compareTo(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ONE.compareTo(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ONE.compareTo(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	non-compiled	[CE]  incompatible  types	122	None	add
394	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  ||  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  ||  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  ||  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    ||    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
395	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  ||  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  ||  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  ||  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    ||    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
396	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
397	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)&&  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(BigInteger.ONE)&&  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ONE))    {    	compilable	  [FE]  ExceptionInInitializerError  	100	27	replace
398	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)&&  num.equals(BigInteger.ONE))  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)&&  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)&&  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ONE))    {    	compilable	  [FE]  ExceptionInInitializerError  	100	27	replace
399	[BUG]  [BUGGY]  if(num  ==  null  ||  des!=  BigInteger.ONE)  {  [CE]  cannot  find  symbol  des  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  des!=  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  des!=  BigInteger.ONE)  {	  if(num    ==    null    ||    den!=    BigInteger.ONE)    {    	non-compiled	[CE]  cannot  find  symbol  des	135	None	replace
400	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  den.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(den)||  den.equals(BigInteger.ONE))  {	  if(num.equals(den)||    den.equals(BigInteger.ZERO_HUNDRED))    {    	compilable	  [FE]  ExceptionInInitializerError  	55	27	replace
401	[BUG]  [BUGGY]  if(num.equals(den)||  den.equals(BigInteger.ONE))  {  [FE]  ExceptionInInitializerError  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  den.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  den.equals(BigInteger.ONE))  {	  if(num.equals(den)||    den.equals(BigInteger.ZERO_HUNDRED))    {    	compilable	  [FE]  ExceptionInInitializerError  	55	27	replace
402	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.intValue());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  den.intValue());	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
403	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	73	2	add
404	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	73	2	add
405	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  -  1);	  BigInteger    denominator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
406	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num  ==  null  ||  num.equals(BigInteger.ONE))  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num  ==  null  ||  num.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num  ==  null  ||  num.equals(BigInteger.ONE))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
407	[BUG]  [BUGGY]  MathUtils.checkNotNull(den  +  1,  LocalizedFormats.NUMERATOR  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den  +  1,  LocalizedFormats.NUMERATOR  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den  +  1,  LocalizedFormats.NUMERATOR  +  1);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
408	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.NUMERATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  null  ||  num.equals(LocalizedFormats.NUMERATOR))  {	  if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    	compilable	  [FE]  AssertionError  	121	5	replace
409	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.NUMERATOR))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.NUMERATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(LocalizedFormats.NUMERATOR))  {	  if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    	compilable	  [FE]  AssertionError  	121	5	replace
410	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.NUMBER))  {  [CE]  cannot  find  symbol  NUMBER  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.NUMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(LocalizedFormats.NUMBER))  {	  if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  NUMBER	121	None	replace
411	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.DEFAULT  |  BigInteger.ZERO;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.DEFAULT  |  BigInteger.ZERO;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.DEFAULT  |  BigInteger.ZERO;	  BigInteger    denominator    =    BigInteger.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
412	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
413	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.MAX_VALUE;  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.MAX_VALUE;	  BigInteger    denominator    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
414	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den  +  1);	  BigInteger    numerator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
415	[BUG]  [BUGGY]  if(num  ==  null  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  null  ||  bigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  null  ||  bigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  null  ||  bigInteger.ZERO.equals(den))  {	  if(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    If(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	51	None	replace
416	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {	  if(num    ==    null    ||    num.equals(den))    {    if(num    ==    null    ||    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	5	27	replace
417	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {	  if(num    ==    null    ||    num.equals(den))    {    if(num    ==    null    ||    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	5	27	replace
418	[BUG]  [BUGGY]  if(num  ==  null  ||  BigInteger.MIN_VALUE.equals(den))  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  BigInteger.MIN_VALUE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  BigInteger.MIN_VALUE.equals(den))  {	  if(num    ==    null    ||    BigInteger.ZERO_DENOMINATOR.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	101	None	replace
419	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
420	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(LocalizedFormats.ZERO_DENOMINATOR)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(LocalizedFormats.ZERO_DENOMINATOR)||  num.equals(den))  {	  if(num.equals(den)||    num.equals(den))    {    if(num.equals(DEN)||    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	49	27	replace
421	[BUG]  [BUGGY]  if(num.equals(LocalizedFormats.ZERO_DENOMINATOR)||  num.equals(den))  {  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(LocalizedFormats.ZERO_DENOMINATOR)||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(LocalizedFormats.ZERO_DENOMINATOR)||  num.equals(den))  {	  if(num.equals(den)||    num.equals(den))    {    if(num.equals(DEN)||    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	49	27	replace
422	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den  -  1);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
423	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den  *  2);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den  *  2);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den  *  2);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
424	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	59	None	add
425	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	59	2	add
426	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	59	2	add
427	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
428	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  not  a  statement	91	None	replace
429	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUtils.	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
430	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUt  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUt  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num);  MathUt	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  not  a  statement	79	None	replace
431	[BUG]  [BUGGY]  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNumber(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
432	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DECOMINATOR))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DECOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DECOMINATOR))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
433	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.MIN_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.MIN_VALUE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  BigInteger.MIN_VALUE)  {	  if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	103	None	replace
434	[BUG]  [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  If(num  ==  null  ||  den!=  BigInteger.ONE)  {  [CE]  ';'  expected  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  If(num  ==  null  ||  den!=  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den!=    BigInteger.ONE)    {    If(num  ==  null  ||  den!=  BigInteger.ONE)  {	  	non-compiled	[CE]  ';'  expected	134	None	add
435	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num!=  null  ||  den  ==  BigInteger.ZERO)  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	84	27	replace
436	[BUG]  [BUGGY]  if(num!=  null  ||  den  ==  BigInteger.ZERO)  {  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  den  ==  BigInteger.ZERO)  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	84	27	replace
437	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num!=  null  ||  BigInteger.ONE.equals(den))  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	84	27	replace
438	[BUG]  [BUGGY]  if(num!=  null  ||  BigInteger.ONE.equals(den))  {  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  BigInteger.ONE.equals(den))  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	84	27	replace
439	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(den,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotEmpty(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotEmpty(den,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotEmpty(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
440	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue()  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(num.doubleValue()  -  1);	  BigInteger    denominator    =    new    BigInteger(num.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
441	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	78	2	add
442	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  	compilable	  [FE]  AssertionError  	78	2	add
443	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	78	2	add
444	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  	compilable	  [FE]  AssertionError  	78	2	add
445	[BUG]  [BUGGY]  if(num  ==  null  ||  BigInteger.ZERO_DENOMINATOR.equals(num))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  BigInteger.ZERO_DENOMINATOR.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  BigInteger.ZERO_DENOMINATOR.equals(num))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(num))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	105	None	replace
446	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  BigInteger.ONE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num!=  null  ||  BigInteger.ONE.equals(num))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(num))    {    	compilable	  [FE]  ExceptionInInitializerError  	105	27	replace
447	[BUG]  [BUGGY]  if(num!=  null  ||  BigInteger.ONE.equals(num))  {  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  BigInteger.ONE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  BigInteger.ONE.equals(num))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(num))    {    	compilable	  [FE]  ExceptionInInitializerError  	105	27	replace
448	[BUG]  [BUGGY]  if(num  ==  null  ||  BigInteger.ONE.equals(den))  {  if(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  BigInteger.ONE.equals(den))  {  if(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  BigInteger.ONE.equals(den))  {  if(num!=  null  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
449	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num  ==  null  ||  bigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num  ==  null  ||  bigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  if(num  ==  null  ||  bigInteger.ONE.equals(den))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    if(num    ==    null    ||    bigInteger.ONE.equals(den))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
450	[BUG]  [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num  ==  null  ||  bigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num  ==  null  ||  bigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den!=  BigInteger.ONE)  {  if(num  ==  null  ||  bigInteger.ONE.equals(den))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    if(num    ==    null    ||    bigInteger.ONE.equals(den))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
451	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue()  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.getValue()  -  1);	  BigInteger    denominator    =    BigInteger.valueOf(num.getValue());    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
452	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	147	None	add
453	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num!=  null  ||  num.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO))    {    	compilable	  [FE]  ExceptionInInitializerError  	15	27	replace
454	[BUG]  [BUGGY]  if(num!=  null  ||  num.equals(BigInteger.ZERO))  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  num.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO))    {    	compilable	  [FE]  ExceptionInInitializerError  	15	27	replace
455	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(2);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(2);	  BigInteger    denominator    =    BigInteger.valueOf(1);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
456	[BUG]  [BUGGY]  if(num  ==  numerator  ||  BigInteger.ONE.equals(den))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  numerator  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  numerator  ||  BigInteger.ONE.equals(den))  {	  if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	69	None	replace
457	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ONE.compareTo(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ONE.compareTo(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ONE.compareTo(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	non-compiled	[CE]  incompatible  types	75	None	add
458	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
459	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
460	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(BigInteger.ZERO_HUNDRED)||    num.equals(BigInteger.ZERO_DECEMBER))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	16	None	replace
461	[BUG]  [BUGGY]  MathUtils.checkState(num  ==  null,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkState(num  ==  null,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkState(num  ==  null,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
462	[BUG]  [BUGGY]  MathUtils.checkArgument(num.equals(den));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkArgument(num.equals(den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkArgument(num.equals(den));	  MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
463	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    localizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
464	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    localizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
465	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(den.intValue());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
466	[BUG]  [BUGGY]  if(BigInteger.ZERO_DECEMBER.equals(num))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO_DECEMBER.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO_DECEMBER.equals(num))  {	  if(num.equals(BigInteger.ZERO_DECEMBER))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	95	None	replace
467	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENO  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENO  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENO	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENO    	non-compiled	[CE]  ')'  expected	136	None	replace
468	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR))  {  If(num.equals(den))  {  [CE]  ';'  expected  [FE]          ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR))  {  If(num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DENOMINATOR))  {  If(num.equals(den))  {	  if(num.equals(den))    {    If(num.equals(den))    {    	non-compiled	[CE]  ';'  expected	45	None	replace
469	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  den  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  den  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  den  +  1);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
470	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(BigInteger.ZERO)&&  num.equals(BigInteger.ZERO))  {	  if(num.equals(den)&&    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	20	27	replace
471	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(BigInteger.ZERO))  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)&&  num.equals(BigInteger.ZERO))  {	  if(num.equals(den)&&    num.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	20	27	replace
472	[BUG]  [BUGGY]  if(num  ==  null  ||  des.one.equals(num))  {  [CE]  package  des  does  not  exist  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  des.one.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  des.one.equals(num))  {	  if(num    ==    null    ||    bigInteger.ONE.equals(num))    {    	non-compiled	[CE]  package  des  does  not  exist	111	None	replace
473	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
474	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [FE]  ExceptionInInitializerError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
475	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
476	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [FE]  ExceptionInInitializerError  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
477	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
478	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [FE]  ExceptionInInitializerError  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
479	[BUG]  [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.MIN_VALUE  ||  num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	108	None	replace
480	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  If(num  ==  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  ';'  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  If(num  ==  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  If(num  ==  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num    ==    null    ||    num.equals(den))    {    If(num    ==    null    ||    num.equals(den))    {    	non-compiled	[CE]  ';'  expected	7	None	replace
481	[BUG]  [BUGGY]  If(num  ==  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  ';'  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  If(num  ==  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	If(num  ==  null  ||  num.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num    ==    null    ||    num.equals(den))    {    If(num    ==    null    ||    num.equals(den))    {    	non-compiled	[CE]  ';'  expected	7	None	replace
482	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num  +  1,  den);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num  +  1,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(num  +  1,  den);	  BigInteger    denominator    =    new    BigInteger(num);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
483	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  den  +  1);	  BigInteger    numerator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
484	[BUG]  [BUGGY]  if(BigInteger.MIN_VALUE.equals(num))  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.MIN_VALUE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.MIN_VALUE.equals(num))  {	  if(num.equals(BigInteger.MIN_VALUE))    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	128	None	replace
485	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ZERO)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	  MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
486	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	109	None	replace
487	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.HUNDRED))  {  [CE]  cannot  find  symbol  HUNDRED  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.HUNDRED))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  HUNDRED	109	None	replace
488	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	88	None	add
489	[BUG]  [BUGGY]  if(num  ==  numerator  ||  BigInteger.MIN_VALUE.equals(den))  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  numerator  ||  BigInteger.MIN_VALUE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  numerator  ||  BigInteger.MIN_VALUE.equals(den))  {	  if(num    ==    numerator    ||    BigInteger.ZERO_DENOMINATOR.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	67	None	replace
490	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  0,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  0,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  0,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
491	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	90	None	add
492	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  MatUtils  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);	  	non-compiled	[CE]  cannot  find  symbol  MatUtils	90	None	add
493	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.MIN_VALUE))  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(BigInteger.MIN_VALUE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den.equals(BigInteger.MIN_VALUE))  {	  if(num    ==    null    ||    den.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	25	None	replace
494	[BUG]  [BUGGY]  if(num.equals(den)||  denominator.equals(BigInteger.ONE))  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  denominator.equals(BigInteger.ONE))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  denominator.equals(BigInteger.ONE))  {	  if(num.equals(den)||    denominator.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	58	None	replace
495	[BUG]  [BUGGY]  if(num.equals(den)||  deserator.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  deserator.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  deserator.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(den)||    denominator.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	58	None	replace
496	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
497	[BUG]  [BUGGY]  BigInteger  num  =  num.intValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  num  =  num.intValue();  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  num  =  num.intValue();	  BigInteger    num    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
498	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO_DECEMBER))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	141	None	replace
499	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
500	[BUG]  [BUGGY]  if(BigInteger.ZERO_HUNDRED.equals(num))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO_HUNDRED.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO_HUNDRED.equals(num))  {	  if(num.equals(BigInteger.ZERO_HUNDRED))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	12	None	replace
501	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(BigInteger.ZERO.equals(num))  {	  if(num.equals(BigInteger.ZERO_HUNDRED))    {    	compilable	  [FE]  ExceptionInInitializerError  	12	27	replace
502	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  [FE]  ExceptionInInitializerError  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(num))  {	  if(num.equals(BigInteger.ZERO_HUNDRED))    {    	compilable	  [FE]  ExceptionInInitializerError  	12	27	replace
503	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  If(num  ==  null  ||  BigInteger.ONE.equals(den))  {  [CE]  ';'  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  If(num  ==  null  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  BigInteger.ONE)  {  If(num  ==  null  ||  BigInteger.ONE.equals(den))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    If(num    ==    null    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  ';'  expected	3	None	replace
504	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(DENOMINATOR,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(DENOMINATOR,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(DENOMINATOR,  LocalizedFormats.DENOMINATOR);  }	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(DENOMINATOR,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
505	[BUG]  [BUGGY]  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	If(num!=  null  ||  BigInteger.ZERO.equals(den))  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    If(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	87	None	replace
506	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  null)  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    If(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	87	None	replace
507	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
508	[BUG]  [BUGGY]  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
509	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	73	2	add
510	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	73	2	add
511	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
512	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);	  	non-compiled	[CE]  cannot  find  symbol  DECEMBER	59	None	add
513	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    	compilable	  [FE]  ExceptionInInitializerError  	140	27	replace
514	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    	compilable	  [FE]  ExceptionInInitializerError  	140	27	replace
515	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null  ||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  null  ||  den  ==  null  ||  num.equals(den))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	1	27	replace
516	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null  ||  num.equals(den))  {  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null  ||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  null  ||  num.equals(den))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	1	27	replace
517	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	  MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
518	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  den  ==  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num!=  null  ||  den  ==  BigInteger.ONE)  {	  if(num    ==    null    ||    den    ==    BigInteger.ONE)    {    	compilable	  [FE]  ExceptionInInitializerError  	41	27	replace
519	[BUG]  [BUGGY]  if(num!=  null  ||  den  ==  BigInteger.ONE)  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  den  ==  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  den  ==  BigInteger.ONE)  {	  if(num    ==    null    ||    den    ==    BigInteger.ONE)    {    	compilable	  [FE]  ExceptionInInitializerError  	41	27	replace
520	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNot	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  not  a  statement	91	None	replace
521	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  den  ==  null)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num!=  null  ||  den  ==  null)  {	  if(num    ==    null    ||    den    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	133	27	replace
522	[BUG]  [BUGGY]  if(num!=  null  ||  den  ==  null)  {  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  den  ==  null)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  den  ==  null)  {	  if(num    ==    null    ||    den    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	133	27	replace
523	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  DECONTINUE);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  DECONTINUE);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  DECONTINUE);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
524	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  DECONTINUE);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(den,  DECONTINUE);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(den,  DECONTINUE);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
525	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  if(num  {  null  ||  den  ==  BigInteger.ZERO)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  BigInteger.ZERO)  {  if(num  {  null  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    if(num  {  null  ||  den  ==  BigInteger.ZERO)  {	  	non-compiled	[CE]  ')'  expected	102	None	add
526	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_FIRST);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_FIRST);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER_FIRST);	  MathUtils.checkNotNull(num,    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
527	[BUG]  [BUGGY]  If(num  ==  null  ||  den  ==  null)  {  [CE]  ';'  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  If(num  ==  null  ||  den  ==  null)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	If(num  ==  null  ||  den  ==  null)  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    If(num    ==    null    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  ';'  expected	3	None	replace
528	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  ';'  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  den.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num    ==    null    ||    BigInteger.ONE.equals(den))    {    If(num    ==    null    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  ';'  expected	3	None	replace
529	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	147	27	add
530	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	147	27	add
531	[BUG]  [BUGGY]  if(num  ==  numerator  ||  den.equals(BigInteger.ZERO))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  numerator  ||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  numerator  ||  den.equals(BigInteger.ZERO))  {	  if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	69	None	replace
532	[BUG]  [BUGGY]  if(num  ==  numerator  ||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  numerator  ||  den.equals(BigInteger.ZERO_DENOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  numerator  ||  den.equals(BigInteger.ZERO_DENOMINATOR))  {	  if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	69	None	replace
533	[BUG]  [BUGGY]  if(num  ==  numerator  ||  bigInteger.ZERO.equals(den))  {  [CE]  package  bigInteger  does  not  exist  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  numerator  ||  bigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  numerator  ||  bigInteger.ZERO.equals(den))  {	  if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  package  bigInteger  does  not  exist	69	None	replace
534	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num,  den);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num,  den);	  BigInteger    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
535	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(den)||    num.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	146	None	replace
536	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num);	  BigInteger    numerator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
537	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  2);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  2);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  2);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
538	[BUG]  [BUGGY]  if(num.equals(LocalizedFormats.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(LocalizedFormats.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(LocalizedFormats.ZERO_DECEMBER))  {	  if(num.equals(den))    {    if(num.equals(DEN))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	46	None	replace
539	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)||  num.equals(BigInteger.ZERO_HUNDRED))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)||  num.equals(BigInteger.ZERO_HUNDRED))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DECEMBER)||  num.equals(BigInteger.ZERO_HUNDRED))  {	  if(num.equals(BigInteger.ZERO_HUNDRED)||    num.equals(BigInteger.ZERO_DECEMBER))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	16	None	replace
540	[BUG]  [BUGGY]  if(num  ==  null  ||  BigInteger.ONE.equals(num))  {  if(num  ==  null  ||  bigInteger.ONE.equals(num))  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  BigInteger.ONE.equals(num))  {  if(num  ==  null  ||  bigInteger.ONE.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    BigInteger.ONE.equals(num))    {    if(num  ==  null  ||  bigInteger.ONE.equals(num))  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
541	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  bigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  bigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den  ==  null)  {  If(num  ==  null  ||  bigInteger.ZERO.equals(den))  {	  if(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    If(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	51	None	replace
542	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null)  {  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num!=  null)  {  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENO    	compilable	  [FE]  ExceptionInInitializerError  	136	27	replace
543	[BUG]  [BUGGY]  if(num!=  null)  {  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null)  {  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null)  {  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENO    	compilable	  [FE]  ExceptionInInitializerError  	136	27	replace
544	[BUG]  [BUGGY]  BigInteger  deserator  =  num.intValue();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  num.intValue();  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  num.intValue();	  BigInteger    deserator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
545	[BUG]  [BUGGY]  BigInteger  deserator  =  num.getBigInteger();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  num.getBigInteger();  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  num.getBigInteger();	  BigInteger    deserator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
546	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
547	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  BigInteger.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    localizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
548	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue()  +  den);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue()  +  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(num.doubleValue()  +  den);	  BigInteger    denominator    =    new    BigInteger(num.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
549	[BUG]  [BUGGY]  MathUtils.check(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.check(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.check(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.check(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
550	[BUG]  [BUGGY]  BigInteger  denominator  =  bigInteger.valueOf(num);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  bigInteger.valueOf(num);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  bigInteger.valueOf(num);	  BigInteger    denominator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
551	[BUG]  [BUGGY]  if(num!=  null  ||  den  ==  null)  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num!=  null  ||  den  ==  null)  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num!=  null  ||  den  ==  null)  {  If(num!=  null  ||  BigInteger.ZERO.equals(den))  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    If(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	87	None	replace
552	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(den))  {  If(num!=  null  ||  num.equals(den))  {  [CE]  ';'  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(den))  {  If(num!=  null  ||  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  num.equals(den))  {  If(num!=  null  ||  num.equals(den))  {	  if(num!=    null    ||    BigInteger.ZERO.equals(den))    {    If(num!=    null    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  ';'  expected	87	None	replace
553	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(numerator,  den);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(numerator,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(numerator,  den);	  BigInteger    denominator    =    BigInteger.valueOf(num,    numerator);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
554	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(number,  den);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(number,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(number,  den);	  BigInteger    denominator    =    BigInteger.valueOf(num,    numerator);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
555	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  der);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  der);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  der);	  BigInteger    denominator    =    BigInteger.valueOf(num,    numerator);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
556	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	90	27	add
557	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(num))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	90	27	add
558	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	90	2	add
559	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	90	2	add
560	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num.equals(BigInteger.ZERO)&&  num.equals(den))  {	  if(num.equals(den)&&    num.equals(den))    {    	compilable	  [FE]  AssertionError  	20	5	replace
561	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(den))  {  [FE]  AssertionError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO)&&  num.equals(den))  {	  if(num.equals(den)&&    num.equals(den))    {    	compilable	  [FE]  AssertionError  	20	5	replace
562	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.ZERO);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkAndFix(num,  BigInteger.ZERO);	  MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
563	[BUG]  [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.valueOf(den));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkAndFix(num,  BigInteger.valueOf(den));  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkAndFix(num,  BigInteger.valueOf(den));	  MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
564	[BUG]  [BUGGY]  BigInteger  denominator  =  num.valueOf(den);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  num.valueOf(den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  num.valueOf(den);	  BigInteger    denominator    =    num.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
565	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)||  den.equals(BigInteger.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]        ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DECEMBER)||  den.equals(BigInteger.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DECEMBER)||  den.equals(BigInteger.ZERO_DECEMBER))  {	  if(num.equals(BigInteger.ZERO_DECEMBER))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	95	None	replace
566	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)||  den.equals(BigInteger.ZERO_HALF))  {  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_HUNDRED)||  den.equals(BigInteger.ZERO_HALF))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_HUNDRED)||  den.equals(BigInteger.ZERO_HALF))  {	  if(num.equals(den)||    den.equals(BigInteger.ZERO_HUNDRED))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	55	None	replace
567	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue());	  BigInteger    denominator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
568	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(den  ==  null  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    if(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  AssertionError  	50	2	replace
569	[BUG]  [BUGGY]  if(den  ==  null  ||  BigInteger.ZERO.equals(den))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    if(num    ==    null    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  AssertionError  	50	2	replace
570	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  MathUtils.check(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(den,    LocalizedFormats.NUMERATOR);    MathUtils.check(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
571	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	78	2	add
572	[BUG]  [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	                MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        MathUtils.checkNotNull(num,        LocalizedFormats.DENOMINATOR);        MathUtils.checkNotNull(num);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	78	2	add
573	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.getValue(),  den);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.getValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num.getValue(),  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
574	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
575	[BUG]  [BUGGY]  ||  MathUtils.check(num,  LocalizedFormats.NUMERATOR);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  ||  MathUtils.check(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	||  MathUtils.check(num,  LocalizedFormats.NUMERATOR);	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    ||    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
576	[BUG]  [BUGGY]  if(num  ==  null  ||  des.equals(BigInteger.ZERO))  {  [CE]  cannot  find  symbol  des  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  des.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  des.equals(BigInteger.ZERO))  {	  if(num    ==    null    ||    den.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  cannot  find  symbol  des	25	None	replace
577	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENO  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENO  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENO	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNumber(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  ')'  expected	93	None	replace
578	[BUG]  [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENO  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENO  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENOMINATOR);  MathUtils.checkNumber(num,  LocalizedFormats.DENO	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNumber(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  ')'  expected	93	None	replace
579	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
580	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue()  +  den);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue()  +  den);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.getValue()  +  den);	  BigInteger    denominator    =    BigInteger.valueOf(num.getValue());    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
581	[BUG]  [BUGGY]  if(num  ==  null  ||  denominator  ==  BigInteger.ZERO)  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  denominator  ==  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  denominator  ==  BigInteger.ZERO)  {	  if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	103	None	replace
582	[BUG]  [BUGGY]  if(num  ==  null  ||  des.length  ==  BigInteger.ZERO)  {  [CE]  cannot  find  symbol  des  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  des.length  ==  BigInteger.ZERO)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  des.length  ==  BigInteger.ZERO)  {	  if(num    ==    null    ||    den    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  cannot  find  symbol  des	103	None	replace
583	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_QUARTER))  {  [CE]  cannot  find  symbol  ZERO_QUARTER  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_QUARTER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_QUARTER))  {	  if(num.equals(BigInteger.ZERO_HUNDRED))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_QUARTER	12	None	replace
584	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNot  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNot  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(num))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNot	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  not  a  statement	92	None	replace
585	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNot  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNot  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  MatUtils.checkNot	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    MatUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  not  a  statement	77	None	replace
586	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR_DECEMBER);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR_DECEMBER);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR_DECEMBER);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
587	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DOMINATOR))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DOMINATOR))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
588	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DELEOMINATOR))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DENOMINATOR))  {  if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DELEOMINATOR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    if(num  ==  null  ||  num.equals(LocalizedFormats.ZERO_DELEOMINATOR))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
589	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num,  den.getValue(),  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num,  den.getValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num,  den.getValue(),  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
590	[BUG]  [BUGGY]  if(num  ==  null  ||  den.equals(LocalizedFormats.ZERO_DECEMBER))  {  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  den.equals(LocalizedFormats.ZERO_DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  den.equals(LocalizedFormats.ZERO_DECEMBER))  {	  if(num    ==    null    ||    num.equals(LocalizedFormats.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	121	None	replace
591	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  BigInteger.ZERO  ||  den.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
592	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  den.equals(BigInteger.ZERO))  {  [FE]  ExceptionInInitializerError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ZERO  ||  den.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
593	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ONE  ||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  BigInteger.ONE  ||  den.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
594	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  den.equals(BigInteger.ZERO))  {  [FE]  ExceptionInInitializerError  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ONE  ||  den.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ONE  ||  den.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
595	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ONE  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	add	if(num  ==  BigInteger.ONE  ||  num.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
596	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  num.equals(BigInteger.ZERO))  {  [FE]  ExceptionInInitializerError  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  BigInteger.ONE  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  BigInteger.ONE  ||  num.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO_DENOMINATOR    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  ExceptionInInitializerError  	108	27	replace
597	[BUG]  [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	          MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
598	[BUG]  [BUGGY]  BigInteger  num  =  num.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  num  =  num.doubleValue();  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  num  =  num.doubleValue();	  BigInteger    num    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
599	[BUG]  [BUGGY]  if(num  ==  numerator  ||  des.equals(num))  {  [CE]  cannot  find  symbol  des  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  numerator  ||  des.equals(num))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  numerator  ||  des.equals(num))  {	  if(num    ==    numerator    ||    BigInteger.ZERO_DENOMINATOR.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  des	67	None	replace
600	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO))  {  [CE]  cannot  find  symbol  ZERO_DENOMINATOR  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(BigInteger.ZERO_DENOMINATOR)||  num.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DENOMINATOR	98	None	replace
601	[BUG]  [BUGGY]  if(den  ==  null)  {  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MutableFormats.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(den  ==  null)  {  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MutableFormats.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(den  ==  null)  {  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MutableFormats.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  }	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    MutableFormats.checkNotNull(den,    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
602	[BUG]  [BUGGY]  if(num.equals(DECEMBER)||  num.equals(DECEMBER))  {  [CE]  cannot  find  symbol  DECEMBER  [FE]            ExceptionInInitializerError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(DECEMBER)||  num.equals(DECEMBER))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(DECEMBER)||  num.equals(DECEMBER))  {	  if(num.equals(den)||    num.equals(den))    {    if(num.equals(DEN)||    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	49	None	replace
603	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.intValue());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	BigInteger  denominator  =  new  BigInteger(num.intValue());	  BigInteger    denominator    =    new    BigInteger(num);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
604	[BUG]  [BUGGY]  if(num  ==  null  ||  der!=  BigInteger.ONE)  {  [CE]  cannot  find  symbol  der  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num  ==  null  ||  der!=  BigInteger.ONE)  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num  ==  null  ||  der!=  BigInteger.ONE)  {	  if(num    ==    null    ||    den!=    BigInteger.ONE)    {    	non-compiled	[CE]  cannot  find  symbol  der	135	None	replace
605	[BUG]  [BUGGY]  if(num.equals(den)||  denominator.equals(BigInteger.ZERO_DIR))  {  [CE]  cannot  find  symbol  ZERO_DIR  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);      [BUGGY]  if(num.equals(den)||  denominator.equals(BigInteger.ZERO_DIR))  {  [BUGGY]      throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	122	122	2	replace	if(num.equals(den)||  denominator.equals(BigInteger.ZERO_DIR))  {	  if(num.equals(den)||    numerator.equals(BigInteger.ZERO_DENOMINATOR))    {    	non-compiled	[CE]  cannot  find  symbol  ZERO_DIR	57	None	replace
