bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(den,  num);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(den,  num);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  numerator  =  BigInteger.valueOf(den,  num);	  BigFraction    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
2	[BUG]  [BUGGY]  BigFraction  denominator  =  BigInteger.valueOf(num,  den);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  denominator  =  BigInteger.valueOf(num,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  denominator  =  BigInteger.valueOf(num,  den);	  BigFraction    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
3	[BUG]  [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(num,  DEN);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(num,  DEN);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  numerator  =  BigInteger.valueOf(num,  DEN);	  BigFraction    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(den)||  den.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(den)||  den.equals(den))  {	  if(BigInteger.ONE.equals(den))    {    	compilable	  [FE]  AssertionError  	83	20	replace
5	[BUG]  [BUGGY]  if(num.equals(den)||  den.equals(den))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(den)||  den.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(den)||  den.equals(den))  {	  if(BigInteger.ONE.equals(den))    {    	compilable	  [FE]  AssertionError  	83	20	replace
6	[BUG]  [BUGGY]  if(num.equals(den)||  num.equals(den  +  1))  {  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(den)||  num.equals(den  +  1))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(den)||  num.equals(den  +  1))  {	  if(num.equals(den)||    num.equals(den))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	22	None	replace
7	[BUG]  [BUGGY]  if(num.equals(den)||  num.equals(den))  {  if(num.equals(den)||  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(den)||  num.equals(den))  {  if(num.equals(den)||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(den)||    num.equals(den))    {    if(num.equals(den)||  num.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
8	[BUG]  [BUGGY]  if(num.equals(den)||  num.equals(den))  {  If(num.equals(den)||  num.equals(den))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(den)||  num.equals(den))  {  If(num.equals(den)||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(den)||    num.equals(den))    {    If(num.equals(den)||  num.equals(den))  {	  	non-compiled	[CE]  ';'  expected	21	None	add
9	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    num    ==    BigInteger.ZERO)    {    if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
10	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  if(num  ==  BigInteger.ZERO  ||  num!=  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  if(num  ==  BigInteger.ZERO  ||  num!=  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    num    ==    BigInteger.ZERO)    {    if(num  ==  BigInteger.ZERO  ||  num!=  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
11	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  if(num!=  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  if(num!=  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    num    ==    BigInteger.ZERO)    {    if(num!=  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
12	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  If(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  If(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    num    ==    BigInteger.ZERO)    {    If(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
13	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  numerator;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  numerator;	  BigInteger    denominator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  new  BigInteger(num);	  BigInteger    denominator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
15	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.MIN_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.MIN_VALUE  -  1;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.MIN_VALUE  -  1;	  BigInteger    numerator    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
16	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.MIN_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.MIN_VALUE  +  1;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.MIN_VALUE  +  1;	  BigInteger    numerator    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
17	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.MIN_VALUE  /  denominator;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.MIN_VALUE  /  denominator;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.MIN_VALUE  /  denominator;	  BigInteger    numerator    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)&&  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(BigInteger.ONE)&&  num.equals(den))  {	  if(num.equals(BigInteger.ONE)||    num.equals(den))    {    	compilable	  [FE]  AssertionError  	13	6	replace
19	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)&&  num.equals(den))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)&&  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)&&  num.equals(den))  {	  if(num.equals(BigInteger.ONE)||    num.equals(den))    {    	compilable	  [FE]  AssertionError  	13	6	replace
20	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(den  +  1))  {  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(den  +  1))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||  num.equals(den  +  1))  {	  if(num.equals(BigInteger.ONE)||    num.equals(den))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	13	None	replace
21	[BUG]  [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.intValue(),  den,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.intValue(),  den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  new  BigInteger(num.intValue(),  den,  denominator);	  BigInteger    numerator    =    new    BigInteger(num.intValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
22	[BUG]  [BUGGY]  BigInteger  numerator  =  new  BigInteger(den.intValue(),  num);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  new  BigInteger(den.intValue(),  num);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  new  BigInteger(den.intValue(),  num);	  BigInteger    numerator    =    new    BigInteger(num.intValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
23	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.intValue(),  den);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.intValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  new  BigInteger(num.intValue(),  den);	  BigInteger    numerator    =    new    BigInteger(num.intValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
24	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(den.intValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(den))  {  if(num.equals(BigInteger.ONE)||  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(den))  {  if(num.equals(BigInteger.ONE)||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||    num.equals(den))    {    if(num.equals(BigInteger.ONE)||  num.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
26	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(den))  {  If(num.equals(BigInteger.ONE)||  num.equals(den))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(den))  {  If(num.equals(BigInteger.ONE)||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||    num.equals(den))    {    If(num.equals(BigInteger.ONE)||  num.equals(den))  {	  	non-compiled	[CE]  ';'  expected	12	None	add
27	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den);	  BigInteger    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
28	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den,  num);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den,  num);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den,  num);	  BigInteger    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
29	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  DEN);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  DEN);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  DEN);	  BigInteger    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ZERO  ||  den  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  AssertionError  	76	2	replace
31	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  den  ==  BigInteger.ZERO)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ZERO  ||  den  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  AssertionError  	76	2	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  AssertionError  	76	2	replace
33	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ZERO))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  AssertionError  	76	2	replace
34	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  numerator  ==  BigInteger.ZERO)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  numerator  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ZERO  ||  numerator  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	76	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(BigInteger.ZERO)&&  num.equals(den))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(den))    {    	compilable	  [FE]  AssertionError  	24	2	replace
36	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(den))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)&&  num.equals(den))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(den))    {    	compilable	  [FE]  AssertionError  	24	2	replace
37	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(den  +  1))  {  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(den  +  1))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||  num.equals(den  +  1))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(den))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	24	None	replace
38	[BUG]  [BUGGY]  BigInteger  num  =  numerator;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  numerator;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  numerator;	  BigInteger    num    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
39	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(den);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  new  BigInteger(den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  new  BigInteger(den);	  BigInteger    num    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
40	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(num.intValue());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  new  BigInteger(num.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  new  BigInteger(num.intValue());	  BigInteger    num    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
41	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(num.doubleValue());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  new  BigInteger(num.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  new  BigInteger(num.doubleValue());	  BigInteger    num    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
42	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  den,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  den,  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
43	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  num);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  num);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  num);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
44	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue(),  den);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.getValue(),  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
45	[BUG]  [BUGGY]  if(num  ==  denominator  ||  den.equals(den))  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  denominator  ||  den.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  denominator  ||  den.equals(den))  {	  if(num    ==    numerator    ||    den.equals(den))    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	98	None	replace
46	[BUG]  [BUGGY]  if(den  ==  numerator  ||  den.equals(num))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den  ==  numerator  ||  den.equals(num))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den  ==  numerator  ||  den.equals(num))  {	  if(num    ==    numerator    ||    den.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	98	None	replace
47	[BUG]  [BUGGY]  if(num  ==  denominator  ||  den.equals(num))  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  denominator  ||  den.equals(num))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  denominator  ||  den.equals(num))  {	  if(num    ==    numerator    ||    den.equals(den))    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	98	None	replace
48	[BUG]  [BUGGY]  if(num  ==  numerator  ||  denominator.equals(den))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  numerator  ||  denominator.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  numerator  ||  denominator.equals(den))  {	  if(num    ==    numerator    ||    den.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	98	None	replace
49	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
50	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    If(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  ';'  expected	42	None	add
51	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  der.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  der.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    if(num.equals(BigInteger.ZERO)||  der.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
52	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den  +  1);  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den  +  1);	  BigInteger    denominator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(den.equals(BigInteger.ZERO))  {	  if    (num.equals(BigInteger.ZERO))    {    if    (num.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	10	2	replace
54	[BUG]  [BUGGY]  if(den.equals(BigInteger.ZERO))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den.equals(BigInteger.ZERO))  {	  if    (num.equals(BigInteger.ZERO))    {    if    (num.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	10	2	replace
55	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  numerator.equals(BigInteger.ZERO))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  numerator.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||  numerator.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	17	None	replace
56	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  denominator.equals(BigInteger.ZERO))  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  denominator.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||  denominator.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	17	None	replace
57	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  des.equals(BigInteger.ZERO))  {  [CE]  cannot  find  symbol  des  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  des.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||  des.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  cannot  find  symbol  des	17	None	replace
58	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.getValue());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.getValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den.getValue());	  BigInteger    numerator    =    BigInteger.valueOf(den.getValue());    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
59	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  denominator);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(den.getValue());    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
60	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  den,  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ONE  ||  den  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ONE    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  AssertionError  	78	15	replace
62	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  den  ==  BigInteger.ZERO)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ONE  ||  den  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ONE    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  AssertionError  	78	15	replace
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ONE  ||  num.equals(den))  {	  if(num    ==    BigInteger.ONE    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  AssertionError  	78	15	replace
64	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  num.equals(den))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ONE  ||  num.equals(den))  {	  if(num    ==    BigInteger.ONE    ||    BigInteger.ZERO.equals(den))    {    	compilable	  [FE]  AssertionError  	78	15	replace
65	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  numerator  ==  BigInteger.ZERO)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  numerator  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ONE  ||  numerator  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ONE    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	78	None	replace
66	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ONE))    {    if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
67	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  If(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  If(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ONE))    {    If(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ONE))  {	  	non-compiled	[CE]  ';'  expected	14	None	add
68	[BUG]  [BUGGY]  if(num!=  numerator  ||  BigInteger.ONE.equals(den))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num!=  numerator  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num!=  numerator  ||  BigInteger.ONE.equals(den))  {	  if(num    ==    den    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	41	None	replace
69	[BUG]  [BUGGY]  if(num  ==  des  ||  BigInteger.ONE.equals(den))  {  [CE]  cannot  find  symbol  des  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  des  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  des  ||  BigInteger.ONE.equals(den))  {	  if(num    ==    den    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  des	41	None	replace
70	[BUG]  [BUGGY]  if(num!=  BigInteger.ZERO)  {  if(num!=  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num!=  BigInteger.ZERO)  {  if(num!=  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num!=    BigInteger.ZERO)    {    if(num!=  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
71	[BUG]  [BUGGY]  if(num!=  BigInteger.ZERO)  {  if(num  ==  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num!=  BigInteger.ZERO)  {  if(num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num!=    BigInteger.ZERO)    {    if(num  ==  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
72	[BUG]  [BUGGY]  if(num!=  BigInteger.ZERO)  {  if(num  >=  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num!=  BigInteger.ZERO)  {  if(num  >=  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num!=    BigInteger.ZERO)    {    if(num  >=  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
73	[BUG]  [BUGGY]  if(num!=  BigInteger.ZERO)  {  if(num  >>  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num!=  BigInteger.ZERO)  {  if(num  >>  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num!=    BigInteger.ZERO)    {    if(num  >>  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
74	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.MIN_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.MIN_VALUE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ZERO  ||  num  ==  BigInteger.MIN_VALUE)  {	  if(num    ==    BigInteger.MIN_VALUE    ||    num    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	88	None	replace
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ONE  ||  num  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.MIN_VALUE    ||    num    ==    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	88	15	replace
76	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  num  ==  BigInteger.ZERO)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ONE  ||  num  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.MIN_VALUE    ||    num    ==    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	88	15	replace
77	[BUG]  [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  den  ==  BigInteger.ZERO)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  den  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.MIN_VALUE  ||  den  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.MIN_VALUE    ||    num    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	88	None	replace
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)&&  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(BigInteger.ONE)&&  num.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	90	2	replace
79	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)&&  num.equals(BigInteger.ZERO))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)&&  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)&&  num.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	90	2	replace
80	[BUG]  [BUGGY]  If(num.equals(den))  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  If(num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	If(num.equals(den))  {	  if(num.equals(den))    {    If(num.equals(den))    {    	non-compiled	[CE]  ';'  expected	60	None	replace
81	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  new  BigInteger(0);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  new  BigInteger(0);	  BigInteger    denominator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
82	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    BigInteger.ONE.equals(den))    {    if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
83	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  If(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  If(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    BigInteger.ONE.equals(den))    {    If(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  ';'  expected	85	None	add
84	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  if(num!=  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  if(num!=  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    BigInteger.ONE.equals(den))    {    if(num!=  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
85	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  if(num  >=  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  if(num  >=  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    BigInteger.ONE.equals(den))    {    if(num  >=  BigInteger.ZERO  ||  BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
86	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.doubleValue(),  num);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.doubleValue(),  num);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.doubleValue(),  num);	  BigInteger    numerator    =    BigInteger.valueOf(num.doubleValue(),    des);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
87	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue(),  den);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue(),  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.doubleValue(),    des);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ONE  ||  num.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO    ||    num.equals(den))    {    	compilable	  [FE]  AssertionError  	27	15	replace
89	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  num.equals(BigInteger.ZERO))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ONE  ||  num.equals(BigInteger.ZERO))  {	  if(num    ==    BigInteger.ZERO    ||    num.equals(den))    {    	compilable	  [FE]  AssertionError  	27	15	replace
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ONE))  {	  if(num    ==    BigInteger.ZERO    ||    num.equals(den))    {    	compilable	  [FE]  AssertionError  	27	15	replace
91	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ONE))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ZERO  ||  num.equals(BigInteger.ONE))  {	  if(num    ==    BigInteger.ZERO    ||    num.equals(den))    {    	compilable	  [FE]  AssertionError  	27	15	replace
92	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  den);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  den);	  BigInteger    deserator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
93	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(den.intValue());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(den.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  BigInteger.valueOf(den.intValue());	  BigInteger    deserator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
94	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num.intValue(),  denominator);	  BigInteger    deserator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
95	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num.intValue()  +  1);	  BigInteger    deserator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
96	[BUG]  [BUGGY]  BigInteger  deserator  =  new  BigInteger(num.intValue());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  new  BigInteger(num.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  new  BigInteger(num.intValue());	  BigInteger    deserator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
97	[BUG]  [BUGGY]  BigInteger  deserator  =  numerator;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  numerator;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  numerator;	  BigInteger    deserator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
98	[BUG]  [BUGGY]  BigInteger  deserator  =  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  0;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  0;	  BigInteger    deserator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
99	[BUG]  [BUGGY]  BigInteger  deserator  =  num;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  num;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  num;	  BigInteger    deserator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
100	[BUG]  [BUGGY]  int  numerator  =  BigInteger.ZERO;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  int  numerator  =  BigInteger.ZERO;  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	int  numerator  =  BigInteger.ZERO;	  if(num.equals(den))    {    int    numerator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
101	[BUG]  [BUGGY]  Integer  numerator  =  BigInteger.ZERO;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  Integer  numerator  =  BigInteger.ZERO;  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	Integer  numerator  =  BigInteger.ZERO;	  if(num.equals(den))    {    int    numerator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  den  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ZERO  ||  den  ==  BigInteger.ONE)  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ONE.equals(den))    {    	compilable	  [FE]  AssertionError  	86	9	replace
103	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  den  ==  BigInteger.ONE)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  den  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ZERO  ||  den  ==  BigInteger.ONE)  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ONE.equals(den))    {    	compilable	  [FE]  AssertionError  	86	9	replace
104	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  numerator  ==  BigInteger.ONE.equals(den))  {  [CE]  incomparable  types:  BigInteger  and  boolean  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  numerator  ==  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ZERO  ||  numerator  ==  BigInteger.ONE.equals(den))  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  incomparable  types:  BigInteger  and  boolean	86	None	replace
105	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ONE    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
106	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ONE    ||    BigInteger.ZERO.equals(den))    {    If(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  ';'  expected	77	None	add
107	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  if(num!=  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  if(num!=  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ONE    ||    BigInteger.ZERO.equals(den))    {    if(num!=  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
108	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  if(num  >=  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  if(num  >=  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ONE    ||    BigInteger.ZERO.equals(den))    {    if(num  >=  BigInteger.ONE  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
109	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
110	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  nu  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  nu  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  nu  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
111	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  des  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  des  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  des  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
112	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  der  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  der  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  der  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den!=  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(den!=  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ZERO)    {    if(num!=    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	30	20	replace
114	[BUG]  [BUGGY]  if(den!=  BigInteger.ZERO)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den!=  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den!=  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ZERO)    {    if(num!=    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	30	20	replace
115	[BUG]  [BUGGY]  if(num  ==  numerator)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  numerator)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  numerator)  {	  if(num    ==    BigInteger.ZERO)    {    if(num    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	29	None	replace
116	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  if(BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  if(BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ZERO.equals(den))    {    if(BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
117	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  If(BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  If(BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ZERO.equals(den))    {    If(BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  ';'  expected	67	None	add
118	[BUG]  [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(num,  den,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(num,  den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  numerator  =  BigInteger.valueOf(num,  den,  denominator);	  BigFraction    numerator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
119	[BUG]  [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(num,  den  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(num,  den  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  numerator  =  BigInteger.valueOf(num,  den  +  1);	  BigFraction    numerator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den.equals(num)||  den.equals(num))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(den.equals(num)||  den.equals(num))  {	  if(den.equals(num))    {    if(den.equals(num))    {    	compilable	  [FE]  AssertionError  	56	6	replace
121	[BUG]  [BUGGY]  if(den.equals(num)||  den.equals(num))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den.equals(num)||  den.equals(num))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den.equals(num)||  den.equals(num))  {	  if(den.equals(num))    {    if(den.equals(num))    {    	compilable	  [FE]  AssertionError  	56	6	replace
122	[BUG]  [BUGGY]  If(num.equals(BigInteger.ZERO))  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  If(num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	If(num.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ONE))    {    If(num.equals(BigInteger.ONE))    {    	non-compiled	[CE]  ';'  expected	72	None	replace
123	[BUG]  [BUGGY]  If(num.equals(BigInteger.ONE))  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  If(num.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	If(num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE))    {    If(num.equals(BigInteger.ONE))    {    	non-compiled	[CE]  ';'  expected	72	None	replace
124	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.doubleValue());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den.doubleValue());	  BigInteger    numerator    =    BigInteger.valueOf(den.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
125	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.doubleValue(),  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.doubleValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.doubleValue(),  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(den.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
126	[BUG]  [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(0);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  numerator  =  BigInteger.valueOf(0);	  BigFraction    numerator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
127	[BUG]  [BUGGY]  BigFraction  denominator  =  BigInteger.valueOf(den);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  denominator  =  BigInteger.valueOf(den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  denominator  =  BigInteger.valueOf(den);	  BigFraction    numerator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
128	[BUG]  [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.intValue(),  denominator,  den);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.intValue(),  denominator,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  new  BigInteger(num.intValue(),  denominator,  den);	  BigInteger    numerator    =    new    BigInteger(num.intValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
129	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(den))  {  if(num.equals(BigInteger.ZERO)||  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(den))  {  if(num.equals(BigInteger.ZERO)||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||    num.equals(den))    {    if(num.equals(BigInteger.ZERO)||  num.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
130	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(den))  {  If(num.equals(BigInteger.ZERO)||  num.equals(den))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(den))  {  If(num.equals(BigInteger.ZERO)||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||    num.equals(den))    {    If(num.equals(BigInteger.ZERO)||  num.equals(den))  {	  	non-compiled	[CE]  ';'  expected	23	None	add
131	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.doubleValue(),  den,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.doubleValue(),  den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.doubleValue(),  den,  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num.doubleValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
132	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    num.equals(den))    {    if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
133	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  If(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  If(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    num.equals(den))    {    If(num  ==  BigInteger.ZERO  ||  num.equals(den))  {	  	non-compiled	[CE]  ';'  expected	26	None	add
134	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  if(num!=  BigInteger.ZERO  ||  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  if(num!=  BigInteger.ZERO  ||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    num.equals(den))    {    if(num!=  BigInteger.ZERO  ||  num.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
135	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  if(num  >=  BigInteger.ZERO  ||  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num.equals(den))  {  if(num  >=  BigInteger.ZERO  ||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    num.equals(den))    {    if(num  >=  BigInteger.ZERO  ||  num.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
136	[BUG]  [BUGGY]  If(num  ==  BigInteger.ZERO)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  If(num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	If(num  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ZERO)    {    If(num    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  ';'  expected	32	None	replace
137	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO))    {    if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
138	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO))    {    If(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  ';'  expected	16	None	add
139	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ONE)||  der.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ONE)||  der.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO))    {    if(num.equals(BigInteger.ONE)||  der.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
140	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(den))  {  if(BigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ONE.equals(den))  {  if(BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ONE.equals(den))    {    if(BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
141	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(den))  {  If(BigInteger.ONE.equals(den))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ONE.equals(den))  {  If(BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ONE.equals(den))    {    If(BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  ';'  expected	82	None	add
142	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(den))  {  if(BigInteger.One.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ONE.equals(den))  {  if(BigInteger.One.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ONE.equals(den))    {    if(BigInteger.One.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
143	[BUG]  [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.intValue(),  den.intValue());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.intValue(),  den.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  new  BigInteger(num.intValue(),  den.intValue());	  BigInteger    numerator    =    new    BigInteger(num.intValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
144	[BUG]  [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.intValue()  /  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.intValue()  /  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  new  BigInteger(num.intValue()  /  1);	  BigInteger    numerator    =    new    BigInteger(num.intValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
145	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(den.intValue());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  new  BigInteger(den.intValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  new  BigInteger(den.intValue());	  BigInteger    denominator    =    new    BigInteger(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
146	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.intValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  new  BigInteger(num.intValue()  +  1);	  BigInteger    denominator    =    new    BigInteger(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
147	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.longValue());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.longValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  new  BigInteger(num.longValue());	  BigInteger    denominator    =    new    BigInteger(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ONE))    {    	compilable	  [FE]  AssertionError  	15	9	replace
149	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ONE))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||  den.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ONE))    {    	compilable	  [FE]  AssertionError  	15	9	replace
150	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ONE))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ONE))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	15	None	replace
151	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.intValue(),  num);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.intValue(),  num);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den.intValue(),  num);	  BigInteger    denominator    =    BigInteger.valueOf(den.intValue());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
152	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.intValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den.intValue()  +  1);	  BigInteger    denominator    =    BigInteger.valueOf(den.intValue());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
153	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ONE.equals(den))    {    if(num  ==  den  ||  BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
154	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  if(num  ==  numerator  ||  BigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  if(num  ==  numerator  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ONE.equals(den))    {    if(num  ==  numerator  ||  BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
155	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  if(num  ==  nu  ||  BigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  if(num  ==  nu  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ONE.equals(den))    {    if(num  ==  nu  ||  BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
156	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  if(num  ==  des  ||  BigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  if(num  ==  des  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ONE.equals(den))    {    if(num  ==  des  ||  BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
157	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  denominator  ==  BigInteger.ONE)  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  denominator  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||  denominator  ==  BigInteger.ONE)  {	  if(num.equals(BigInteger.ZERO)||    numerator    ==    BigInteger.ONE)    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	84	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(BigInteger.ZERO)||  den  ==  BigInteger.ONE)  {	  if(num.equals(BigInteger.ZERO)||    numerator    ==    BigInteger.ONE)    {    	compilable	  [FE]  AssertionError  	84	9	replace
159	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  den  ==  BigInteger.ONE)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  den  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||  den  ==  BigInteger.ONE)  {	  if(num.equals(BigInteger.ZERO)||    numerator    ==    BigInteger.ONE)    {    	compilable	  [FE]  AssertionError  	84	9	replace
160	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)&&  denominator  ==  BigInteger.ONE)  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  denominator  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)&&  denominator  ==  BigInteger.ONE)  {	  if(num.equals(BigInteger.ZERO)||    numerator    ==    BigInteger.ONE)    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	84	None	replace
161	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.ZERO;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  BigInteger.ZERO;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  BigInteger.ZERO;	  BigInteger    deserator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
162	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  BigInteger.MIN_VALUE;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  BigInteger.MIN_VALUE;	  BigInteger    deserator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(den.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE))    {    if(num.equals(BigInteger.ONE))    {    	compilable	  [FE]  AssertionError  	71	9	replace
164	[BUG]  [BUGGY]  if(den.equals(BigInteger.ONE))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ONE))    {    if(num.equals(BigInteger.ONE))    {    	compilable	  [FE]  AssertionError  	71	9	replace
165	[BUG]  [BUGGY]  If(den.equals(num))  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  If(den.equals(num))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	If(den.equals(num))  {	  if(den.equals(num))    {    If(den.equals(num))    {    	non-compiled	[CE]  ';'  expected	57	None	replace
166	[BUG]  [BUGGY]  if(den  ==  BigInteger.ZERO)  {  if(den  ==  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den  ==  BigInteger.ZERO)  {  if(den  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den    ==    BigInteger.ZERO)    {    if(den  ==  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
167	[BUG]  [BUGGY]  if(den  ==  BigInteger.ZERO)  {  if(den!=  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den  ==  BigInteger.ZERO)  {  if(den!=  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den    ==    BigInteger.ZERO)    {    if(den!=  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
168	[BUG]  [BUGGY]  if(den  ==  BigInteger.ZERO)  {  If(den  ==  BigInteger.ZERO)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den  ==  BigInteger.ZERO)  {  If(den  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den    ==    BigInteger.ZERO)    {    If(den  ==  BigInteger.ZERO)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
169	[BUG]  [BUGGY]  if(den  ==  BigInteger.ZERO)  {  if(den  >=  BigInteger.ZERO)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den  ==  BigInteger.ZERO)  {  if(den  >=  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den    ==    BigInteger.ZERO)    {    if(den  >=  BigInteger.ZERO)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
170	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue()  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue()  -  1);	  BigInteger    denominator    =    BigInteger.valueOf(num.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
171	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue()  +  1);	  BigInteger    denominator    =    BigInteger.valueOf(num.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
172	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  denominator,  den);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  denominator,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.getValue(),  denominator,  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
173	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(num))  {  if(BigInteger.ONE.equals(num))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ONE.equals(num))  {  if(BigInteger.ONE.equals(num))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ONE.equals(num))    {    if(BigInteger.ONE.equals(num))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
174	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(num))  {  If(BigInteger.ONE.equals(num))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ONE.equals(num))  {  If(BigInteger.ONE.equals(num))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ONE.equals(num))    {    If(BigInteger.ONE.equals(num))  {	  	non-compiled	[CE]  ';'  expected	69	None	add
175	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(num))  {  if(BigInteger.One.equals(num))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ONE.equals(num))  {  if(BigInteger.One.equals(num))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ONE.equals(num))    {    if(BigInteger.One.equals(num))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
176	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num  +  1);  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num  +  1);	  BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
177	[BUG]  [BUGGY]  if(num  ==  denominator  ||  num  ==  BigInteger.ZERO)  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  denominator  ||  num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  denominator  ||  num  ==  BigInteger.ZERO)  {	  if(num    ==    numerator    ||    num    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	3	None	replace
178	[BUG]  [BUGGY]  if(den  ==  numerator  ||  num  ==  BigInteger.ZERO)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den  ==  numerator  ||  num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den  ==  numerator  ||  num  ==  BigInteger.ZERO)  {	  if(num    ==    numerator    ||    num    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	3	None	replace
179	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue(),  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue(),  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
180	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den.getValue());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den.getValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den.getValue());	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
181	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den,  num.getValue());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den,  num.getValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den,  num.getValue());	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
182	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  denominator.getValue());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  denominator.getValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  denominator.getValue());	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
183	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ZERO))    {    if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
184	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||    num.equals(BigInteger.ZERO))    {    If(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  ';'  expected	89	None	add
185	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num!=  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ZERO  ||  num!=  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ZERO    ||    num    ==    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	2	20	replace
186	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num!=  BigInteger.ZERO)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  num!=  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ZERO  ||  num!=  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ZERO    ||    num    ==    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	2	20	replace
187	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num!=  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num!=  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ZERO    ||    num    ==    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	2	20	replace
188	[BUG]  [BUGGY]  if(num!=  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num!=  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num!=  BigInteger.ZERO  ||  num  ==  BigInteger.ZERO)  {	  if(num    ==    BigInteger.ZERO    ||    num    ==    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	2	20	replace
189	[BUG]  [BUGGY]  BigInteger  numerator  =  new  BigInteger(den.intValue(),  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  new  BigInteger(den.intValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  new  BigInteger(den.intValue(),  denominator);	  BigInteger    numerator    =    new    BigInteger(den.intValue());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
190	[BUG]  [BUGGY]  if(num!=  numerator  ||  BigInteger.ZERO.equals(den))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num!=  numerator  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num!=  numerator  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	95	None	replace
191	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue(),  den);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.intValue(),  den);	  BigInteger    denominator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
192	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  +  1);	  BigInteger    denominator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
193	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.intValue()  -  1);	  BigInteger    denominator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
194	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ZERO))    {    if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
195	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  If(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ZERO))    {    If(num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {	  	non-compiled	[CE]  ';'  expected	44	None	add
196	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  new  BigInteger(0);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  new  BigInteger(0);	  BigInteger    num    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
197	[BUG]  [BUGGY]  BigInteger  num  =  num;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  num;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  num;	  BigInteger    num    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
198	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
199	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    BigInteger.ZERO.equals(den))    {    If(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  ';'  expected	75	None	add
200	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  if(num!=  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  if(num!=  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    BigInteger.ZERO.equals(den))    {    if(num!=  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
201	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  if(num  >=  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  if(num  >=  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    BigInteger.ZERO    ||    BigInteger.ZERO.equals(den))    {    if(num  >=  BigInteger.ZERO  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
202	[BUG]  [BUGGY]  BigInteger  denominator  =(BigInteger)num.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =(BigInteger)num.clone();  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =(BigInteger)num.clone();	  BigInteger    denominator    =(BigInteger)den.clone();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
203	[BUG]  [BUGGY]  BigInteger  desnominator  =(BigInteger)den.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  desnominator  =(BigInteger)den.clone();  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  desnominator  =(BigInteger)den.clone();	  BigInteger    denominator    =(BigInteger)den.clone();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
204	[BUG]  [BUGGY]  if(num  ==  numerator  ||  num!=  BigInteger.ZERO)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  numerator  ||  num!=  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  numerator  ||  num!=  BigInteger.ZERO)  {	  if(num!=    BigInteger.ZERO)    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	97	None	replace
205	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.intValue(),  den);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.intValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.intValue(),  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.intValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
206	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  num);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  num);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.intValue(),  num);	  BigInteger    numerator    =    BigInteger.valueOf(num.intValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
207	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.longValue(),  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.longValue(),  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.longValue(),  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num.intValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
208	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.doubleValue(),  denominator,  den);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.doubleValue(),  denominator,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.doubleValue(),  denominator,  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.doubleValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(den.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	43	2	replace
210	[BUG]  [BUGGY]  if(den.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den.equals(BigInteger.ZERO)||  den.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	43	2	replace
211	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ZERO))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)||  numerator.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	43	None	replace
212	[BUG]  [BUGGY]  If  (num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  If  (num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	If  (num.equals(BigInteger.ZERO)||  num.equals(BigInteger.ZERO))  {	  if    (num.equals(BigInteger.ZERO))    {    If    (num.equals(BigInteger.ZERO))    {    	non-compiled	[CE]  ';'  expected	11	None	replace
213	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.DEFAULT;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.DEFAULT;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.DEFAULT;	  BigInteger    denominator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
214	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.doubleValue()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.doubleValue()  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.doubleValue()  -  1);	  BigInteger    numerator    =    BigInteger.valueOf(den.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
215	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.intValue()  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num.intValue()  -  1);	  BigInteger    deserator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
216	[BUG]  [BUGGY]  if(den  ==  BigInteger.MIN_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den  ==  BigInteger.MIN_VALUE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den  ==  BigInteger.MIN_VALUE)  {	  if(num    ==    BigInteger.ZERO)    {    if(num    >=    BigInteger.ZERO)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	31	None	replace
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(den  ==  BigInteger.ONE)  {	  if(num    ==    BigInteger.ZERO)    {    if(num    >=    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	31	9	replace
218	[BUG]  [BUGGY]  if(den  ==  BigInteger.ONE)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den  ==  BigInteger.ONE)  {	  if(num    ==    BigInteger.ZERO)    {    if(num    >=    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	31	9	replace
219	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den,  denominator);	  BigInteger    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
220	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  den  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(BigInteger.ZERO)&&  den  ==  BigInteger.ONE)  {	  if(num.equals(BigInteger.ZERO)||    numerator    ==    BigInteger.ONE)    {    	compilable	  [FE]  AssertionError  	84	2	replace
221	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)&&  den  ==  BigInteger.ONE)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  den  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)&&  den  ==  BigInteger.ONE)  {	  if(num.equals(BigInteger.ZERO)||    numerator    ==    BigInteger.ONE)    {    	compilable	  [FE]  AssertionError  	84	2	replace
222	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  den  +  1);	  BigInteger    numerator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
223	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(2);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(2);	  BigInteger    denominator    =    BigInteger.valueOf(1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(BigInteger.ZERO)&&  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ONE))    {    	compilable	  [FE]  AssertionError  	15	2	replace
225	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(BigInteger.ONE))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  num.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)&&  num.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ZERO)||    num.equals(BigInteger.ONE))    {    	compilable	  [FE]  AssertionError  	15	2	replace
226	[BUG]  [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  num  ==  BigInteger.MAX_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  num  ==  BigInteger.MAX_VALUE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.MIN_VALUE  ||  num  ==  BigInteger.MAX_VALUE)  {	  if(num    ==    BigInteger.MIN_VALUE    ||    num    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	88	None	replace
227	[BUG]  [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  num  ==  BigInteger.MIN_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  num  ==  BigInteger.MIN_VALUE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.MIN_VALUE  ||  num  ==  BigInteger.MIN_VALUE)  {	  if(num    ==    BigInteger.MIN_VALUE    ||    num    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	88	None	replace
228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {	  if(num.equals(den)||    num.equals(den))    {    	compilable	  [FE]  AssertionError  	22	15	replace
229	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||  num.equals(BigInteger.ONE))  {	  if(num.equals(den)||    num.equals(den))    {    	compilable	  [FE]  AssertionError  	22	15	replace
230	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.getValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.getValue()  +  1);	  BigInteger    numerator    =    BigInteger.valueOf(den.getValue());    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
231	[BUG]  [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(den  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  numerator  =  BigInteger.valueOf(den  +  1);	  BigFraction    numerator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
232	[BUG]  [BUGGY]  BigInteger  deserator  =  new  BigInteger(num);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  new  BigInteger(num);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  new  BigInteger(num);	  BigInteger    deserator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
233	[BUG]  [BUGGY]  BigInteger  deserator  =  num.getBigInteger();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  num.getBigInteger();  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  num.getBigInteger();	  BigInteger    deserator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
234	[BUG]  [BUGGY]  BigInteger  num  =  den;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  den;  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  den;	  BigInteger    num    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	43	15	replace
236	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ONE))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||  den.equals(BigInteger.ONE))  {	  if(num.equals(BigInteger.ZERO)||    den.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	43	15	replace
237	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den  -  1);  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den  -  1);	  BigInteger    denominator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
238	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  if(bigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  if(bigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ZERO.equals(den))    {    if(bigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
239	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  den);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.getValue(),  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.getValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
240	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.intValue()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.intValue()  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den.intValue()  -  1);	  BigInteger    denominator    =    BigInteger.valueOf(den.intValue());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
241	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den  +  1);	  BigInteger    numerator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
242	[BUG]  [BUGGY]  BigInteger  num  =  den.valueOf(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  den.valueOf(0);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  den.valueOf(0);	  BigInteger    num    =    BigInteger.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
243	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  new  BigInteger(num.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  new  BigInteger(num.doubleValue());	  BigInteger    denominator    =    new    BigInteger(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
244	[BUG]  [BUGGY]  if(num  ==  numerator  ||  denominator  ==  BigInteger.ZERO)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  numerator  ||  denominator  ==  BigInteger.ZERO)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  numerator  ||  denominator  ==  BigInteger.ZERO)  {	  if(num    ==    numerator    ||    num    ==    BigInteger.ZERO)    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	3	None	replace
245	[BUG]  [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.intValue()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.intValue()  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  new  BigInteger(num.intValue()  -  1);	  BigInteger    numerator    =    new    BigInteger(num.intValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
246	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.doubleValue(),  den  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num.doubleValue(),  den  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num.doubleValue(),  den  +  1);	  BigInteger    numerator    =    BigInteger.valueOf(num.doubleValue(),    den);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
247	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(den.intValue()  +  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(den.intValue()  +  1);	  BigInteger    numerator    =    BigInteger.valueOf(den.intValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  num  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ONE  ||  num  ==  BigInteger.ONE)  {	  if(num    ==    BigInteger.ZERO    ||    num    ==    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	2	15	replace
249	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE  ||  num  ==  BigInteger.ONE)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE  ||  num  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ONE  ||  num  ==  BigInteger.ONE)  {	  if(num    ==    BigInteger.ZERO    ||    num    ==    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	2	15	replace
250	[BUG]  [BUGGY]  if(num.equals(den)||  num.equals(den))  {  if(num.equals(DEN)||  num.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(den)||  num.equals(den))  {  if(num.equals(DEN)||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(den)||    num.equals(den))    {    if(num.equals(DEN)||  num.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
251	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  denominator.equals(den))  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  denominator.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ZERO  ||  denominator.equals(den))  {	  if(num    ==    numerator    ||    den.equals(den))    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	98	None	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num  ==  BigInteger.ONE)  {	  if(num    ==    BigInteger.ZERO)    {    If(num    ==    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	32	15	replace
253	[BUG]  [BUGGY]  if(num  ==  BigInteger.ONE)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ONE)  {	  if(num    ==    BigInteger.ZERO)    {    If(num    ==    BigInteger.ZERO)    {    	compilable	  [FE]  AssertionError  	32	15	replace
254	[BUG]  [BUGGY]  BigInteger  numerator  =  new  BigInteger(den.doubleValue());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  new  BigInteger(den.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  new  BigInteger(den.doubleValue());	  BigInteger    numerator    =    new    BigInteger(den.intValue());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
255	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	17	2	replace
256	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)&&  den.equals(BigInteger.ZERO))  {	  if(num.equals(BigInteger.ONE)||    den.equals(BigInteger.ZERO))    {    	compilable	  [FE]  AssertionError  	17	2	replace
257	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  If(num  ==  den  ||  BigInteger.ONE.equals(den))  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  If(num  ==  den  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ONE.equals(den))    {    If(num  ==  den  ||  BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  ';'  expected	40	None	add
258	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  If(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    If(num  ==  den  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  ';'  expected	94	None	add
259	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  numerator  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  numerator  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  numerator  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
260	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  Den  ||  BigInteger.ZERO.equals(den))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ZERO.equals(den))  {  if(num  ==  Den  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    if(num  ==  Den  ||  BigInteger.ZERO.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
261	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO  ||  numerator  ==  BigInteger.ONE)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.ZERO  ||  numerator  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.ZERO  ||  numerator  ==  BigInteger.ONE)  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	86	None	replace
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ONE.equals(num)||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	add	if(BigInteger.ONE.equals(num)||  BigInteger.ONE.equals(den))  {	  if(BigInteger.ONE.equals(num))    {    	compilable	  [FE]  AssertionError  	70	15	replace
263	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(num)||  BigInteger.ONE.equals(den))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ONE.equals(num)||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ONE.equals(num)||  BigInteger.ONE.equals(den))  {	  if(BigInteger.ONE.equals(num))    {    	compilable	  [FE]  AssertionError  	70	15	replace
264	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue()  -  1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  den.getValue()  -  1);	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
265	[BUG]  [BUGGY]  if(num  ==  des  ||  BigInteger.ZERO.equals(den))  {  [CE]  cannot  find  symbol  des  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  des  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  des  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  des	95	None	replace
266	[BUG]  [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(den,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  numerator  =  BigInteger.valueOf(den,  denominator);	  BigFraction    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
267	[BUG]  [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(num,  DENOMINATOR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(num,  DENOMINATOR);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  numerator  =  BigInteger.valueOf(num,  DENOMINATOR);	  BigFraction    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
268	[BUG]  [BUGGY]  if(den.equals(num)||  DEN.equals(num))  {  [CE]  cannot  find  symbol  DEN  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den.equals(num)||  DEN.equals(num))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den.equals(num)||  DEN.equals(num))  {	  if(den.equals(num))    {    if(DEN.equals(num))    {    	non-compiled	[CE]  cannot  find  symbol  DEN	58	None	replace
269	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(1);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  BigInteger.valueOf(1);	  BigInteger    deserator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
270	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(den))  {  if(bigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ONE.equals(den))  {  if(bigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ONE.equals(den))    {    if(bigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
271	[BUG]  [BUGGY]  if(num  ==  BigInteger.MIN_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.MIN_VALUE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.MIN_VALUE)  {	  if(num!=    BigInteger.ZERO)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	97	None	replace
272	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(DEN))  {  [CE]  cannot  find  symbol  DEN  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ONE)||  num.equals(DEN))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ONE)||  num.equals(DEN))  {	  if(num.equals(BigInteger.ONE)||    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  DEN	13	None	replace
273	[BUG]  [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  num.equals(BigInteger.MAX_VALUE))  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  num.equals(BigInteger.MAX_VALUE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.MIN_VALUE  ||  num.equals(BigInteger.MAX_VALUE))  {	  if(num    ==    BigInteger.ZERO    ||    num.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	27	None	replace
274	[BUG]  [BUGGY]  if(den  ==  numerator  ||  BigInteger.ONE.equals(den))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(den  ==  numerator  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(den  ==  numerator  ||  BigInteger.ONE.equals(den))  {	  if(den    ==    numerator    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	28	None	replace
275	[BUG]  [BUGGY]  BigInteger  deserator  =  num.valueOf(0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  num.valueOf(0);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  num.valueOf(0);	  BigInteger    deserator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
276	[BUG]  [BUGGY]  BigInteger  num  =  num.intValue();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  num.intValue();  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  num.intValue();	  BigInteger    num    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
277	[BUG]  [BUGGY]  BigInteger  num  =  num.getBigInteger();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  num.getBigInteger();  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  num.getBigInteger();	  BigInteger    num    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
278	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue()  +  den.doubleValue());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue()  +  den.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.doubleValue()  +  den.doubleValue());	  BigInteger    denominator    =    BigInteger.valueOf(num.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
279	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num.getValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num.getValue());	  BigInteger    numerator    =    BigInteger.valueOf(den.getValue());    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
280	[BUG]  [BUGGY]  BigInteger  deserator  =  num.intValue();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  num.intValue();  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  num.intValue();	  BigInteger    deserator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
281	[BUG]  [BUGGY]  BigInteger  deserator  =  new  BigInteger(num.doubleValue());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  new  BigInteger(num.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  new  BigInteger(num.doubleValue());	  BigInteger    deserator    =    BigInteger.ONE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
282	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.doubleValue());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num.doubleValue());	  BigInteger    deserator    =    BigInteger.valueOf(num.intValue());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
283	[BUG]  [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.longValue());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  new  BigInteger(num.longValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  new  BigInteger(num.longValue());	  BigInteger    numerator    =    new    BigInteger(num.intValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
284	[BUG]  [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.doubleValue(),  den);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  deserator  =  BigInteger.valueOf(num.doubleValue(),  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  deserator  =  BigInteger.valueOf(num.doubleValue(),  den);	  BigInteger    numerator    =    BigInteger.valueOf(num.doubleValue(),    des);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
285	[BUG]  [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  if(num  ==  der  ||  BigInteger.ONE.equals(den))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  den  ||  BigInteger.ONE.equals(den))  {  if(num  ==  der  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num    ==    den    ||    BigInteger.ONE.equals(den))    {    if(num  ==  der  ||  BigInteger.ONE.equals(den))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
286	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  der);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  der);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  der);	  BigInteger    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
287	[BUG]  [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  den  ==  BigInteger.MAX_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  BigInteger.MIN_VALUE  ||  den  ==  BigInteger.MAX_VALUE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  BigInteger.MIN_VALUE  ||  den  ==  BigInteger.MAX_VALUE)  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	76	None	replace
288	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.doubleValue(),  num);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den.doubleValue(),  num);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den.doubleValue(),  num);	  BigInteger    numerator    =    BigInteger.valueOf(num.doubleValue(),    denominator);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
289	[BUG]  [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.doubleValue());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  numerator  =  BigInteger.valueOf(num,  den.doubleValue());  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  numerator  =  BigInteger.valueOf(num,  den.doubleValue());	  BigInteger    numerator    =    BigInteger.valueOf(num,    den.getValue());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
290	[BUG]  [BUGGY]  if(num  ==  deserator  ||  BigInteger.ZERO.equals(den))  {  [CE]  cannot  find  symbol  deserator  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  deserator  ||  BigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  deserator  ||  BigInteger.ZERO.equals(den))  {	  if(num    ==    denominator    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  deserator	25	None	replace
291	[BUG]  [BUGGY]  if(num  ==  numerator  ||  bigInteger.ZERO.equals(den))  {  [CE]  package  bigInteger  does  not  exist  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  numerator  ||  bigInteger.ZERO.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  numerator  ||  bigInteger.ZERO.equals(den))  {	  if(num    ==    den    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  package  bigInteger  does  not  exist	95	None	replace
292	[BUG]  [BUGGY]  if(num  ==  numerator  ||  num  ==  BigInteger.ONE  ||  num.equals(den))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  numerator  ||  num  ==  BigInteger.ONE  ||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  numerator  ||  num  ==  BigInteger.ONE  ||  num.equals(den))  {	  if(num    ==    BigInteger.ONE    ||    BigInteger.ZERO.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	78	None	replace
293	[BUG]  [BUGGY]  if(num!=  BigInteger.ZERO  ||  num  ==  numerator)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num!=  BigInteger.ZERO  ||  num  ==  numerator)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num!=  BigInteger.ZERO  ||  num  ==  numerator)  {	  if(num!=    BigInteger.ZERO)    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	97	None	replace
294	[BUG]  [BUGGY]  if(num.equals(den))  {  int  numerator  =  BigInteger.ZERO;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(den))  {  int  numerator  =  BigInteger.ZERO;  }  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(den))  {  int  numerator  =  BigInteger.ZERO;  }	  if(num.equals(den))    {    int    numerator    =    BigInteger.ZERO;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
295	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(num))  {  if(bigInteger.ONE.equals(num))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(BigInteger.ONE.equals(num))  {  if(bigInteger.ONE.equals(num))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(BigInteger.ONE.equals(num))    {    if(bigInteger.ONE.equals(num))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
296	[BUG]  [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(num,  denominator,  den);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigFraction  numerator  =  BigInteger.valueOf(num,  denominator,  den);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigFraction  numerator  =  BigInteger.valueOf(num,  denominator,  den);	  BigFraction    numerator    =    BigInteger.valueOf(num,    denominator);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
297	[BUG]  [BUGGY]  if(num  ==  numerator  ||  den.equals(BigInteger.ONE))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  numerator  ||  den.equals(BigInteger.ONE))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  numerator  ||  den.equals(BigInteger.ONE))  {	  if(num    ==    den    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	41	None	replace
298	[BUG]  [BUGGY]  if(num  ==  numerator  ||  num.equals(den))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  numerator  ||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  numerator  ||  num.equals(den))  {	  if(num    ==    den    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	41	None	replace
299	[BUG]  [BUGGY]  BigInteger  denominator  =  num.valueOf(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  denominator  =  num.valueOf(0);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  denominator  =  num.valueOf(0);	  BigInteger    denominator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
300	[BUG]  [BUGGY]  if(num  ==  numerator  ||  den.equals(BigInteger.ZERO))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  numerator  ||  den.equals(BigInteger.ZERO))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  numerator  ||  den.equals(BigInteger.ZERO))  {	  if(num    ==    numerator    ||    den.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	98	None	replace
301	[BUG]  [BUGGY]  BigInteger  num  =  num.valueOf(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  BigInteger  num  =  num.valueOf(0);  [BUGGY]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	BigInteger  num  =  num.valueOf(0);	  BigInteger    num    =    BigInteger.valueOf(0);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
302	[BUG]  [BUGGY]  if(num  ==  deserator  ||  BigInteger.ONE.equals(den))  {  [CE]  cannot  find  symbol  deserator  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  deserator  ||  BigInteger.ONE.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  deserator  ||  BigInteger.ONE.equals(den))  {	  if(num    ==    denominator    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  cannot  find  symbol  deserator	39	None	replace
303	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO)&&  numerator  ==  BigInteger.ONE)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num.equals(BigInteger.ZERO)&&  numerator  ==  BigInteger.ONE)  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num.equals(BigInteger.ZERO)&&  numerator  ==  BigInteger.ONE)  {	  if(num.equals(BigInteger.ZERO)||    numerator    ==    BigInteger.ONE)    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	84	None	replace
304	[BUG]  [BUGGY]  if(num  ==  numerator  ||  num  ==  BigInteger.ZERO  ||  num.equals(den))  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }      [BUGGY]  if(num  ==  numerator  ||  num  ==  BigInteger.ZERO  ||  num.equals(den))  {  [BUGGY]      numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	125	125	2	replace	if(num  ==  numerator  ||  num  ==  BigInteger.ZERO  ||  num.equals(den))  {	  if(num    ==    BigInteger.ZERO    ||    BigInteger.ONE.equals(den))    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	86	None	replace
