bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  num  =  num.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	        num    =    num.negate();    num  =  num.negate();	  	compilable	  [FE]  AssertionError  	13	2	add
2	[BUG]  [BUGGY]      num  =  num.negate();  num  =  num.negate();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  num  =  num.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    num  =  num.negate();	  	compilable	  [FE]  AssertionError  	13	2	add
3	[BUG]  [BUGGY]      num  =  num.negate();  int  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  int  num  =  num.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    int  num  =  num.negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	13	None	add
4	[BUG]  [BUGGY]      num  =  num.negate();  num  =  num.megate();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  num  =  num.megate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    num  =  num.megate();	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
5	[BUG]  [BUGGY]      num  =  num.negate();  num  =  num.egate();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  num  =  num.egate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    num  =  num.egate();	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
6	[BUG]  [BUGGY]      num  =  num.negate();  num  =  num.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  num  =  num.negate();  }  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    num  =  num.negate();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(num.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(num.compareTo(BigInteger.ZERO)>  0)  {	  if(den.compareTo(BigInteger.ZERO)>    0)    {    	compilable	  [FE]  AssertionError  	2	10	replace
8	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)>  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(num.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ZERO)>  0)  {	  if(den.compareTo(BigInteger.ZERO)>    0)    {    	compilable	  [FE]  AssertionError  	2	10	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(BigInteger.ZERO)  >=  0)  {	  if(den.compareTo(BigInteger.ZERO)>    0)    {    	compilable	  [FE]  AssertionError  	2	11	replace
10	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)  >=  0)  {	  if(den.compareTo(BigInteger.ZERO)>    0)    {    	compilable	  [FE]  AssertionError  	2	11	replace
11	[BUG]  [BUGGY]  gcd  =  gcd.getBigInteger();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  gcd  =  gcd.getBigInteger();  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  gcd.getBigInteger();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
12	[BUG]  [BUGGY]  gcd  =  gcd.getIntValue();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  gcd  =  gcd.getIntValue();  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  gcd.getIntValue();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
13	[BUG]  [BUGGY]  gcd  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  gcd  =  gcd.negate();  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  gcd.negate();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(num)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(num)>  0)  {	  if    (num.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	4	11	replace
15	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(num)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>  0)  {	  if    (num.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	4	11	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(den)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(den)>  0)  {	  if    (num.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	4	7	replace
17	[BUG]  [BUGGY]  if(den.compareTo(den)>  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(den)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)>  0)  {	  if    (num.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	4	7	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(num.compareTo(den)  <  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(num.compareTo(den)  <  0)  {	  if    (num.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	4	11	replace
19	[BUG]  [BUGGY]  if(num.compareTo(den)  <  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(num.compareTo(den)  <  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(den)  <  0)  {	  if    (num.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	4	11	replace
20	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(num);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  den  =  gcd.negate(num);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  gcd.negate(num);	      BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
21	[BUG]  [BUGGY]  num  =  num.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.negate(den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate(den);	      num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
22	[BUG]  [BUGGY]  num  =  num.hashCode();  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.hashCode();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.hashCode();	      num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
23	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)>  0)  {  if(den.compareTo(BigInteger.ZERO)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)>  0)  {  if(den.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)>    0)    {    if(den.compareTo(BigInteger.ZERO)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
24	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)>  0)  {  If(den.compareTo(BigInteger.ZERO)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)>  0)  {  If(den.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)>    0)    {    If(den.compareTo(BigInteger.ZERO)>  0)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
25	[BUG]  [BUGGY]  BigInteger  num  =  numerator.add(den);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  numerator.add(den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  numerator.add(den);	      BigInteger    num    =    num.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
26	[BUG]  [BUGGY]  BigInteger  num  =  num.add(den,  den);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  num.add(den,  den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(den,  den);	      BigInteger    num    =    num.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
27	[BUG]  [BUGGY]  BigInteger  num  =  den.add(num);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  den.add(num);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  den.add(num);	      BigInteger    num    =    num.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	        num    =    num.divide(gcd);    num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	10	11	add
29	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	10	11	add
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	        num    =    num.divide(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	10	10	add
31	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	10	10	add
32	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  num  =  num.parse(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    num  =  num.parse(gcd);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
33	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.indexOf(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  num  =  num.indexOf(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    num  =  num.indexOf(gcd);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	        num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();	  	compilable	  [FE]  AssertionError  	10	19	add
35	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();	  	compilable	  [FE]  AssertionError  	10	19	add
36	[BUG]  [BUGGY]  BigInteger  denominator  =  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  denominator  =  den.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  den.negate();	      BigInteger    denominator    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
37	[BUG]  [BUGGY]  BigInteger  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  denominator  =  gcd.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  gcd.negate();	      BigInteger    denominator    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
38	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  denominator  =  numerator.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  numerator.negate();	      BigInteger    denominator    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(num.compareTo(BigInteger.ZERO)  <  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	6	11	replace
40	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ZERO)  <  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	6	11	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(BigInteger.ZERO)  ==  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	6	7	replace
42	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)  ==  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	6	7	replace
43	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  =  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)  <  =  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  0)  {  if(den.compareTo(BigInteger.ZERO)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  0)  {  if(den.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    <    0)    {    if(den.compareTo(BigInteger.ZERO)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
45	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  0)  {  If(den.compareTo(BigInteger.ZERO)  <  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  0)  {  If(den.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    <    0)    {    If(den.compareTo(BigInteger.ZERO)  <  0)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
46	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  0)  {  if(DEN.compareTo(BigInteger.ZERO)  <  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  0)  {  if(DEN.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    <    0)    {    if(DEN.compareTo(BigInteger.ZERO)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
47	[BUG]  [BUGGY]  num  =  num.divide(gcd);  denominator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.divide(gcd);  denominator  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  denominator  =  den.divide(gcd);	      num    =    num.divide(gcd);    numerator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
48	[BUG]  [BUGGY]  if  (num.compareTo(den)>  0)  {  if  (num.compareTo(den)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if  (num.compareTo(den)>  0)  {  if  (num.compareTo(den)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if    (num.compareTo(den)>    0)    {    if  (num.compareTo(den)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
49	[BUG]  [BUGGY]  if  (num.compareTo(den)>  0)  {  If  (num.compareTo(den)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if  (num.compareTo(den)>  0)  {  If  (num.compareTo(den)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if    (num.compareTo(den)>    0)    {    If  (num.compareTo(den)>  0)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
50	[BUG]  [BUGGY]  BigInteger  num  =  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  den.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  den.negate();	      BigInteger    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
51	[BUG]  [BUGGY]  BigInteger  num  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  gcd.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  gcd.negate();	      BigInteger    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
52	[BUG]  [BUGGY]  BigInteger  num  =  numerator.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  numerator.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  numerator.negate();	      BigInteger    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
53	[BUG]  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  <  0)  {  if  (BigInteger.ZERO.compareTo(den)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  <  0)  {  if  (BigInteger.ZERO.compareTo(den)  <  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if    (BigInteger.ZERO.compareTo(den)    <    0)    {    if  (BigInteger.ZERO.compareTo(den)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
54	[BUG]  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  <  0)  {  If  (BigInteger.ZERO.compareTo(den)  <  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  <  0)  {  If  (BigInteger.ZERO.compareTo(den)  <  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if    (BigInteger.ZERO.compareTo(den)    <    0)    {    If  (BigInteger.ZERO.compareTo(den)  <  0)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
55	[BUG]  [BUGGY]  num  =  num.gcd(den);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.gcd(den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.gcd(den);	      num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
56	[BUG]  [BUGGY]  num  =  num.hashCode(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.hashCode(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.hashCode(gcd);	      num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
57	[BUG]  [BUGGY]  BigInteger  num  =  gcd.divide(num);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  gcd.divide(num);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  gcd.divide(num);	      BigInteger    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
58	[BUG]  [BUGGY]  BigInteger  num  =  num.divide(gcd,  den);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  num.divide(gcd,  den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.divide(gcd,  den);	      BigInteger    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
59	[BUG]  [BUGGY]  BigInteger  num  =  num.multiply(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  num.multiply(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.multiply(gcd);	      BigInteger    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
60	[BUG]  [BUGGY]  num  =  num.gcd(den);  den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.gcd(den);  den  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.gcd(den);  den  =  den.divide(gcd);	      num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
61	[BUG]  [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate();  den  =  den.divide(gcd);	      num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
62	[BUG]  [BUGGY]  num  =  num.doubleValue();  den  =  den.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.doubleValue();  den  =  den.doubleValue();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.doubleValue();  den  =  den.doubleValue();	      num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	8	12	add
64	[BUG]  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	8	12	add
65	[BUG]  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  Den  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	8	None	add
66	[BUG]  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  der.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	8	None	add
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);	  	compilable	  [FE]  AssertionError  	8	11	add
68	[BUG]  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);	  	compilable	  [FE]  AssertionError  	8	11	add
69	[BUG]  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]            AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  der  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	8	None	add
70	[BUG]  [BUGGY]      num  =  num.divide(gcd);  BigInteger  num  =  num.divide(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  BigInteger  num  =  num.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    BigInteger  num  =  num.divide(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	10	None	add
71	[BUG]  [BUGGY]      num  =  num.divide(gcd);  final  BigInteger  num  =  num.divide(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  final  BigInteger  num  =  num.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    final  BigInteger  num  =  num.divide(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	10	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	        num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);	  	compilable	  [FE]  AssertionError  	10	19	add
73	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);	  	compilable	  [FE]  AssertionError  	10	19	add
74	[BUG]  [BUGGY]  BigInteger  den  =  num.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  den  =  num.negate(den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  num.negate(den);	      BigInteger    den    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
75	[BUG]  [BUGGY]      num  =  num.negate();  BigInteger  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  BigInteger  num  =  num.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    BigInteger  num  =  num.negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	13	None	add
76	[BUG]  [BUGGY]      num  =  num.negate();  final  BigInteger  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  final  BigInteger  num  =  num.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    final  BigInteger  num  =  num.negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	13	None	add
77	[BUG]  [BUGGY]      num  =  num.negate();  (num  =  num.negate();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  (num  =  num.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    (num  =  num.negate();	  	non-compiled	[CE]  ')'  expected	13	None	add
78	[BUG]  [BUGGY]  if  (num.compareTo(den)>  0)  {  (num.compareTo(den)>  0)  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if  (num.compareTo(den)>  0)  {  (num.compareTo(den)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if    (num.compareTo(den)>    0)    {    (num.compareTo(den)>  0)  {	  	non-compiled	[CE]  not  a  statement	3	None	add
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if  (BigInteger.ZERO.compareTo(den)  ==  0)  {	  if    (BigInteger.ZERO.compareTo(den)    <    0)    {    	compilable	  [FE]  AssertionError  	17	7	replace
80	[BUG]  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if  (BigInteger.ZERO.compareTo(den)  ==  0)  {	  if    (BigInteger.ZERO.compareTo(den)    <    0)    {    	compilable	  [FE]  AssertionError  	17	7	replace
81	[BUG]  [BUGGY]  num  =  num.add(den);  den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.add(den);  den  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.add(den);  den  =  den.divide(gcd);	      num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
82	[BUG]  [BUGGY]  BigInteger  num  =  num.add(den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  num.add(den  +  1);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(den  +  1);	      BigInteger    num    =    num.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
83	[BUG]  [BUGGY]  BigInteger  denominator  =  num.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  denominator  =  num.negate(den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  num.negate(den);	      BigInteger    denominator    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
84	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.multiply(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.multiply(gcd);	      num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
85	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  den  =  gcd.negate(den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  gcd.negate(den);	      BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
86	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)>  0)  {  if(DEN.compareTo(BigInteger.ZERO)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)>  0)  {  if(DEN.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)>    0)    {    if(DEN.compareTo(BigInteger.ZERO)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(BigInteger.ZERO)!=  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	6	10	replace
88	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)!=  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	6	10	replace
89	[BUG]  [BUGGY]  num  =  num.add(den);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.add(den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.add(den);	      num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
90	[BUG]  [BUGGY]  BigInteger  numerator  =  num.negate();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  numerator  =  num.negate();  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  numerator  =  num.negate();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
91	[BUG]  [BUGGY]  BigInteger  num  =  num.gcd(den);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  num.gcd(den);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.gcd(den);	      BigInteger    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
92	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.HUNDRED)  <  0)  {  [CE]  cannot  find  symbol  HUNDRED  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  if(den.compareTo(BigInteger.HUNDRED)  <  0)  {  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.HUNDRED)  <  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  HUNDRED	6	None	replace
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	        num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }	  	compilable	  [FE]  AssertionError  	13	15	add
94	[BUG]  [BUGGY]      num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }	  	compilable	  [FE]  AssertionError  	13	15	add
95	[BUG]  [BUGGY]      num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  Den  =  den.negate();  }  [CE]  cannot  find  symbol  Den  [FE]      AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  Den  =  den.negate();  }  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  Den  =  den.negate();  }	  	non-compiled	[CE]  cannot  find  symbol  Den	13	None	add
96	[BUG]  [BUGGY]      num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();DEN  =  den.negate();  }  [CE]  cannot  find  symbol  DEN  [FE]        AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]      num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();DEN  =  den.negate();  }  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	        num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();DEN  =  den.negate();  }	  	non-compiled	[CE]  cannot  find  symbol  DEN	13	None	add
97	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator);  numerator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  num  =  num.divide(gcd,  denominator);  numerator  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd,  denominator);  numerator  =  den.divide(gcd);	      num    =    num.divide(gcd);    numerator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
98	[BUG]  [BUGGY]  BigInteger  denominator  =  des.negate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  denominator  =  des.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  des.negate();	      BigInteger    denominator    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
99	[BUG]  [BUGGY]  BigInteger  denominator  =  num.denominator();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  denominator  =  num.denominator();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  num.denominator();	      BigInteger    denominator    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
100	[BUG]  [BUGGY]  BigInteger  num  =  in.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  num  =  in.negate();  [BUGGY]    if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  in.negate();	      BigInteger    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
101	[BUG]  [BUGGY]  BigInteger  numerator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }      [BUGGY]  BigInteger  numerator  =  gcd.negate();  [BUGGY]    num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  numerator  =  gcd.negate();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
