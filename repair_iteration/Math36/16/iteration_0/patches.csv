bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]  if(den.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(BigInteger.ZERO)>  0)  {	if  (BigInteger.ZERO.compareTo(den)  >  0)  {  	compilable	  [FE]  AssertionError  	31	11	replace
2	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)>  0)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]  if(den.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)>  0)  {	if  (BigInteger.ZERO.compareTo(den)  >  0)  {  	compilable	  [FE]  AssertionError  	31	11	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]  if  (num.compareTo(den)>  0)  {  [BUGGY]  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if  (num.compareTo(den)>  0)  {	if  (BigInteger.ZERO.compareTo(den)  >  0)  {  	compilable	  [FE]  AssertionError  	31	7	replace
4	[BUG]  [BUGGY]  if  (num.compareTo(den)>  0)  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]  if  (num.compareTo(den)>  0)  {  [BUGGY]  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if  (num.compareTo(den)>  0)  {	if  (BigInteger.ZERO.compareTo(den)  >  0)  {  	compilable	  [FE]  AssertionError  	31	7	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(BigInteger.ZERO)  <  0)  {	if  (BigInteger.ZERO.compareTo(den)  >  0)  {  	compilable	  [FE]  AssertionError  	31	2	replace
6	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  0)  {  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]  if(den.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)  <  0)  {	if  (BigInteger.ZERO.compareTo(den)  >  0)  {  	compilable	  [FE]  AssertionError  	31	2	replace
7	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    [BUGGY]  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	  	if  (BigInteger.ZERO.compareTo(den)  >  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	    num  =  num.divide(gcd);  den  =  den.divide(gcd);		compilable	  [FE]  AssertionError  	32	11	add
9	[BUG]  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	    num  =  num.divide(gcd);  den  =  den.divide(gcd);		compilable	  [FE]  AssertionError  	32	11	add
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    num  =  num.divide(gcd);  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	    num  =  num.divide(gcd);		compilable	  [FE]  AssertionError  	32	11	add
11	[BUG]  [BUGGY]    num  =  num.divide(gcd);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    num  =  num.divide(gcd);  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	    num  =  num.divide(gcd);		compilable	  [FE]  AssertionError  	32	11	add
12	[BUG]  [BUGGY]    num  =  num.divide(gcd);  numerator  =  den.divide(gcd);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]        AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    num  =  num.divide(gcd);  numerator  =  den.divide(gcd);  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	    num  =  num.divide(gcd);  numerator  =  den.divide(gcd);		non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	32	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    num  =  num.negate();  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	    num  =  num.negate();		compilable	  [FE]  AssertionError  	32	15	add
14	[BUG]  [BUGGY]    num  =  num.negate();  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    num  =  num.negate();  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	    num  =  num.negate();		compilable	  [FE]  AssertionError  	32	15	add
15	[BUG]  [BUGGY]    BigInteger  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    BigInteger  num  =  num.negate();  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	    BigInteger  num  =  num.negate();		non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	32	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  <  0)  {  [BUGGY]  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if  (BigInteger.ZERO.compareTo(den)  <  0)  {	if  (BigInteger.ZERO.compareTo(den)  >  0)  {  	compilable	  [FE]  AssertionError  	31	11	replace
17	[BUG]  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  <  0)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  <  0)  {  [BUGGY]  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if  (BigInteger.ZERO.compareTo(den)  <  0)  {	if  (BigInteger.ZERO.compareTo(den)  >  0)  {  	compilable	  [FE]  AssertionError  	31	11	replace
18	[BUG]  [BUGGY]    BigInteger  den  =  num.negate();  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    BigInteger  den  =  num.negate();  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	    BigInteger  den  =  num.negate();		non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	32	None	add
19	[BUG]  [BUGGY]    BigInteger  num  =  num.divide(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    BigInteger  num  =  num.divide(gcd);  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	    BigInteger  num  =  num.divide(gcd);		non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	32	None	add
20	[BUG]  [BUGGY]    BigInteger  denominator  =  num.negate();  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    BigInteger  denominator  =  num.negate();  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	    BigInteger  denominator  =  num.negate();		non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	32	None	add
21	[BUG]  [BUGGY]    BigInteger  num  =  num.add(den);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    BigInteger  num  =  num.add(den);  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	    BigInteger  num  =  num.add(den);		non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	32	None	add
22	[BUG]  [BUGGY]    BigInteger  den  =  gcd.negate();  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError  [CONTEXT]  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }    [BUGGY]    BigInteger  den  =  gcd.negate();  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	    BigInteger  den  =  gcd.negate();		non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	32	None	add
