bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  =  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ZERO)  <  =  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
2	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.divide(num);  num  =  num.indexOf(gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
3	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(den);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.divide(num);  num  =  num.indexOf(den);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
4	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(null);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.divide(num);  num  =  num.indexOf(null);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
5	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  gen.indexOf(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gen.divide(gcd);  num  =  gen.indexOf(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gen.divide(gcd);  num  =  gen.indexOf(gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	30	11	add
7	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	30	11	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	30	10	add
9	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	30	10	add
10	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
11	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  num  =  num.multiply(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.Multiply(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
12	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(n);  [CE]  cannot  find  symbol  n  [FE]            AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(n);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(n);	  	non-compiled	[CE]  cannot  find  symbol  n	30	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	63	12	add
14	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	63	12	add
15	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  der  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	63	None	add
16	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  Den  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	63	None	add
17	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  der.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	63	None	add
18	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  des  =  den.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]            AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  des  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  des  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  des	63	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(num.compareTo(BigInteger.ZERO)  >=  0)  {	  if(den.compareTo(BigInteger.ZERO)    >=    0)    {    	compilable	  [FE]  AssertionError  	10	10	replace
20	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)  >=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ZERO)  >=  0)  {	  if(den.compareTo(BigInteger.ZERO)    >=    0)    {    	compilable	  [FE]  AssertionError  	10	10	replace
21	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.doubleValue();  den  =  den.doubleValue();  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  null)  {  num  =  num.doubleValue();  den  =  den.doubleValue();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  null)  {  num  =  num.doubleValue();  den  =  den.doubleValue();  }	  num    =    num.doubleValue();    den    =    den.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
22	[BUG]  [BUGGY]  num  =  num.doubleValue();  den  =  num.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.doubleValue();  den  =  num.doubleValue();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.doubleValue();  den  =  num.doubleValue();	  num    =    num.doubleValue();    den    =    den.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
23	[BUG]  [BUGGY]  num  =  num.negate();  den  =  den.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.negate();  den  =  den.doubleValue();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate();  den  =  den.doubleValue();	  num    =    num.doubleValue();    den    =    den.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(den)  <  0)  {	  if    (BigInteger.ZERO.compareTo(den)    <    0)    {    if    (BigInteger.ZERO.compareTo(den)    <    0)    {    	compilable	  [FE]  AssertionError  	53	7	replace
25	[BUG]  [BUGGY]  if(den.compareTo(den)  <  0)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)  <  0)  {	  if    (BigInteger.ZERO.compareTo(den)    <    0)    {    if    (BigInteger.ZERO.compareTo(den)    <    0)    {    	compilable	  [FE]  AssertionError  	53	7	replace
26	[BUG]  [BUGGY]  num  =  num.negate();  Den  =  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.negate();  Den  =  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate();  Den  =  den.negate();	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    Den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
27	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  Den  =  den.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  Den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  Den  =  den.negate();  }	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    Den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
28	[BUG]  [BUGGY]  num  =  num.negate();  den  =  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.negate();  den  =  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate();  den  =  den.negate();	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    Den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
29	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.negate();  }	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    Den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
30	[BUG]  [BUGGY]  final  BigInteger  num  =  num.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  final  BigInteger  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	final  BigInteger  num  =  num.divide(gcd);	          num    =    num.divide(gcd);    final    BigInteger    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
31	[BUG]  [BUGGY]  final  BigInteger  num  =  num.divide(gcd,  den);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  final  BigInteger  num  =  num.divide(gcd,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	final  BigInteger  num  =  num.divide(gcd,  den);	          num    =    num.divide(gcd);    final    BigInteger    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    num  =  num.divide(gcd);  den  =  den.multiply(gcd);	  	compilable	  [FE]  AssertionError  	67	11	add
33	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    num  =  num.divide(gcd);  den  =  den.multiply(gcd);	  	compilable	  [FE]  AssertionError  	67	11	add
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);	  	compilable	  [FE]  AssertionError  	67	11	add
35	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);	  	compilable	  [FE]  AssertionError  	67	11	add
36	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.divide(gcd);  der  =  den.multiply(gcd);  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.divide(gcd);  der  =  den.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    num  =  num.divide(gcd);  der  =  den.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	67	None	add
37	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.divide(gcd);  Den  =  den.multiply(gcd);  [CE]  cannot  find  symbol  Den  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.divide(gcd);  Den  =  den.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    num  =  num.divide(gcd);  Den  =  den.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	67	None	add
38	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.divide(gcd);  den  =  der.multiply(gcd);  [CE]  cannot  find  symbol  der  [FE]            AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  num  =  num.divide(gcd);  den  =  der.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    num  =  num.divide(gcd);  den  =  der.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	67	None	add
39	[BUG]  [BUGGY]  (num.compareTo(den)>  0)  {  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  (num.compareTo(den)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	(num.compareTo(den)>  0)  {	  if    (num.compareTo(den)>    0)    {    (num.compareTo(den)>    0)    {    	non-compiled	[CE]  not  a  statement	78	None	replace
40	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  (den.compareTo(num)>  0)  {  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)>  0)  {  (den.compareTo(num)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>  0)  {  (den.compareTo(num)>  0)  {	  if    (num.compareTo(den)>    0)    {    (num.compareTo(den)>    0)    {    	non-compiled	[CE]  not  a  statement	78	None	replace
41	[BUG]  [BUGGY]  num  =  num.compareTo(den)>  0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.compareTo(den)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.compareTo(den)>  0)  {	  if    (num.compareTo(den)>    0)    {    (num.compareTo(den)>    0)    {    	non-compiled	[CE]  ';'  expected	78	None	replace
42	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  (num.compareTo(den)>  0)  {  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)>  0)  {  (num.compareTo(den)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>  0)  {  (num.compareTo(den)>  0)  {	  if    (num.compareTo(den)>    0)    {    (num.compareTo(den)>    0)    {    	non-compiled	[CE]  not  a  statement	78	None	replace
43	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.multiply(gcd);  den  =  den.multiply(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
44	[BUG]  [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
45	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
46	[BUG]  [BUGGY]  if(num.compareTo(den)  <  0)  {  if(num.compareTo(den)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(den)  <  0)  {  if(num.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(den)    <    0)    {    if(num.compareTo(den)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
47	[BUG]  [BUGGY]  if(num.compareTo(den)  <  0)  {  If(num.compareTo(den)  <  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(den)  <  0)  {  If(num.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(den)    <    0)    {    If(num.compareTo(den)  <  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
48	[BUG]  [BUGGY]  if(num.compareTo(den)  <  0)  {  if(num.compareTo(den)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(den)  <  0)  {  if(num.compareTo(den)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(den)    <    0)    {    if(num.compareTo(den)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(den)  ==  0)  {	  if(den.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	17	10	replace
50	[BUG]  [BUGGY]  if(den.compareTo(den)  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)  ==  0)  {	  if(den.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	17	10	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)>  0  ||  den.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(den)>  0  ||  den.compareTo(den)  <  0)  {	  if(den.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	17	7	replace
52	[BUG]  [BUGGY]  if(den.compareTo(den)>  0  ||  den.compareTo(den)  <  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)>  0  ||  den.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)>  0  ||  den.compareTo(den)  <  0)  {	  if(den.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	17	7	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if  (num.compareTo(den)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if  (num.compareTo(den)  ==  0)  {	  if    (BigInteger.ZERO.compareTo(den)    ==    0)    {    	compilable	  [FE]  AssertionError  	80	9	replace
54	[BUG]  [BUGGY]  if  (num.compareTo(den)  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if  (num.compareTo(den)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if  (num.compareTo(den)  ==  0)  {	  if    (BigInteger.ZERO.compareTo(den)    ==    0)    {    	compilable	  [FE]  AssertionError  	80	9	replace
55	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.negate();  }	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
56	[BUG]  [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.negate();  }	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.negate();        if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }	  	compilable	  [FE]  AssertionError  	93	2	add
58	[BUG]  [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }	  	compilable	  [FE]  AssertionError  	93	2	add
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.negate();        if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    num  =  num.negate();	  	compilable	  [FE]  AssertionError  	93	2	add
60	[BUG]  [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  num  =  num.negate();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    num  =  num.negate();	  	compilable	  [FE]  AssertionError  	93	2	add
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.negate();        if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }	  	compilable	  [FE]  AssertionError  	93	15	add
62	[BUG]  [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }	  	compilable	  [FE]  AssertionError  	93	15	add
63	[BUG]  [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  Den  =  den.negate();  }  [CE]  cannot  find  symbol  Den  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  Den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  Den  =  den.negate();  }	  	non-compiled	[CE]  cannot  find  symbol  Den	93	None	add
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();	  	compilable	  [FE]  AssertionError  	34	11	add
65	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();	  	compilable	  [FE]  AssertionError  	34	11	add
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.multiply(gcd);  num  =  num.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    num  =  num.multiply(gcd);  num  =  num.divide(gcd).negate();	  	compilable	  [FE]  AssertionError  	34	11	add
67	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.multiply(gcd);  num  =  num.divide(gcd).negate();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.multiply(gcd);  num  =  num.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    num  =  num.multiply(gcd);  num  =  num.divide(gcd).negate();	  	compilable	  [FE]  AssertionError  	34	11	add
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd).negate();  num  =  num.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd).negate();	  	compilable	  [FE]  AssertionError  	34	19	add
69	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd).negate();  num  =  num.divide(gcd).negate();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd).negate();  num  =  num.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd).negate();	  	compilable	  [FE]  AssertionError  	34	19	add
70	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd);  num  =  n.divide(gcd).negate();  [CE]  cannot  find  symbol  n  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd);  num  =  n.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    num  =  num.divide(gcd);  num  =  n.divide(gcd).negate();	  	non-compiled	[CE]  cannot  find  symbol  n	34	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd);  num  =  num.multiply(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    num  =  num.divide(gcd);  num  =  num.multiply(gcd).negate();	  	compilable	  [FE]  AssertionError  	34	11	add
72	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd);  num  =  num.multiply(gcd).negate();  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  num  =  num.divide(gcd);  num  =  num.multiply(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    num  =  num.divide(gcd);  num  =  num.multiply(gcd).negate();	  	compilable	  [FE]  AssertionError  	34	11	add
73	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  0)  {  if(num.compareTo(BigInteger.ZERO)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  0)  {  if(num.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ZERO)    <    0)    {    if(num.compareTo(BigInteger.ZERO)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
74	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  0)  {  If(num.compareTo(BigInteger.ZERO)  <  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  0)  {  If(num.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ZERO)    <    0)    {    If(num.compareTo(BigInteger.ZERO)  <  0)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
75	[BUG]  [BUGGY]  if(DEN.compareTo(BigInteger.ZERO)  <  0)  {  [CE]  cannot  find  symbol  DEN  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(DEN.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(DEN.compareTo(BigInteger.ZERO)  <  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    if(DEN.compareTo(BigInteger.ZERO)    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  DEN	46	None	replace
76	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.MIN_VALUE)  <  0)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.MIN_VALUE)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.MIN_VALUE)  <  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    if(DEN.compareTo(BigInteger.ZERO)    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	46	None	replace
77	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    ==    0)    {    if(den.compareTo(BigInteger.ZERO)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
78	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  if(den.compareTo(BigInteger.ZERO)!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  if(den.compareTo(BigInteger.ZERO)!=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    ==    0)    {    if(den.compareTo(BigInteger.ZERO)!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
79	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  If(den.compareTo(BigInteger.ZERO)  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  If(den.compareTo(BigInteger.ZERO)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    ==    0)    {    If(den.compareTo(BigInteger.ZERO)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
80	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    ==    0)    {    if(den.compareTo(BigInteger.ZERO)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
81	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  den);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.multiply(gcd,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.multiply(gcd,  den);	          num    =    num.divide(gcd);    num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
82	[BUG]  [BUGGY]  n  =  num.multiply(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  n  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	n  =  num.multiply(gcd);	          num    =    num.divide(gcd);    num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
83	[BUG]  [BUGGY]  num  =  num.negate(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.negate(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate(gcd);	  num    =    num.negate(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
84	[BUG]  [BUGGY]  num  =  num.negate(den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.negate(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate(den  +  1);	  num    =    num.negate(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
85	[BUG]  [BUGGY]  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  Den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
86	[BUG]  [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.divide(num);  den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
87	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  numerator;  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  numerator;	  BigInteger    denominator    =    num.denominator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
88	[BUG]  [BUGGY]  BigInteger  denominator  =  gcd.denominator();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  gcd.denominator();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  gcd.denominator();	  BigInteger    denominator    =    num.denominator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
89	[BUG]  [BUGGY]  gcd  =  gcd.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  gcd  =  gcd.negate(den);  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  gcd.negate(den);	  gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
90	[BUG]  [BUGGY]  gcd  =  BigInteger.valueOf(den);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  gcd  =  BigInteger.valueOf(den);  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  BigInteger.valueOf(den);	  gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
91	[BUG]  [BUGGY]  BigInteger  num  =  numerator.add(num);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  numerator.add(num);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  numerator.add(num);	  BigInteger    num    =    den.add(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
92	[BUG]  [BUGGY]  BigInteger  num  =  denominator.add(num);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  denominator.add(num);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  denominator.add(num);	  BigInteger    num    =    den.add(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
93	[BUG]  [BUGGY]  BigInteger  num  =  num.add(gcd,  den);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.add(gcd,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(gcd,  den);	  BigInteger    num    =    num.add(den,    den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
94	[BUG]  [BUGGY]  BigInteger  num  =  num.add(den,  gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.add(den,  gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(den,  gcd);	  BigInteger    num    =    num.add(den,    den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
95	[BUG]  [BUGGY]  BigInteger  num  =  num.add(den,  den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.add(den,  den  +  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(den,  den  +  1);	  BigInteger    num    =    num.add(den,    den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
96	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  den  =  den.divide(gcd);  }	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
97	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
98	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
99	[BUG]  [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(gcd)>  0)  {  num  =  num.negate();  den  =  den.divide(gcd);  }	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	28	11	add
101	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	28	11	add
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	28	11	add
103	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	28	11	add
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	28	11	add
105	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	28	11	add
106	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.parse(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.parse(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.parse(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	28	11	add
108	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	28	11	add
109	[BUG]  [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.negate();  num  =  num.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.negate();  num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)>  0)  {  num  =  num.negate();  num  =  num.negate();  }	          num    =    num.negate();    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
110	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  num  =  num.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  null)  {  num  =  num.negate();  num  =  num.negate();  }	          num    =    num.negate();    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
111	[BUG]  [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)>  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          num    =    num.negate();    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
112	[BUG]  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if    (BigInteger.ZERO.compareTo(den)    ==    0)    {    if  (BigInteger.ZERO.compareTo(den)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
113	[BUG]  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  if  (BigInteger.ZERO.compareTo(den)!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  if  (BigInteger.ZERO.compareTo(den)!=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if    (BigInteger.ZERO.compareTo(den)    ==    0)    {    if  (BigInteger.ZERO.compareTo(den)!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
114	[BUG]  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  If  (BigInteger.ZERO.compareTo(den)  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  If  (BigInteger.ZERO.compareTo(den)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if    (BigInteger.ZERO.compareTo(den)    ==    0)    {    If  (BigInteger.ZERO.compareTo(den)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	79	None	add
115	[BUG]  [BUGGY]  num  =  num.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.doubleValue();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.doubleValue();	  num    =    num.gcd(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
116	[BUG]  [BUGGY]  BigInteger  numerator  =  num.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  numerator  =  num.negate(den);  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  numerator  =  num.negate(den);	  BigInteger    numerator    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(num)  <  0)  {	  if(den.compareTo(num)>    0)    {    	compilable	  [FE]  AssertionError  	15	7	replace
118	[BUG]  [BUGGY]  if(den.compareTo(num)  <  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)  <  0)  {	  if(den.compareTo(num)>    0)    {    	compilable	  [FE]  AssertionError  	15	7	replace
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(num)  ==  0)  {	  if(den.compareTo(num)>    0)    {    	compilable	  [FE]  AssertionError  	15	9	replace
120	[BUG]  [BUGGY]  if(den.compareTo(num)  ==  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)  ==  0)  {	  if(den.compareTo(num)>    0)    {    	compilable	  [FE]  AssertionError  	15	9	replace
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(num)  >=  0)  {	  if(den.compareTo(num)>    0)    {    	compilable	  [FE]  AssertionError  	15	11	replace
122	[BUG]  [BUGGY]  if(den.compareTo(num)  >=  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)  >=  0)  {	  if(den.compareTo(num)>    0)    {    	compilable	  [FE]  AssertionError  	15	11	replace
123	[BUG]  [BUGGY]  num  =  num.negate();  denominator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.negate();  denominator  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate();  denominator  =  den.divide(gcd);	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
124	[BUG]  [BUGGY]  num  =  num.hashCode();  denominator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.hashCode();  denominator  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.hashCode();  denominator  =  den.divide(gcd);	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
125	[BUG]  [BUGGY]  num  =  num.doubleValue();  denominator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.doubleValue();  denominator  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.doubleValue();  denominator  =  den.divide(gcd);	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
126	[BUG]  [BUGGY]  final  BigInteger  num  =  num.negate();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  final  BigInteger  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	final  BigInteger  num  =  num.negate();	          num    =    num.negate();    final    BigInteger    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
127	[BUG]  [BUGGY]  numerator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  numerator  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	numerator  =  den.divide(gcd);	  num    =    num.divide(gcd,    denominator);    numerator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
128	[BUG]  [BUGGY]  num  =  num.divide(gcd,  den);  numerator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd,  den);  numerator  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd,  den);  numerator  =  den.divide(gcd);	  num    =    num.divide(gcd,    denominator);    numerator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
129	[BUG]  [BUGGY]  If  (num.compareTo(den)>  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  If  (num.compareTo(den)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	If  (num.compareTo(den)>  0)  {	  if    (num.compareTo(den)>    0)    {    If    (num.compareTo(den)>    0)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
130	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(num,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  den  =  gcd.negate(num,  denominator);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  gcd.negate(num,  denominator);	  BigInteger    den    =    gcd.negate(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
131	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.multiply(gcd,  denominator);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.multiply(gcd,  denominator);	  num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
132	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  numerator);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.multiply(gcd,  numerator);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.multiply(gcd,  numerator);	  num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
133	[BUG]  [BUGGY]  If(den.compareTo(BigInteger.ZERO)  <  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  If(den.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	If(den.compareTo(BigInteger.ZERO)  <  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    If(den.compareTo(BigInteger.ZERO)    <    0)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
134	[BUG]  [BUGGY]  If(num.compareTo(BigInteger.ZERO)  <  0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  If(num.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	If(num.compareTo(BigInteger.ZERO)  <  0)  {	  if(den.compareTo(BigInteger.ZERO)    <    0)    {    If(den.compareTo(BigInteger.ZERO)    <    0)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
135	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  if(den.compareTo(num)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)>  0)  {  if(den.compareTo(num)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>    0)    {    if(den.compareTo(num)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
136	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  If(den.compareTo(num)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)>  0)  {  If(den.compareTo(num)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>    0)    {    If(den.compareTo(num)>  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
137	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  if(DEN.compareTo(num)>  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)>  0)  {  if(DEN.compareTo(num)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>    0)    {    if(DEN.compareTo(num)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
138	[BUG]  [BUGGY]  int  num  =  num.negate();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  int  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	int  num  =  num.negate();	          num    =    num.negate();    int    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
139	[BUG]  [BUGGY]  num  =  gcd.negate();  int  num  =  num.negate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.negate();  int  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.negate();  int  num  =  num.negate();	          num    =    num.negate();    int    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
140	[BUG]  [BUGGY]  num  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.negate();	          num    =    num.negate();    int    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  num  =  num.negate();  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.negate();        num    =    num.negate();    num  =  num.negate();  num  =  num.negate();	  	compilable	  [FE]  AssertionError  	1	2	add
142	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  num  =  num.negate();  num  =  num.negate();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  num  =  num.negate();  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    num  =  num.negate();  num  =  num.negate();	  	compilable	  [FE]  AssertionError  	1	2	add
143	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  int  num  =  num.negate();  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  int  num  =  num.negate();  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    int  num  =  num.negate();  num  =  num.negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	1	None	add
144	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  num  =  num.egate();  num  =  num.negate();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  num  =  num.egate();  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    num  =  num.egate();  num  =  num.negate();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
145	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  num  =  num.megate();  num  =  num.negate();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  num  =  num.megate();  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    num  =  num.megate();  num  =  num.negate();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
146	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  =  num.negate();  num  =  num.negate();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  =  num.negate();  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    =  num.negate();  num  =  num.negate();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)!=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(num.compareTo(BigInteger.ZERO)!=  0)  {	  if(den.compareTo(BigInteger.ZERO)!=    0)    {    	compilable	  [FE]  AssertionError  	88	10	replace
148	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)!=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)!=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ZERO)!=  0)  {	  if(den.compareTo(BigInteger.ZERO)!=    0)    {    	compilable	  [FE]  AssertionError  	88	10	replace
149	[BUG]  [BUGGY]  BigInteger  num  =  denominator.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  denominator.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  denominator.negate();	  BigInteger    num    =    numerator.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
150	[BUG]  [BUGGY]  BigInteger  num  =  numerator.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  numerator.negate(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  numerator.negate(den);	  BigInteger    num    =    numerator.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
151	[BUG]  [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }	          num    =    num.divide(gcd);    num    =    num.divide(gcd).negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
152	[BUG]  [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          num    =    num.divide(gcd);    num    =    num.divide(gcd).negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
153	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.negate();  num  =  num.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  null)  {  num  =  num.negate();  num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  null)  {  num  =  num.negate();  num  =  num.negate();  }	          num    =    num.negate();    num    =    num.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
154	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  null)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          num    =    num.negate();    num    =    num.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
155	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.divide(num);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
156	[BUG]  [BUGGY]  num  =  gcd.divide(num);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.divide(num);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.divide(num);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
157	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(den);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.divide(num);  num  =  num.parse(den);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
158	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(null);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.divide(num);  num  =  num.parse(null);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
159	[BUG]  [BUGGY]  BigInteger  numerator  =  gcd.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  numerator  =  gcd.negate(den);  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  numerator  =  gcd.negate(den);	  BigInteger    numerator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
160	[BUG]  [BUGGY]  BigInteger  numerator  =  gcd.negate(),  denominator;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  numerator  =  gcd.negate(),  denominator;  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  numerator  =  gcd.negate(),  denominator;	  BigInteger    numerator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
161	[BUG]  [BUGGY]  if(den.compareTo(den)>  0)  {  if(den.compareTo(den)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)>  0)  {  if(den.compareTo(den)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)>    0)    {    if(den.compareTo(den)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
162	[BUG]  [BUGGY]  if(den.compareTo(den)>  0)  {  If(den.compareTo(den)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)>  0)  {  If(den.compareTo(den)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)>    0)    {    If(den.compareTo(den)>  0)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
163	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.egate();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.negate();  num  =  num.egate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.negate();  num  =  num.egate();	          num    =    num.negate();    num    =    num.egate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
164	[BUG]  [BUGGY]  num  =  num.negate();  num  =  den.egate();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.negate();  num  =  den.egate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate();  num  =  den.egate();	          num    =    num.negate();    num    =    num.egate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
165	[BUG]  [BUGGY]  num  =  n.negate();  num  =  num.egate();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  n.negate();  num  =  num.egate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  n.negate();  num  =  num.egate();	          num    =    num.negate();    num    =    num.egate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
166	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  if(den.compareTo(BigInteger.ZERO)!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  if(den.compareTo(BigInteger.ZERO)!=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)!=    0)    {    if(den.compareTo(BigInteger.ZERO)!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
167	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)!=    0)    {    if(den.compareTo(BigInteger.ZERO)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
168	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)!=    0)    {    if(den.compareTo(BigInteger.ZERO)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
169	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  if(den.compareTo(BigInteger.ZERO)  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  if(den.compareTo(BigInteger.ZERO)  >>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)!=    0)    {    if(den.compareTo(BigInteger.ZERO)  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
170	[BUG]  [BUGGY]  gcd  =  gcd.getBigInteger(0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  gcd  =  gcd.getBigInteger(0);  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  gcd.getBigInteger(0);	  gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
171	[BUG]  [BUGGY]  gcd  =  num.getBigInteger();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  gcd  =  num.getBigInteger();  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  num.getBigInteger();	  gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
172	[BUG]  [BUGGY]  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  den  =  der.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
173	[BUG]  [BUGGY]  num  =  gcd.divide(num);  den  =  der.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.divide(num);  den  =  der.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.divide(num);  den  =  der.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
174	[BUG]  [BUGGY]  num  =  num.divide(gcd);  der  =  der.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  der  =  der.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  der  =  der.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
175	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator.negate(),  den;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  numerator.negate(),  den;  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  numerator.negate(),  den;	  BigInteger    denominator    =    numerator.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
176	[BUG]  [BUGGY]  BigInteger  num  =  numerator.add(den,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  numerator.add(den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  numerator.add(den,  denominator);	  BigInteger    num    =    numerator.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
177	[BUG]  [BUGGY]  BigInteger  num  =  denominator.add(den);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  denominator.add(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  denominator.add(den);	  BigInteger    num    =    numerator.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
178	[BUG]  [BUGGY]  BigInteger  num  =  numerator.add(numerator);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  numerator.add(numerator);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  numerator.add(numerator);	  BigInteger    num    =    numerator.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
179	[BUG]  [BUGGY]  BigInteger  num  =  numerator.add(den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  numerator.add(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  numerator.add(den  +  1);	  BigInteger    num    =    numerator.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
180	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.HUNDRED)  <  0)  {  [CE]  cannot  find  symbol  HUNDRED  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.HUNDRED)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.HUNDRED)  <  0)  {	  if(den.compareTo(BigInteger.HUNDRED)    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  HUNDRED	92	None	replace
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ONE)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(BigInteger.ONE)  <  0)  {	  if(den.compareTo(BigInteger.HUNDRED)    <    0)    {    	compilable	  [FE]  AssertionError  	92	2	replace
182	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ONE)  <  0)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ONE)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ONE)  <  0)  {	  if(den.compareTo(BigInteger.HUNDRED)    <    0)    {    	compilable	  [FE]  AssertionError  	92	2	replace
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ONE)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(num.compareTo(BigInteger.ONE)  <  0)  {	  if(den.compareTo(BigInteger.HUNDRED)    <    0)    {    	compilable	  [FE]  AssertionError  	92	11	replace
184	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ONE)  <  0)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ONE)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ONE)  <  0)  {	  if(den.compareTo(BigInteger.HUNDRED)    <    0)    {    	compilable	  [FE]  AssertionError  	92	11	replace
185	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);	  	compilable	  [FE]  AssertionError  	72	19	add
186	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);	  	compilable	  [FE]  AssertionError  	72	19	add
187	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den;  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den;	  	non-compiled	[CE]  ')'  expected	72	None	add
188	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.multiply(gcd);  num  =  num.divide(gcd).divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    num  =  num.multiply(gcd);  num  =  num.divide(gcd).divide(den);	  	compilable	  [FE]  AssertionError  	72	19	add
189	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.multiply(gcd);  num  =  num.divide(gcd).divide(den);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.multiply(gcd);  num  =  num.divide(gcd).divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    num  =  num.multiply(gcd);  num  =  num.divide(gcd).divide(den);	  	compilable	  [FE]  AssertionError  	72	19	add
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.divide(gcd);  num  =  num.multiply(gcd).divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    num  =  num.divide(gcd);  num  =  num.multiply(gcd).divide(den);	  	compilable	  [FE]  AssertionError  	72	19	add
191	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.divide(gcd);  num  =  num.multiply(gcd).divide(den);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  num.divide(gcd);  num  =  num.multiply(gcd).divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    num  =  num.divide(gcd);  num  =  num.multiply(gcd).divide(den);	  	compilable	  [FE]  AssertionError  	72	19	add
192	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  n.divide(gcd);  num  =  num.divide(gcd).divide(den);  [CE]  cannot  find  symbol  n  [FE]            AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  num  =  n.divide(gcd);  num  =  num.divide(gcd).divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    num  =  n.divide(gcd);  num  =  num.divide(gcd).divide(den);	  	non-compiled	[CE]  cannot  find  symbol  n	72	None	add
193	[BUG]  [BUGGY]  BigInteger  num  =  num.add(den  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.add(den  +  2);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(den  +  2);	  BigInteger    num    =    num.add(den    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
194	[BUG]  [BUGGY]  BigInteger  num  =  num.add(den  *  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.add(den  *  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(den  *  1);	  BigInteger    num    =    num.add(den    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
195	[BUG]  [BUGGY]  BigInteger  num  =  num.add(den  +  3);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.add(den  +  3);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(den  +  3);	  BigInteger    num    =    num.add(den    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
196	[BUG]  [BUGGY]  num  =  num.add(den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.add(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.add(den  +  1);	  num    =    num.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
197	[BUG]  [BUGGY]  num  =  num.add(den,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.add(den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.add(den,  denominator);	  num    =    num.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
198	[BUG]  [BUGGY]  num  =  num.add(den,  den);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.add(den,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.add(den,  den);	  num    =    num.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
199	[BUG]  [BUGGY]  num  =  num.divide(gcd).divide(den);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd).divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd).divide(den);	          num    =    num.divide(gcd);    num    =    num.divide(gcd).divide(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
200	[BUG]  [BUGGY]  num  =  num.divide(gcd);  des  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  des  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  des  =  den.divide(gcd);	          num    =    num.divide(gcd);    num    =    num.divide(gcd).divide(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
201	[BUG]  [BUGGY]  BigInteger  den  =  num.negate(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  den  =  num.negate(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  num.negate(gcd);	  BigInteger    den    =    num.negate(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
202	[BUG]  [BUGGY]  BigInteger  den  =  num.negate(0);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  den  =  num.negate(0);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  num.negate(0);	  BigInteger    den    =    num.negate(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
203	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)>  0)  {  if(num.compareTo(BigInteger.ZERO)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)>  0)  {  if(num.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ZERO)>    0)    {    if(num.compareTo(BigInteger.ZERO)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
204	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)>  0)  {  If(num.compareTo(BigInteger.ZERO)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)>  0)  {  If(num.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ZERO)>    0)    {    If(num.compareTo(BigInteger.ZERO)>  0)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
205	[BUG]  [BUGGY]  if(DEN.compareTo(BigInteger.ZERO)>  0)  {  [CE]  cannot  find  symbol  DEN  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(DEN.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(DEN.compareTo(BigInteger.ZERO)>  0)  {	  if(den.compareTo(BigInteger.ZERO)>    0)    {    if(DEN.compareTo(BigInteger.ZERO)>    0)    {    	non-compiled	[CE]  cannot  find  symbol  DEN	86	None	replace
206	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(den)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(num.compareTo(den)  >=  0)  {	  if(num.compareTo(den)    <    0)    {    	compilable	  [FE]  AssertionError  	19	7	replace
207	[BUG]  [BUGGY]  if(num.compareTo(den)  >=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(den)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(den)  >=  0)  {	  if(num.compareTo(den)    <    0)    {    	compilable	  [FE]  AssertionError  	19	7	replace
208	[BUG]  [BUGGY]  BigInteger  denominator  =  num.negate(den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  num.negate(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  num.negate(den  +  1);	  BigInteger    denominator    =    num.negate(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
209	[BUG]  [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.negate();  (num  =  num.negate();  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)>  0)  {  num  =  num.negate();  (num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)>  0)  {  num  =  num.negate();  (num  =  num.negate();  }	          num    =    num.negate();    (num    =    num.negate();    	non-compiled	[CE]  ')'  expected	77	None	replace
210	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(num.compareTo(BigInteger.ZERO)  ==  0)  {	  if(num.compareTo(BigInteger.ZERO)>    0)    {    	compilable	  [FE]  AssertionError  	8	7	replace
211	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(num.compareTo(BigInteger.ZERO)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(num.compareTo(BigInteger.ZERO)  ==  0)  {	  if(num.compareTo(BigInteger.ZERO)>    0)    {    	compilable	  [FE]  AssertionError  	8	7	replace
212	[BUG]  [BUGGY]  BigInteger  num  =  num.multiply(gcd,  den);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.multiply(gcd,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.multiply(gcd,  den);	  BigInteger    num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
213	[BUG]  [BUGGY]  BigInteger  num  =  numerator.multiply(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  numerator.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  numerator.multiply(gcd);	  BigInteger    num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
214	[BUG]  [BUGGY]  BigInteger  num  =  num.multiply(gcd,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.multiply(gcd,  denominator);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.multiply(gcd,  denominator);	  BigInteger    num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
215	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  null)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  null)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }	  num    =    num.gcd(den);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
216	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  null)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  null)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  num    =    num.gcd(den);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
217	[BUG]  [BUGGY]  BigInteger  num  =  gcd.divide(den);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  gcd.divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  gcd.divide(den);	  BigInteger    num    =    gcd.divide(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
218	[BUG]  [BUGGY]  BigInteger  num  =  gcd.hashCode();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  gcd.hashCode();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  gcd.hashCode();	  BigInteger    num    =    gcd.divide(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
219	[BUG]  [BUGGY]  BigInteger  num  =  gcd.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  gcd.doubleValue();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  gcd.doubleValue();	  BigInteger    num    =    gcd.divide(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
220	[BUG]  [BUGGY]  num  =  num.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.intValue();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.intValue();	  num    =    num.hashCode(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
221	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.MIN_VALUE)>  0)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.MIN_VALUE)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.MIN_VALUE)>  0)  {	  if(den.compareTo(BigInteger.ZERO)>    0)    {    if(den.compareTo(BigInteger.ZERO)>    0)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	23	None	replace
222	[BUG]  [BUGGY]  num  =  num.getValue();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.getValue();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.getValue();	  num    =    num.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
223	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.megate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.negate();  num  =  num.megate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.negate();  num  =  num.megate();	          num    =    num.negate();    num    =    num.megate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
224	[BUG]  [BUGGY]  num  =  num.negate();  num  =  den.megate();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.negate();  num  =  den.megate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate();  num  =  den.megate();	          num    =    num.negate();    num    =    num.megate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
225	[BUG]  [BUGGY]  num  =  n.negate();  num  =  num.megate();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  n.negate();  num  =  num.megate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  n.negate();  num  =  num.megate();	          num    =    num.negate();    num    =    num.megate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
226	[BUG]  [BUGGY]  If(den.compareTo(BigInteger.ZERO)>  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  If(den.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	If(den.compareTo(BigInteger.ZERO)>  0)  {	  if(den.compareTo(BigInteger.ZERO)>    0)    {    If(den.compareTo(BigInteger.ZERO)>    0)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
227	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(numerator);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  den  =  gcd.negate(numerator);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  gcd.negate(numerator);	  BigInteger    den    =    gcd.negate(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
228	[BUG]  [BUGGY]  If  (BigInteger.ZERO.compareTo(den)  <  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  If  (BigInteger.ZERO.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	If  (BigInteger.ZERO.compareTo(den)  <  0)  {	  if    (BigInteger.ZERO.compareTo(den)    <    0)    {    If    (BigInteger.ZERO.compareTo(den)    <    0)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
229	[BUG]  [BUGGY]  If  (BigInteger.ZERO.compareTo(den)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  If  (BigInteger.ZERO.compareTo(den)  <  =  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	If  (BigInteger.ZERO.compareTo(den)  <  =  0)  {	  if    (BigInteger.ZERO.compareTo(den)    <    0)    {    If    (BigInteger.ZERO.compareTo(den)    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
230	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    >=    0)    {    if(den.compareTo(BigInteger.ZERO)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
231	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  if(den.compareTo(BigInteger.ZERO)!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  if(den.compareTo(BigInteger.ZERO)!=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    >=    0)    {    if(den.compareTo(BigInteger.ZERO)!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
232	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  if(den.compareTo(BigInteger.ZERO)  >>  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  if(den.compareTo(BigInteger.ZERO)  >>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    >=    0)    {    if(den.compareTo(BigInteger.ZERO)  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
233	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    >=    0)    {    if(den.compareTo(BigInteger.ZERO)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
234	[BUG]  [BUGGY]  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  der  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
235	[BUG]  [BUGGY]  num  =  gcd.divide(num);  der  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gcd.divide(num);  der  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gcd.divide(num);  der  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
236	[BUG]  [BUGGY]  BigInteger  denominator  =  gcd.getDenominator();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  gcd.getDenominator();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  gcd.getDenominator();	  BigInteger    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
237	[BUG]  [BUGGY]  BigInteger  denominator  =  gcd.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  gcd.negate(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  gcd.negate(den);	  BigInteger    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
238	[BUG]  [BUGGY]  BigInteger  num  =  num.divide(gcd,  den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.divide(gcd,  den  +  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.divide(gcd,  den  +  1);	  BigInteger    num    =    num.divide(gcd,    den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
239	[BUG]  [BUGGY]  BigInteger  num  =  numerator.divide(gcd,  den);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  numerator.divide(gcd,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  numerator.divide(gcd,  den);	  BigInteger    num    =    num.divide(gcd,    den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
240	[BUG]  [BUGGY]  gcd  =  gcd.getBigIntegerValue();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  gcd  =  gcd.getBigIntegerValue();  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  gcd.getBigIntegerValue();	  gcd    =    gcd.getIntValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
241	[BUG]  [BUGGY]  BigInteger  num  =  n.negate();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  n.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  n.negate();	          num    =    num.negate();    BigInteger    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
242	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ONE)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(BigInteger.ONE)  ==  0)  {	  if(den.compareTo(BigInteger.ZERO)    ==    0)    {    	compilable	  [FE]  AssertionError  	42	10	replace
243	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ONE)  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ONE)  ==  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ONE)  ==  0)  {	  if(den.compareTo(BigInteger.ZERO)    ==    0)    {    	compilable	  [FE]  AssertionError  	42	10	replace
244	[BUG]  [BUGGY]  num  =  num.add(gcd);  den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.add(gcd);  den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.add(gcd);  den  =  den.divide(gcd);	  num    =    num.add(den);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
245	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  null)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  null)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }	  num    =    num.add(den);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
246	[BUG]  [BUGGY]  BigInteger  num  =  numerator.gcd(den);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  numerator.gcd(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  numerator.gcd(den);	  BigInteger    num    =    num.gcd(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
247	[BUG]  [BUGGY]  BigInteger  num  =  num.gcd(den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.gcd(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.gcd(den  +  1);	  BigInteger    num    =    num.gcd(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
248	[BUG]  [BUGGY]  BigInteger  num  =  num.get(den);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.get(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.get(den);	  BigInteger    num    =    num.gcd(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
249	[BUG]  [BUGGY]  DEN  =  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  DEN  =  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	DEN  =  den.negate();	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();DEN    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
250	[BUG]  [BUGGY]  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	den.negate();	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();DEN    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
251	[BUG]  [BUGGY]  den  =  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  den  =  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	den  =  den.negate();	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();DEN    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ONE)!=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(BigInteger.ONE)!=  0)  {	  if(den.compareTo(BigInteger.ZERO)!=    0)    {    	compilable	  [FE]  AssertionError  	88	10	replace
253	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ONE)!=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ONE)!=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ONE)!=  0)  {	  if(den.compareTo(BigInteger.ZERO)!=    0)    {    	compilable	  [FE]  AssertionError  	88	10	replace
254	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  numerator.negate(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  numerator.negate(den);	  BigInteger    denominator    =    numerator.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
255	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  Den  =  den.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  Den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  Den  =  den.negate();  }	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    Den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
256	[BUG]  [BUGGY]  gcd  =  gcd.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  gcd  =  gcd.doubleValue();  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  gcd.doubleValue();	  gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
257	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.indexOf(Gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  num  =  num.indexOf(Gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  num  =  num.indexOf(Gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
258	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.multiply(gcd);  num  =  num.divide(gcd);	          num    =    num.divide(gcd);    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
259	[BUG]  [BUGGY]  num  =  num.gcd(den);  num  =  num.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.gcd(den);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.gcd(den);  num  =  num.divide(gcd);	          num    =    num.divide(gcd);    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
260	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  If(den.compareTo(BigInteger.ZERO)!=  0)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)!=  0)  {  If(den.compareTo(BigInteger.ZERO)!=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)!=    0)    {    If(den.compareTo(BigInteger.ZERO)!=  0)  {	  	non-compiled	[CE]  ';'  expected	87	None	add
261	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
262	[BUG]  [BUGGY]  num  =  num.divide(gcd,  den);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd,  den);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd,  den);  num  =  num.divide(gcd);  den  =  der.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
263	[BUG]  [BUGGY]  BigInteger  denominator  =  gcd.negate()  +  den;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  gcd.negate()  +  den;  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  gcd.negate()  +  den;	  BigInteger    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ONE.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(BigInteger.ONE.compareTo(den)  <  0)  {	  if(num.compareTo(den)    <    0)    {    	compilable	  [FE]  AssertionError  	19	11	replace
265	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(den)  <  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ONE.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ONE.compareTo(den)  <  0)  {	  if(num.compareTo(den)    <    0)    {    	compilable	  [FE]  AssertionError  	19	11	replace
266	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }	  num    =    num.gcd(den);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
267	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  null)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  null)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }	  num    =    num.gcd(den);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
268	[BUG]  [BUGGY]  bigInteger  num  =  num.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  bigInteger  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	bigInteger  num  =  num.divide(gcd);	          num    =    num.divide(gcd);    BigInteger    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
269	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  null)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  null)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }	  num    =    num.add(den);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
270	[BUG]  [BUGGY]  BigInteger  num  =  den.negate(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  den.negate(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  den.negate(gcd);	  BigInteger    num    =    den.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
271	[BUG]  [BUGGY]  num  =  num.gcd(den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.gcd(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.gcd(den  +  1);	  num    =    num.gcd(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
272	[BUG]  [BUGGY]  BigInteger  num  =  num.gcd(den,  den);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.gcd(den,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.gcd(den,  den);	  BigInteger    num    =    num.gcd(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
273	[BUG]  [BUGGY]  BigInteger  num  =  num.gcd(den  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.gcd(den  +  2);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.gcd(den  +  2);	  BigInteger    num    =    num.gcd(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
274	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
275	[BUG]  [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  if  (BigInteger.ZERO.compareTo(den)  {  0)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if  (BigInteger.ZERO.compareTo(den)  ==  0)  {  if  (BigInteger.ZERO.compareTo(den)  {  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if    (BigInteger.ZERO.compareTo(den)    ==    0)    {    if  (BigInteger.ZERO.compareTo(den)  {  0)  {	  	non-compiled	[CE]  ')'  expected	79	None	add
276	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  BigInteger  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  BigInteger  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    BigInteger  num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	28	None	add
277	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  =  num.divide(gcd);  num  =  num.divide(gcd);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    =  num.divide(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
278	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  num.parse(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  gen.divide(gcd);  num  =  num.parse(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  gen.divide(gcd);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
279	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.parse(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.multiply(gcd);  num  =  num.parse(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.multiply(gcd);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
280	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  num  =  num.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.negate();  num  =  num.negate();  }	          num    =    num.negate();    num    =    num.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
281	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  If(den.compareTo(BigInteger.ZERO)  >=  0)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)  >=  0)  {  If(den.compareTo(BigInteger.ZERO)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    >=    0)    {    If(den.compareTo(BigInteger.ZERO)  >=  0)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
282	[BUG]  [BUGGY]  bigInteger  num  =  num.negate();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  bigInteger  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	bigInteger  num  =  num.negate();	          num    =    num.negate();    BigInteger    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
283	[BUG]  [BUGGY]  if(den!=  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }	          num    =    num.divide(gcd);    num    =    num.divide(gcd).divide(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
284	[BUG]  [BUGGY]  if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }	          num    =    num.divide(gcd);    num    =    num.divide(gcd).divide(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
285	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  BigInteger  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  BigInteger  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    BigInteger  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	34	None	add
286	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  int  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  int  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    int  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	34	None	add
287	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    =  num.divide(gcd);  num  =  num.divide(gcd).negate();	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
288	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
289	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
290	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
291	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
292	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
293	[BUG]  [BUGGY]  num  =  num.negate();DEN  =  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.negate();DEN  =  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate();DEN  =  den.negate();	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();DEN    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
294	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  (den.compareTo(den)>  0)  {  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)>  0)  {  (den.compareTo(den)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>  0)  {  (den.compareTo(den)>  0)  {	  if    (num.compareTo(den)>    0)    {    (num.compareTo(den)>    0)    {    	non-compiled	[CE]  not  a  statement	78	None	replace
295	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  final  BigInteger  num  =  num.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  final  BigInteger  num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  null)  {  num  =  num.negate();  final  BigInteger  num  =  num.negate();  }	          num    =    num.negate();    final    BigInteger    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
296	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(0);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  den  =  gcd.negate(0);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  gcd.negate(0);	  BigInteger    den    =    gcd.negate(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
297	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  BigInteger  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  BigInteger  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    BigInteger  num  =  num.divide(gcd);  den  =  den.divide(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	63	None	add
298	[BUG]  [BUGGY]  BigInteger  num  =  des.add(num);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  des.add(num);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  des.add(num);	  BigInteger    num    =    den.add(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
299	[BUG]  [BUGGY]  BigInteger  denominator  =  den.negate()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  den.negate()  -  1;  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  den.negate()  -  1;	  BigInteger    denominator    =    den.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
300	[BUG]  [BUGGY]  num  =  num.hashCode(gcd,  den);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.hashCode(gcd,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.hashCode(gcd,  den);	  num    =    num.hashCode(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(den)  >=  0)  {	  if(den.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	17	10	replace
302	[BUG]  [BUGGY]  if(den.compareTo(den)  >=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(den)  >=  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(den)  >=  0)  {	  if(den.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	17	10	replace
303	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  BigInteger  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  BigInteger  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    BigInteger  num  =  num.divide(gcd);  den  =  den.multiply(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	67	None	add
304	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  BigInteger  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  BigInteger  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    BigInteger  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	30	None	add
305	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  BigInteger  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  BigInteger  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    BigInteger  num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	30	None	add
306	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	30	11	add
307	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	30	11	add
308	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  BigInteger  num  =  num.negate();  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  BigInteger  num  =  num.negate();  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    BigInteger  num  =  num.negate();  num  =  num.negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	1	None	add
309	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  final  BigInteger  num  =  num.negate();  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  final  BigInteger  num  =  num.negate();  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    final  BigInteger  num  =  num.negate();  num  =  num.negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	1	None	add
310	[BUG]  [BUGGY]  BigInteger  num  =  num.add(n,  den);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.add(n,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(n,  den);	  BigInteger    num    =    num.add(den,    den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
311	[BUG]  [BUGGY]  BigInteger  den  =  num.negate(den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  den  =  num.negate(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  num.negate(den  +  1);	  BigInteger    den    =    num.negate(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
312	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
313	[BUG]  [BUGGY]  BigInteger  denominator  =  des.negate(num);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  des.negate(num);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  des.negate(num);	  BigInteger    denominator    =    des.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
314	[BUG]  [BUGGY]  BigInteger  denominator  =  des.negate()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  des.negate()  -  1;  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  des.negate()  -  1;	  BigInteger    denominator    =    des.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
315	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.negate();  den  =  den.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  null)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  null)  {  num  =  num.negate();  den  =  den.negate();  }	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
316	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  den  =  den.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  null)  {  num  =  num.negate();  den  =  den.negate();  }	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
317	[BUG]  [BUGGY]  if(den.equals(num))  {  num  =  num.negate();  den  =  den.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.equals(num))  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.equals(num))  {  num  =  num.negate();  den  =  den.negate();  }	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
318	[BUG]  [BUGGY]  num  =  num.add(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.add(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.add(gcd);	  num    =    num.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
319	[BUG]  [BUGGY]  num  =  num.add(n);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.add(n);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.add(n);	  num    =    num.add(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ONE)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(den.compareTo(BigInteger.ONE)>  0)  {	  if(den.compareTo(BigInteger.ZERO)>    0)    {    if(den.compareTo(BigInteger.ZERO)>    0)    {    	compilable	  [FE]  AssertionError  	23	11	replace
321	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ONE)>  0)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ONE)>  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ONE)>  0)  {	  if(den.compareTo(BigInteger.ZERO)>    0)    {    if(den.compareTo(BigInteger.ZERO)>    0)    {    	compilable	  [FE]  AssertionError  	23	11	replace
322	[BUG]  [BUGGY]  num  =  num.gcd(den);  denominator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.gcd(den);  denominator  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.gcd(den);  denominator  =  den.divide(gcd);	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
323	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  }	          num    =    num.divide(gcd);    num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
324	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  }	          num    =    num.divide(gcd);    num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
325	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  }	          num    =    num.divide(gcd);    num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
326	[BUG]  [BUGGY]  BigInteger  numerator  =  gcd.negate()  +  den;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  numerator  =  gcd.negate()  +  den;  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  numerator  =  gcd.negate()  +  den;	  BigInteger    numerator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
327	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }	          num    =    num.divide(gcd);    num    =    num.divide(gcd).negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
328	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.divide(gcd).negate();  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.multiply(gcd);  num  =  num.divide(gcd).negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.multiply(gcd);  num  =  num.divide(gcd).negate();	          num    =    num.divide(gcd);    num    =    num.divide(gcd).negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
329	[BUG]  [BUGGY]  BigInteger  numerator  =  n.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  numerator  =  n.negate();  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  numerator  =  n.negate();	  BigInteger    numerator    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
330	[BUG]  [BUGGY]  num  =  num.negate();  int  num  =  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.negate();  int  num  =  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.negate();  int  num  =  den.negate();	          num    =    num.negate();    int    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
331	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.doubleValue();  den  =  den.doubleValue();  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  null)  {  num  =  num.doubleValue();  den  =  den.doubleValue();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  null)  {  num  =  num.doubleValue();  den  =  den.doubleValue();  }	  num    =    num.doubleValue();    den    =    den.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
332	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.doubleValue();  den  =  den.doubleValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  null)  {  num  =  num.doubleValue();  den  =  den.doubleValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  null)  {  num  =  num.doubleValue();  den  =  den.doubleValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  num    =    num.doubleValue();    den    =    den.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
333	[BUG]  [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  BigInteger  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  BigInteger  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    BigInteger  num  =  num.negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	93	None	add
334	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.negate();        if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.negate();  den  =  den.negate();  }	  	compilable	  [FE]  AssertionError  	93	15	add
335	[BUG]  [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.negate();  den  =  den.negate();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.negate();  den  =  den.negate();  }	  	compilable	  [FE]  AssertionError  	93	15	add
336	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(den  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  den  =  gcd.negate(den  +  1);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  gcd.negate(den  +  1);	  BigInteger    den    =    gcd.negate(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
337	[BUG]  [BUGGY]  BigInteger  num  =  in.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  in.negate(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  in.negate(den);	  BigInteger    num    =    in.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
338	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  BigInteger  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  BigInteger  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    BigInteger  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	72	None	add
339	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
340	[BUG]  [BUGGY]  BigInteger  denominator  =  den.negate(num);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  den.negate(num);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  den.negate(num);	  BigInteger    denominator    =    num.negate(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
341	[BUG]  [BUGGY]  if(BigInteger.HUNDRED.compareTo(den)  <  0)  {  [CE]  cannot  find  symbol  HUNDRED  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.HUNDRED.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.HUNDRED.compareTo(den)  <  0)  {	  if(den.compareTo(BigInteger.HUNDRED)    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  HUNDRED	92	None	replace
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ONE.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	if(BigInteger.ONE.compareTo(gcd)  <  0)  {	  if(den.compareTo(BigInteger.HUNDRED)    <    0)    {    	compilable	  [FE]  AssertionError  	92	11	replace
343	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(gcd)  <  0)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ONE.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ONE.compareTo(gcd)  <  0)  {	  if(den.compareTo(BigInteger.HUNDRED)    <    0)    {    	compilable	  [FE]  AssertionError  	92	11	replace
344	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.negate();  (num  =  num.negate();  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  null)  {  num  =  num.negate();  (num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  null)  {  num  =  num.negate();  (num  =  num.negate();  }	          num    =    num.negate();    (num    =    num.negate();    	non-compiled	[CE]  ')'  expected	77	None	replace
345	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(num)>  0)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(num)>  0)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(num)>  0)  {  num  =  num.negate();  den  =  den.divide(gcd);  }	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
346	[BUG]  [BUGGY]  BigInteger  num  =  gcd.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  gcd.negate(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  gcd.negate(den);	  BigInteger    num    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
347	[BUG]  [BUGGY]  gcd  =  gcd.getInteger();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  gcd  =  gcd.getInteger();  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  gcd.getInteger();	  gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
348	[BUG]  [BUGGY]  if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }	          num    =    num.divide(gcd);    num    =    num.divide(gcd).negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
349	[BUG]  [BUGGY]  if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  else  {  return  BigInteger.ZERO;  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  else  {  return  BigInteger.ZERO;  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  else  {  return  BigInteger.ZERO;  }	          num    =    num.divide(gcd);    num    =    num.divide(gcd).negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
350	[BUG]  [BUGGY]  if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  else  {  BigInteger  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  else  {  BigInteger  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  else  {  BigInteger  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    num    =    num.divide(gcd).negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
351	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.negate();        num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	1	2	add
352	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	1	2	add
353	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  BigInteger  denominator  =  des.negate();  }  [CE]  cannot  find  symbol  des  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  BigInteger  denominator  =  des.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  BigInteger  denominator  =  des.negate();  }	  	non-compiled	[CE]  cannot  find  symbol  des	1	None	add
354	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  BigInteger  den  =  des.negate();  }  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  BigInteger  den  =  des.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  BigInteger  den  =  des.negate();  }	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	1	None	add
355	[BUG]  [BUGGY]          num    =    num.negate();    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  BigInteger  den  =  den.negate();  }  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.negate();    num  =  num.negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  BigInteger  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.negate();        num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.negate();  }  else  {  BigInteger  den  =  den.negate();  }	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	1	None	add
356	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }	  	compilable	  [FE]  AssertionError  	72	19	add
357	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }	  	compilable	  [FE]  AssertionError  	72	19	add
358	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide();  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(den);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide();  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(den);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide();  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }	  	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	72	None	add
359	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
360	[BUG]  [BUGGY]  Deref  =  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  Deref  =  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	Deref  =  den.negate();	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();DEN    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
361	[BUG]  [BUGGY]  BigInteger  numerator  =  num.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  numerator  =  num.intValue();  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  numerator  =  num.intValue();	  BigInteger    numerator    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
362	[BUG]  [BUGGY]  BigInteger  num  =  den.add(numerator);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  den.add(numerator);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  den.add(numerator);	  BigInteger    num    =    den.add(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
363	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.indexOf(den);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  num  =  num.indexOf(den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  num  =  num.indexOf(den);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
364	[BUG]  [BUGGY]  BigInteger  num  =  num.add(numerator,  den);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.add(numerator,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(numerator,  den);	  BigInteger    num    =    num.add(den,    den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
365	[BUG]  [BUGGY]  BigInteger  num  =  num.add(num,  den);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.add(num,  den);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.add(num,  den);	  BigInteger    num    =    num.add(den,    den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
366	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }	  	compilable	  [FE]  AssertionError  	30	10	add
367	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }	  	compilable	  [FE]  AssertionError  	30	10	add
368	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  }	  	compilable	  [FE]  AssertionError  	30	10	add
369	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  }	  	compilable	  [FE]  AssertionError  	30	10	add
370	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(num.intValue());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  den  =  gcd.negate(num.intValue());  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  den  =  gcd.negate(num.intValue());	  BigInteger    den    =    gcd.negate(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
371	[BUG]  [BUGGY]  if(den  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }	          num    =    num.divide(gcd);    num    =    num.divide(gcd).divide(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
372	[BUG]  [BUGGY]  if(den  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  else  {  BigInteger  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  else  {  BigInteger  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(den);  }  else  {  BigInteger  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    num    =    num.divide(gcd).divide(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
373	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  num  =  num.negate();  num  =  num.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)>  0)  {  num  =  num.negate();  num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>  0)  {  num  =  num.negate();  num  =  num.negate();  }	          num    =    num.negate();    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
374	[BUG]  [BUGGY]  BigInteger  denominator  =  numerator.denominator();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  numerator.denominator();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  numerator.denominator();	  BigInteger    denominator    =    num.denominator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
375	[BUG]  [BUGGY]  BigInteger  num  =  in.negate(),  den.negate();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  in.negate(),  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  in.negate(),  den.negate();	  BigInteger    num    =    in.negate();    	non-compiled	[CE]  ';'  expected	100	None	replace
376	[BUG]  [BUGGY]  BigInteger  num  =  in.negate()  +  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  in.negate()  +  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  in.negate()  +  den.negate();	  BigInteger    num    =    in.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }	  	compilable	  [FE]  AssertionError  	34	19	add
378	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }	  	compilable	  [FE]  AssertionError  	34	19	add
379	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }	  	compilable	  [FE]  AssertionError  	34	19	add
380	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd).negate();  }	  	compilable	  [FE]  AssertionError  	34	19	add
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd).negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd).negate();  }	  	compilable	  [FE]  AssertionError  	34	19	add
382	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd).negate();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).negate();  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd).negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).negate();    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd).negate();  }	  	compilable	  [FE]  AssertionError  	34	19	add
383	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	28	11	add
384	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	28	11	add
385	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	28	11	add
386	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	28	11	add
387	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)>  0)  {  num  =  num.negate();  den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>  0)  {  num  =  num.negate();  den  =  den.negate();  }	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
388	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	63	12	add
389	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	63	12	add
390	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	63	12	add
391	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  num  =  num.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	63	12	add
392	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	63	12	add
393	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	63	12	add
394	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	63	12	add
395	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  num  =  num.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	63	12	add
396	[BUG]  [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(gcd)>  0)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }	  num    =    num.add(den);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
397	[BUG]  [BUGGY]  if(den.compareTo(gcd)  <  0)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(gcd)  <  0)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(gcd)  <  0)  {  num  =  num.add(den);  den  =  den.divide(gcd);  }	  num    =    num.add(den);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
398	[BUG]  [BUGGY]  BigInteger  numerator  =  gcd.negateTo(den);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  numerator  =  gcd.negateTo(den);  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  numerator  =  gcd.negateTo(den);	  BigInteger    numerator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
399	[BUG]  [BUGGY]  if(den  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
400	[BUG]  [BUGGY]  if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den  ==  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
401	[BUG]  [BUGGY]  if(den!=  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den!=  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den!=  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
402	[BUG]  [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(gcd)>  0)  {  num  =  num.gcd(den);  den  =  den.divide(gcd);  }	  num    =    num.gcd(den);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
403	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
404	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  numerator.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  numerator.divide(gcd);	  num    =    num.divide(gcd,    denominator);    numerator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
405	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  num  =  num.negate();  Den  =  den.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)>  0)  {  num  =  num.negate();  Den  =  den.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>  0)  {  num  =  num.negate();  Den  =  den.negate();  }	          num    =    num.negate();    if(BigInteger.ZERO.compareTo(den)    >    0)    {    num    =    num.negate();    Den    =    den.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
406	[BUG]  [BUGGY]  int  num  =  den.negate();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  int  num  =  den.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	int  num  =  den.negate();	          num    =    num.negate();    int    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
407	[BUG]  [BUGGY]  Integer  num  =  num.negate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  Integer  num  =  num.negate();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	Integer  num  =  num.negate();	          num    =    num.negate();    int    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
408	[BUG]  [BUGGY]  num  =  num.hashCode()  +  den.hashCode();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.hashCode()  +  den.hashCode();  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.hashCode()  +  den.hashCode();	  num    =    num.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
409	[BUG]  [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  if(den.compareTo(BigInteger.ZERO)  {  0)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(BigInteger.ZERO)  ==  0)  {  if(den.compareTo(BigInteger.ZERO)  {  0)  {  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(BigInteger.ZERO)    ==    0)    {    if(den.compareTo(BigInteger.ZERO)  {  0)  {	  	non-compiled	[CE]  ')'  expected	41	None	add
410	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }	  	compilable	  [FE]  AssertionError  	67	11	add
411	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }	  	compilable	  [FE]  AssertionError  	67	11	add
412	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  }	  	compilable	  [FE]  AssertionError  	67	11	add
413	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.multiply(gcd);    if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  }	  	compilable	  [FE]  AssertionError  	67	11	add
414	[BUG]  [BUGGY]  gcd  =  gcd.negate(BigInteger.ZERO);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  gcd  =  gcd.negate(BigInteger.ZERO);  [BUGGY]      num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	gcd  =  gcd.negate(BigInteger.ZERO);	  gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
415	[BUG]  [BUGGY]  if(den.equals(BigInteger.ZERO))  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.equals(BigInteger.ZERO))  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.equals(BigInteger.ZERO))  {  num  =  num.negate();  den  =  den.divide(gcd);  }	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
416	[BUG]  [BUGGY]  BigInteger  num  =  num.divide(gcd,  den,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  num  =  num.divide(gcd,  den,  denominator);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  num  =  num.divide(gcd,  den,  denominator);	  BigInteger    num    =    num.divide(gcd,    den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
417	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
418	[BUG]  [BUGGY]  num  =  num.divide(gcd,  den);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.divide(gcd,  den);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.divide(gcd,  den);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
419	[BUG]  [BUGGY]  if(den.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
420	[BUG]  [BUGGY]  final  BigInteger  num  =  num.multiply(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  final  BigInteger  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	final  BigInteger  num  =  num.multiply(gcd);	          num    =    num.divide(gcd);    final    BigInteger    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
421	[BUG]  [BUGGY]  BigInteger  denominator  =  gcd.denominator;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  BigInteger  denominator  =  gcd.denominator;  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	BigInteger  denominator  =  gcd.denominator;	  BigInteger    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
422	[BUG]  [BUGGY]  num  =  num.parse(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  num.parse(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
423	[BUG]  [BUGGY]  if(den.compareTo(num)>  0)  {  num  =  num.negate();  final  BigInteger  num  =  num.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  if(den.compareTo(num)>  0)  {  num  =  num.negate();  final  BigInteger  num  =  num.negate();  }  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	if(den.compareTo(num)>  0)  {  num  =  num.negate();  final  BigInteger  num  =  num.negate();  }	          num    =    num.negate();    final    BigInteger    num    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
424	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  denominator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }        [BUGGY]  num  =  numerator.divide(gcd);  denominator  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  denominator  =  den;  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	138	138	2	replace	num  =  numerator.divide(gcd);  denominator  =  den.divide(gcd);	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
