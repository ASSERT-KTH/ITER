bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);	}  	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  map.put(entry.getKey(),  values[col]);  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col]);	}  	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  map.put(entry.getKey(),  col);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  map.put(entry.getKey(),  col);  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  col);	}  	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]    [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  map.put(entry.getValue(),  col);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  map.put(entry.getValue(),  col);  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col);	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]  return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	}  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
