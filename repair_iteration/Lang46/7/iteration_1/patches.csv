bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  	8	None	replace
2	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  	8	None	replace
3	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  }  else  {  return  writer.toString();  }  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  }  else  {  return  writer.toString();  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  	8	None	replace
4	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length());	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  	1	None	replace
5	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  	1	None	replace
6	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  -  2);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  	1	None	replace
7	[BUG]  [BUGGY]  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  	7	None	replace
8	[BUG]  [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	scapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  safeEscape(writer,  str,  escapeSingleQuotes);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  safeEscape(writer,  str,  escapeSingleQuotes);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscape(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  	7	None	replace
10	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  4);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  4);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  4);	      StringWriter    writer    =    new    StringWriter(str.length()    *    4);    	non-compiled	[CE]  	4	None	replace
11	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  1);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  1);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  1);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    0);    	non-compiled	[CE]  	9	None	replace
12	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  2);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  2);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  2);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    0);    	non-compiled	[CE]  	9	None	replace
13	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  3);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  3);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  3);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    0);    	non-compiled	[CE]  	9	None	replace
14	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  writer.toCharArray();  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_QUOTE_STR  =  writer.toCharArray();  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_QUOTE_STR  =  writer.toCharArray();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  	12	None	replace
15	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  str.toCharArray();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  	12	None	replace
16	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  curr.toCharArray();  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_QUOTE_STR  =  curr.toCharArray();  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_QUOTE_STR  =  curr.toCharArray();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  	12	None	replace
17	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    	non-compiled	[CE]  	11	None	replace
18	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    	non-compiled	[CE]  	11	None	replace
19	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  return  writer.toString();  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  return  writer.toString();  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    	non-compiled	[CE]  	11	None	replace
20	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.toString();  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.toString();  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    	non-compiled	[CE]  	11	None	replace
21	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR);    	non-compiled	[CE]  	13	None	replace
22	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR);    	non-compiled	[CE]  	13	None	replace
23	[BUG]  [BUGGY]  writer.append('N');  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append('N');  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('N');	      writer.append('n');    	non-compiled	[CE]  	10	None	replace
24	[BUG]  [BUGGY]  writer.append('[');  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append('[');  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('[');	      writer.append('n');    	non-compiled	[CE]  	10	None	replace
25	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  str.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  	2	None	replace
26	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  writer.toCharArray();  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_DELIMITER  =  writer.toCharArray();  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  writer.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  	2	None	replace
27	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  str.toCharArray()  +  1;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_DELIMITER  =  str.toCharArray()  +  1;  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  str.toCharArray()  +  1;	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  	2	None	replace
28	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  0);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  0);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  0);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  	6	None	replace
29	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  	6	None	replace
30	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  3);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  3);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  3);	      StringWriter    writer    =    new    StringWriter(str.length()    *    3);    	non-compiled	[CE]  	5	None	replace
31	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  3);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  3);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  -  3);	      StringWriter    writer    =    new    StringWriter(str.length()    *    3);    	non-compiled	[CE]  	5	None	replace
32	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(CSV_QUOTE_STR);    	non-compiled	[CE]  	14	None	replace
33	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(CSV_QUOTE_STR);    	non-compiled	[CE]  	14	None	replace
34	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(escapeSingleQuotes);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(escapeSingleQuotes);	      char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    	non-compiled	[CE]  	3	None	replace
35	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(escapeSingleQuotes);  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(escapeSingleQuotes);  }  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(escapeSingleQuotes);  }	      char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    	non-compiled	[CE]  	3	None	replace
36	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);	      char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    	non-compiled	[CE]  	3	None	replace
37	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  	6	None	replace
38	[BUG]  [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  	7	None	replace
39	[BUG]  [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  	7	None	replace
40	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    4);    	non-compiled	[CE]  	4	None	replace
41	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str.trim();  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_QUOTE_STR  =  str.trim();  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_QUOTE_STR  =  str.trim();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  	12	None	replace
42	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    3);    	non-compiled	[CE]  	5	None	replace
43	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append( "n ");  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append( "n ");  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append( "n ");  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    	non-compiled	[CE]  	11	None	replace
44	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append('n');  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append('n');  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append('n');  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    	non-compiled	[CE]  	11	None	replace
45	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  	1	None	replace
46	[BUG]  [BUGGY]  writer.append('n',  escapeSingleQuotes);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append('n',  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('n',  escapeSingleQuotes);	      writer.append('n');    	non-compiled	[CE]  	10	None	replace
47	[BUG]  [BUGGY]  if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR);    	non-compiled	[CE]  	13	None	replace
48	[BUG]  [BUGGY]  writer.append(',');  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append(',');  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append(',');	      writer.append('n');    	non-compiled	[CE]  	10	None	replace
49	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  	2	None	replace
50	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  null);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  null);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  null);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  	8	None	replace
51	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  SV_QUOTE_STR);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  SV_QUOTE_STR);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  SV_QUOTE_STR);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  	8	None	replace
52	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  SV_DELIMITER);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  SV_DELIMITER);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  SV_DELIMITER);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  	6	None	replace
53	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  cSV_DELIMITER);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  cSV_DELIMITER);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  cSV_DELIMITER);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  	6	None	replace
54	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);	      char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    	non-compiled	[CE]  	3	None	replace
55	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);	      char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    	non-compiled	[CE]  	3	None	replace
56	[BUG]  [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  	7	None	replace
57	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  2);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  2);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  2);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  	1	None	replace
