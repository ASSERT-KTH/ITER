bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    	non-compiled	[CE]  	18	None	replace
2	[BUG]  [BUGGY]  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  true);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    	non-compiled	[CE]  	18	None	replace
3	[BUG]  [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  true);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    	non-compiled	[CE]  	18	None	replace
4	[BUG]  [BUGGY]  Char[]  CSV_DELIMITER  =  str.toCharArray();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  Char[]  CSV_DELIMITER  =  str.toCharArray();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	Char[]  CSV_DELIMITER  =  str.toCharArray();	  char[]    CSV_DELIMITER    =    str.toCharArray()    +    1;    	non-compiled	[CE]  	27	None	replace
5	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  cSV_DELIMITER);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  cSV_DELIMITER);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  cSV_DELIMITER);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    cSV_DELIMITER);    	non-compiled	[CE]  	53	None	replace
6	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  cSV_QUOTE,  writer);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  cSV_QUOTE,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  cSV_QUOTE,  writer);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    cSV_DELIMITER);    	non-compiled	[CE]  	53	None	replace
7	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  CSV_DELIMITER);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  CSV_DELIMITER);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  CSV_DELIMITER);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    cSV_DELIMITER);    	non-compiled	[CE]  	53	None	replace
8	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  cSV_DELIMITER,  writer);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  cSV_DELIMITER,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  cSV_DELIMITER,  writer);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    cSV_DELIMITER);    	non-compiled	[CE]  	53	None	replace
9	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  0,  str.length());  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  0,  str.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  0,  str.length());	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    0);    	non-compiled	[CE]  	28	None	replace
10	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  1);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  1);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  1);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    0);    	non-compiled	[CE]  	28	None	replace
11	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  false);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  false);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  false);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    0);    	non-compiled	[CE]  	28	None	replace
12	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  }	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	22	None	replace
13	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	22	None	replace
14	[BUG]  [BUGGY]  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	22	None	replace
15	[BUG]  [BUGGY]  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  writer.toString());	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	3	None	replace
16	[BUG]  [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  writer.toString());	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	3	None	replace
17	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  CSV_DELIMITER.toCharArray();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  CSV_DELIMITER.toCharArray();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  CSV_DELIMITER.toCharArray();	  String[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  	25	None	replace
18	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  writer.toCharArray();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  writer.toCharArray();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  writer.toCharArray();	  String[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  	25	None	replace
19	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  str.toString();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  str.toString();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  str.toString();	  String[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  	25	None	replace
20	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  CSV_QUOTE_STR);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  CSV_QUOTE_STR);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  CSV_QUOTE_STR);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    SV_DELIMITER);    	non-compiled	[CE]  	52	None	replace
21	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  SV_DELIMITER,  writer);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  SV_DELIMITER,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  SV_DELIMITER,  writer);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    SV_DELIMITER);    	non-compiled	[CE]  	52	None	replace
22	[BUG]  [BUGGY]  CharSequence  <?>  escapeSingleQuotes  =  escapeSingleQuotes(str,  escapeSingleQuotes);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  CharSequence  <?>  escapeSingleQuotes  =  escapeSingleQuotes(str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	CharSequence  <?>  escapeSingleQuotes  =  escapeSingleQuotes(str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append(   "n   ");    }    	non-compiled	[CE]  	43	None	replace
23	[BUG]  [BUGGY]  CharSequence  <?>  escapeSingleQuotes  =  escapeSingleQuotes.charAt(str.length()  -  1);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  CharSequence  <?>  escapeSingleQuotes  =  escapeSingleQuotes.charAt(str.length()  -  1);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	CharSequence  <?>  escapeSingleQuotes  =  escapeSingleQuotes.charAt(str.length()  -  1);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append(   "n   ");    }    	non-compiled	[CE]  	43	None	replace
24	[BUG]  [BUGGY]  CharSequence  <?>  escapeSingleQuotes  =  escapeSingleQuotes.charAt(0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  CharSequence  <?>  escapeSingleQuotes  =  escapeSingleQuotes.charAt(0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	CharSequence  <?>  escapeSingleQuotes  =  escapeSingleQuotes.charAt(0);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append(   "n   ");    }    	non-compiled	[CE]  	43	None	replace
25	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  writer.toCharArray();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_QUOTE_STR  =  writer.toCharArray();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  writer.toCharArray();	  String[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  	15	None	replace
26	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toString();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toString();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  str.toString();	  String[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  	15	None	replace
27	[BUG]  [BUGGY]  try  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  return  writer.toString();  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  try  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	try  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  return  writer.toString();  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	19	None	replace
28	[BUG]  [BUGGY]  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  true);  }  else  {  return  writer.toString();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  true);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  true);  }  else  {  return  writer.toString();  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	19	None	replace
29	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    false);    	non-compiled	[CE]  	17	None	replace
30	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.toString();  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.toString();  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    false);    	non-compiled	[CE]  	17	None	replace
31	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.append('n');  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.append('n');  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    false);    	non-compiled	[CE]  	17	None	replace
32	[BUG]  [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);	  scapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	8	None	replace
33	[BUG]  [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());	  scapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	8	None	replace
34	[BUG]  [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.length());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.length());	  scapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	8	None	replace
35	[BUG]  [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());	  scapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	8	None	replace
36	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);	  char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(cSV_QUOTE_STR);    	non-compiled	[CE]  	54	None	replace
37	[BUG]  [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0);	  MutableString    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	56	None	replace
38	[BUG]  [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);	  MutableString    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	56	None	replace
39	[BUG]  [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.length());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.length());	  MutableString    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	56	None	replace
40	[BUG]  [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());	  MutableString    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	56	None	replace
41	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toString();  writer.append(cSV_QUOTE_STR);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toString();  writer.append(cSV_QUOTE_STR);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  str.toString();  writer.append(cSV_QUOTE_STR);	  String[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR);    	non-compiled	[CE]  	21	None	replace
42	[BUG]  [BUGGY]  CharTypes.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  CharTypes.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	CharTypes.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append('n');    }    	non-compiled	[CE]  	44	None	replace
43	[BUG]  [BUGGY]  writer.append(',').append(Character.toLowerCase(str.charAt(0)));  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append(',').append(Character.toLowerCase(str.charAt(0)));  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append(',').append(Character.toLowerCase(str.charAt(0)));	  writer.append(',');    	non-compiled	[CE]  	48	None	replace
44	[BUG]  [BUGGY]  writer.append(',').append(charAt(str.length()  -  1));  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append(',').append(charAt(str.length()  -  1));  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append(',').append(charAt(str.length()  -  1));	  writer.append(',');    	non-compiled	[CE]  	48	None	replace
45	[BUG]  [BUGGY]  writer.append(',').append(Character.toUpperCase(str.charAt(0)));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append(',').append(Character.toUpperCase(str.charAt(0)));  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append(',').append(Character.toUpperCase(str.charAt(0)));	  writer.append(',');    	non-compiled	[CE]  	48	None	replace
46	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  }	  allowEscapeSingleQuotes(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	7	None	replace
47	[BUG]  [BUGGY]  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  0);	  allowEscapeSingleQuotes(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	7	None	replace
48	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE);	  char[]    CSV_DELIMITER    =    escapeSingleQuotes.toCharArray();    writer.append(cSV_QUOTE);    	non-compiled	[CE]  	36	None	replace
49	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);	  char[]    CSV_DELIMITER    =    escapeSingleQuotes.toCharArray();    writer.append(cSV_QUOTE);    	non-compiled	[CE]  	36	None	replace
50	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);  }	  char[]    CSV_DELIMITER    =    escapeSingleQuotes.toCharArray();    writer.append(cSV_QUOTE);    	non-compiled	[CE]  	36	None	replace
51	[BUG]  [BUGGY]  String  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE);	  char[]    CSV_DELIMITER    =    escapeSingleQuotes.toCharArray();    writer.append(cSV_QUOTE);    	non-compiled	[CE]  	36	None	replace
52	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    4    +    escapeSingleQuotes);    	non-compiled	[CE]  	40	None	replace
53	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  4  +  escapeSingleQuotes);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  4  +  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  4  +  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    4    +    escapeSingleQuotes);    	non-compiled	[CE]  	40	None	replace
54	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  	45	None	replace
55	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length());  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length());  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  	45	None	replace
56	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  null);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  null);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  null);  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    null);    	non-compiled	[CE]  	50	None	replace
57	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  this);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  this);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  this);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    null);    	non-compiled	[CE]  	50	None	replace
58	[BUG]  [BUGGY]  writer.append('N').append(Character.toLowerCase(str.charAt(0)));  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('N').append(Character.toLowerCase(str.charAt(0)));  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('N').append(Character.toLowerCase(str.charAt(0)));	  writer.append('N');    	non-compiled	[CE]  	23	None	replace
59	[BUG]  [BUGGY]  writer.append('N').append(Character.toUpperCase(str.charAt(0)));  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('N').append(Character.toUpperCase(str.charAt(0)));  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('N').append(Character.toUpperCase(str.charAt(0)));	  writer.append('N');    	non-compiled	[CE]  	23	None	replace
60	[BUG]  [BUGGY]  writer.append('N',  str);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('N',  str);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('N',  str);	  writer.append('N');    	non-compiled	[CE]  	23	None	replace
61	[BUG]  [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  0);	  safeEscapeSingleQuotes(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	39	None	replace
62	[BUG]  [BUGGY]  writer.append('[',  str.length()  -  1);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('[',  str.length()  -  1);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('[',  str.length()  -  1);	  writer.append('[');    	non-compiled	[CE]  	24	None	replace
63	[BUG]  [BUGGY]  writer.append('[').append(str.charAt(0));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('[').append(str.charAt(0));  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('[').append(str.charAt(0));	  writer.append('[');    	non-compiled	[CE]  	24	None	replace
64	[BUG]  [BUGGY]  writer.append('[',  str.length()  -  2);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('[',  str.length()  -  2);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('[',  str.length()  -  2);	  writer.append('[');    	non-compiled	[CE]  	24	None	replace
65	[BUG]  [BUGGY]  writer.append('n',  str);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('n',  str);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('n',  str);	  writer.append('n',    escapeSingleQuotes);    	non-compiled	[CE]  	46	None	replace
66	[BUG]  [BUGGY]  writer.append(str,  escapeSingleQuotes);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append(str,  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append(str,  escapeSingleQuotes);	  writer.append('n',    escapeSingleQuotes);    	non-compiled	[CE]  	46	None	replace
67	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  writer.toString();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  char[]  CSV_DELIMITER  =  writer.toString();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  writer.toString();	  char[]    CSV_DELIMITER    =    writer.toCharArray();    	non-compiled	[CE]  	26	None	replace
68	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  writer.toString();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  char[]  CSV_QUOTE_STR  =  writer.toString();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_QUOTE_STR  =  writer.toString();	  char[]    CSV_QUOTE_STR    =    writer.toCharArray();    	non-compiled	[CE]  	14	None	replace
69	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);	  char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(CSV_QUOTE_STR);    	non-compiled	[CE]  	55	None	replace
70	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);	  char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(CSV_QUOTE_STR);    	non-compiled	[CE]  	55	None	replace
71	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null);  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    null);    	non-compiled	[CE]  	37	None	replace
72	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null,  writer.toString());  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null,  writer.toString());	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    null);    	non-compiled	[CE]  	37	None	replace
73	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    }    	non-compiled	[CE]  	29	None	replace
74	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  3  +  escapeSingleQuotes);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  3  +  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  3  +  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    3    +    escapeSingleQuotes);    	non-compiled	[CE]  	42	None	replace
75	[BUG]  [BUGGY]  try  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.toString();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  try  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	try  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.toString();  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.toString();    }    	non-compiled	[CE]  	20	None	replace
76	[BUG]  [BUGGY]  try  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.toString();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  try  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	try  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.toString();  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.toString();    }    	non-compiled	[CE]  	20	None	replace
77	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_DELIMITER,  writer,  SV_QUOTE_STR);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_DELIMITER,  writer,  SV_QUOTE_STR);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_DELIMITER,  writer,  SV_QUOTE_STR);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    SV_QUOTE_STR);    	non-compiled	[CE]  	51	None	replace
78	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  SV_DELIMITER,  writer,  SV_QUOTE_STR);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  SV_DELIMITER,  writer,  SV_QUOTE_STR);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  SV_DELIMITER,  writer,  SV_QUOTE_STR);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    SV_QUOTE_STR);    	non-compiled	[CE]  	51	None	replace
79	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  writer);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  writer);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    SV_QUOTE_STR);    	non-compiled	[CE]  	51	None	replace
80	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  curr.toCharArray();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_QUOTE_STR  =  curr.toCharArray();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  curr.toCharArray();	  char[]    CSV_QUOTE_STR    =    curr.toCharArray();    	non-compiled	[CE]  	16	None	replace
81	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toString();  writer.append(CSV_QUOTE_STR);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toString();  writer.append(CSV_QUOTE_STR);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  str.toString();  writer.append(CSV_QUOTE_STR);	  String[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(CSV_QUOTE_STR);    	non-compiled	[CE]  	32	None	replace
82	[BUG]  [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0);	  MutableStringUtils.escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	38	None	replace
83	[BUG]  [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.length());  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.length());	  MutableStringUtils.escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	38	None	replace
84	[BUG]  [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());	  MutableStringUtils.escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	38	None	replace
85	[BUG]  [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);	  MutableStringUtils.escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	38	None	replace
86	[BUG]  [BUGGY]  safeEscape(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscape(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscape(writer,  str,  escapeSingleQuotes,  writer.toString());	  safeEscape(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	9	None	replace
87	[BUG]  [BUGGY]  safeEscape(writer,  str,  escapeSingleQuotes,  0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscape(writer,  str,  escapeSingleQuotes,  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscape(writer,  str,  escapeSingleQuotes,  0);	  safeEscape(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	9	None	replace
88	[BUG]  [BUGGY]  safeEscape(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscape(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscape(writer,  str,  escapeSingleQuotes,  true);	  safeEscape(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	9	None	replace
89	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append('n');  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append('n');  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append('n');  }	  if(escapeSingleQuotes)    {    char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    }    	non-compiled	[CE]  	35	None	replace
90	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(EscapeSingleQuotes);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(EscapeSingleQuotes);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(EscapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    }    	non-compiled	[CE]  	35	None	replace
91	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }	  if(escapeSingleQuotes)    {    char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    }    	non-compiled	[CE]  	35	None	replace
92	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str!=  null)  {  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  if(str!=  null)  {  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  if(str!=  null)  {  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }	  if(str!=    null)    {    char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR);    }    	non-compiled	[CE]  	47	None	replace
93	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }	  if(str!=    null)    {    char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR);    }    	non-compiled	[CE]  	47	None	replace
94	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toCharArray());    	non-compiled	[CE]  	2	None	replace
95	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  }  else  {  return  writer.toString();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  }  else  {  return  writer.toString();  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toCharArray());    	non-compiled	[CE]  	2	None	replace
96	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toCharArray());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toCharArray());    	non-compiled	[CE]  	2	None	replace
97	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(escapeSingleQuotes);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(escapeSingleQuotes);	  String[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    	non-compiled	[CE]  	34	None	replace
98	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  writer.trim();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  char[]  CSV_QUOTE_STR  =  writer.trim();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_QUOTE_STR  =  writer.trim();	  char[]    CSV_QUOTE_STR    =    str.trim();    	non-compiled	[CE]  	41	None	replace
99	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.trim();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_QUOTE_STR  =  str.trim();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  str.trim();	  char[]    CSV_QUOTE_STR    =    str.trim();    	non-compiled	[CE]  	41	None	replace
100	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();	  char[]    CSV_DELIMITER    =    CSV_QUOTE_STR.toCharArray();    	non-compiled	[CE]  	49	None	replace
101	[BUG]  [BUGGY]  String  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();	  char[]    CSV_DELIMITER    =    CSV_QUOTE_STR.toCharArray();    	non-compiled	[CE]  	49	None	replace
102	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(CSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	33	None	replace
103	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(CSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	33	None	replace
104	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  else  {  return  writer.toString();  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  else  {  return  writer.toString();  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  else  {  return  writer.toString();  }	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(CSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	33	None	replace
105	[BUG]  [BUGGY]  combinJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  combinJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	combinJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	3	None	replace
106	[BUG]  [BUGGY]  nisipToString(writer,  str,  escapeSingleQuotes);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  nisipToString(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	nisipToString(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	3	None	replace
107	[BUG]  [BUGGY]  safeEscape(writer,  str,  escapeJavaStyleString);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscape(writer,  str,  escapeJavaStyleString);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscape(writer,  str,  escapeJavaStyleString);	  safeEscape(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	9	None	replace
108	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  SV_DELIMITER);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  SV_DELIMITER);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  SV_DELIMITER);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    SV_DELIMITER);    	non-compiled	[CE]  	52	None	replace
109	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  writer,  SV_DELIMITER);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  writer,  SV_DELIMITER);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  writer,  SV_DELIMITER);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    SV_DELIMITER);    	non-compiled	[CE]  	52	None	replace
110	[BUG]  [BUGGY]  combinJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  combinJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	combinJavaStyleString(writer,  str,  escapeSingleQuotes,  true);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	19	None	replace
111	[BUG]  [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  false);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  false);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  false);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	19	None	replace
112	[BUG]  [BUGGY]  combinJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  combinJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	combinJavaStyleString(writer,  str,  escapeSingleQuotes,  false);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	19	None	replace
113	[BUG]  [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	scapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);	  scapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	8	None	replace
114	[BUG]  [BUGGY]  nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append( "n   ");  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append( "n   ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append( "n   ");  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append(   "n   ");    }    	non-compiled	[CE]  	43	None	replace
115	[BUG]  [BUGGY]  nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append(   "n   ");    }    	non-compiled	[CE]  	43	None	replace
116	[BUG]  [BUGGY]  writer.append(',').append(escapeSingleQuotes);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append(',').append(escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append(',').append(escapeSingleQuotes);	  writer.append(',');    	non-compiled	[CE]  	48	None	replace
117	[BUG]  [BUGGY]  writer.append(','  +  str);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append(','  +  str);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append(','  +  str);	  writer.append(',');    	non-compiled	[CE]  	48	None	replace
118	[BUG]  [BUGGY]  writer.append(',').append(charAt(str));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append(',').append(charAt(str));  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append(',').append(charAt(str));	  writer.append(',');    	non-compiled	[CE]  	48	None	replace
119	[BUG]  [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);	  MutableStringUtils.escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	38	None	replace
120	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  writer.toCharArray(escapeSingleQuotes);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  char[]  CSV_DELIMITER  =  writer.toCharArray(escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  writer.toCharArray(escapeSingleQuotes);	  char[]    CSV_DELIMITER    =    writer.toCharArray();    	non-compiled	[CE]  	26	None	replace
121	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  writer.toCharArray()  +  1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  char[]  CSV_DELIMITER  =  writer.toCharArray()  +  1;  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  writer.toCharArray()  +  1;	  char[]    CSV_DELIMITER    =    writer.toCharArray();    	non-compiled	[CE]  	26	None	replace
122	[BUG]  [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeJavaStyleString);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeJavaStyleString);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscapeSingleQuotes(writer,  str,  escapeJavaStyleString);	  safeEscapeSingleQuotes(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	39	None	replace
123	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  }	  if(escapeSingleQuotes)    {    char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    }    	non-compiled	[CE]  	35	None	replace
124	[BUG]  [BUGGY]  if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  }	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	22	None	replace
125	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  author.toString());  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  author.toString());  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  author.toString());  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    }    	non-compiled	[CE]  	1	None	replace
126	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_DELIMITER,  SV_QUOTE_STR);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_DELIMITER,  SV_QUOTE_STR);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_DELIMITER,  SV_QUOTE_STR);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    SV_QUOTE_STR);    	non-compiled	[CE]  	51	None	replace
127	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  StringEscapeUtils.EMPTY_STRING);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  StringEscapeUtils.EMPTY_STRING);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  StringEscapeUtils.EMPTY_STRING);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    null);    	non-compiled	[CE]  	37	None	replace
128	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray()  +  1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray()  +  1;  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  str.toCharArray()  +  1;	  String[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  	25	None	replace
129	[BUG]  [BUGGY]  if(str  ==  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(str  ==  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(str  ==  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }	  if(str!=    null)    {    char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR);    }    	non-compiled	[CE]  	47	None	replace
130	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  writer,  cSV_DELIMITER);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  writer,  cSV_DELIMITER);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  CSV_QUOTE_STR,  writer,  cSV_DELIMITER);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    cSV_DELIMITER);    	non-compiled	[CE]  	53	None	replace
131	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  	45	None	replace
132	[BUG]  [BUGGY]  writer.append('[',  str);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('[',  str);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('[',  str);	  writer.append('n',    escapeSingleQuotes);    	non-compiled	[CE]  	46	None	replace
133	[BUG]  [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);	  MutableString    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	56	None	replace
134	[BUG]  [BUGGY]  if(escapeSingleQuotes  ==  null)  {  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes  ==  null)  {  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes  ==  null)  {  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  }	  allowEscapeSingleQuotes(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	7	None	replace
135	[BUG]  [BUGGY]  enableEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  enableEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	enableEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);	  allowEscapeSingleQuotes(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	7	None	replace
136	[BUG]  [BUGGY]  writer.append('[').append(escapeSingleQuotes);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('[').append(escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('[').append(escapeSingleQuotes);	  writer.append('[');    	non-compiled	[CE]  	24	None	replace
137	[BUG]  [BUGGY]  writer.append('['  +  str);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('['  +  str);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('['  +  str);	  writer.append('[');    	non-compiled	[CE]  	24	None	replace
138	[BUG]  [BUGGY]  nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append('n');  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  }  else  {  writer.append('n');  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append('n');    }    	non-compiled	[CE]  	44	None	replace
139	[BUG]  [BUGGY]  nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.append('n');  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	nisipToString(writer.charAt(0))  {  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.append('n');  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append('n');    }    	non-compiled	[CE]  	44	None	replace
140	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.append( "n ");  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.append( "n ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  writer.append( "n ");  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    false);    	non-compiled	[CE]  	17	None	replace
141	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  3);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  3);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  3);	  StringWriter    writer    =    new    StringWriter(str.length()    -    3);    	non-compiled	[CE]  	31	None	replace
142	[BUG]  [BUGGY]  if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(CSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	33	None	replace
143	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  0);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  0);	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(CSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	33	None	replace
144	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray(escapeSingleQuotes);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray(escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray(escapeSingleQuotes);	  char[]    CSV_DELIMITER    =    CSV_QUOTE_STR.toCharArray();    	non-compiled	[CE]  	49	None	replace
145	[BUG]  [BUGGY]  writer.append('N',  escapeSingleQuotes);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('N',  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('N',  escapeSingleQuotes);	  writer.append('N');    	non-compiled	[CE]  	23	None	replace
146	[BUG]  [BUGGY]  writer.append('N',  '/');  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('N',  '/');  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('N',  '/');	  writer.append('N');    	non-compiled	[CE]  	23	None	replace
147	[BUG]  [BUGGY]  writer.append('N').append(str);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('N').append(str);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('N').append(str);	  writer.append('N');    	non-compiled	[CE]  	23	None	replace
148	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null,  writer);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null,  writer);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    null);    	non-compiled	[CE]  	37	None	replace
149	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  }  else  {  return  writer.toString();  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  allowEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  }  else  {  return  writer.toString();  }	  allowEscapeSingleQuotes(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	7	None	replace
150	[BUG]  [BUGGY]  escapeSingleQuotes(writer,  str,  escapeSingleQuotes);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeSingleQuotes(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeSingleQuotes(writer,  str,  escapeSingleQuotes);	  allowEscapeSingleQuotes(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	7	None	replace
151	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toLowerCase();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toLowerCase();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_QUOTE_STR  =  str.toLowerCase();	  String[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  	15	None	replace
152	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  	45	None	replace
153	[BUG]  [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableStringUtils.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);	  MutableStringUtils.escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	38	None	replace
154	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  CSV_QUOTE.toCharArray();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  CSV_QUOTE.toCharArray();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  CSV_QUOTE.toCharArray();	  String[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  	25	None	replace
155	[BUG]  [BUGGY]  combuteStyleString(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  combuteStyleString(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	combuteStyleString(writer,  str,  escapeSingleQuotes,  true);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.toString();    }    	non-compiled	[CE]  	20	None	replace
156	[BUG]  [BUGGY]  [Delete]  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  [Delete]  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	[Delete]	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.toString();    }    	non-compiled	[CE]  	20	None	replace
157	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR);  }	  if(str!=    null)    {    char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR);    }    	non-compiled	[CE]  	47	None	replace
158	[BUG]  [BUGGY]  if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(str!=  null)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR);  }	  if(str!=    null)    {    char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR);    }    	non-compiled	[CE]  	47	None	replace
159	[BUG]  [BUGGY]  safeEscape(writer,  str,  escapeSingleQuotes,  writer);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscape(writer,  str,  escapeSingleQuotes,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscape(writer,  str,  escapeSingleQuotes,  writer);	  safeEscape(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	9	None	replace
160	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str.trim().toLowerCase();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  char[]  CSV_QUOTE_STR  =  str.trim().toLowerCase();  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	char[]  CSV_QUOTE_STR  =  str.trim().toLowerCase();	  char[]    CSV_QUOTE_STR    =    str.trim();    	non-compiled	[CE]  	41	None	replace
161	[BUG]  [BUGGY]  writer.append('[').append(Character.toLowerCase(str.charAt(0)));  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('[').append(Character.toLowerCase(str.charAt(0)));  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('[').append(Character.toLowerCase(str.charAt(0)));	  writer.append('[');    	non-compiled	[CE]  	24	None	replace
162	[BUG]  [BUGGY]  writer.append('[').append(Character.toUpperCase(str.charAt(0)));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  writer.append('[').append(Character.toUpperCase(str.charAt(0)));  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	writer.append('[').append(Character.toUpperCase(str.charAt(0)));	  writer.append('[');    	non-compiled	[CE]  	24	None	replace
163	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE_STR);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  String[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE_STR);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	String[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  writer.append(cSV_QUOTE_STR);	  String[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    	non-compiled	[CE]  	34	None	replace
164	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(cSV_QUOTE_STR,  escapeSingleQuotes);  }	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(cSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	22	None	replace
165	[BUG]  [BUGGY]  combuteStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  combuteStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	combuteStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	3	None	replace
166	[BUG]  [BUGGY]  combuteStyle(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  combuteStyle(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	combuteStyle(writer,  str,  escapeSingleQuotes,  writer.toString());	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	3	None	replace
167	[BUG]  [BUGGY]  combuteStyleEscapes(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  combuteStyleEscapes(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	combuteStyleEscapes(writer,  str,  escapeSingleQuotes,  writer.toString());	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  	3	None	replace
168	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  return  writer.toString();  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  }  else  {  return  writer.toString();  }	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    false);    	non-compiled	[CE]  	17	None	replace
169	[BUG]  [BUGGY]  CharTypes.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  CharTypes.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	CharTypes.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    }    	non-compiled	[CE]  	29	None	replace
170	[BUG]  [BUGGY]  combuteStyleEscapes(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  combuteStyleEscapes(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	combuteStyleEscapes(writer,  str,  escapeSingleQuotes,  true);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append('n');    }    	non-compiled	[CE]  	44	None	replace
171	[BUG]  [BUGGY]  combuteStyle(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  combuteStyle(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	combuteStyle(writer,  str,  escapeSingleQuotes,  true);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append('n');    }    	non-compiled	[CE]  	44	None	replace
172	[BUG]  [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  writer);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	safeEscapeSingleQuotes(writer,  str,  escapeSingleQuotes,  writer);	  safeEscapeSingleQuotes(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	39	None	replace
173	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  str.length()  *  2);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  str.length()  *  2);  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	StringWriter  writer  =  new  StringWriter(str,  str.length()  *  2);	  StringWriter    writer    =    new    StringWriter(str.length());    	non-compiled	[CE]  	4	None	replace
174	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  SV_QUOTE_STR,  writer);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  SV_QUOTE_STR,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  SV_QUOTE_STR,  writer);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    SV_QUOTE_STR);    	non-compiled	[CE]  	51	None	replace
175	[BUG]  [BUGGY]  MutableStringEscapes.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableStringEscapes.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableStringEscapes.escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    }    	non-compiled	[CE]  	1	None	replace
176	[BUG]  [BUGGY]  combuteJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  combuteJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	combuteJavaStyleString(writer,  str,  escapeSingleQuotes,  true);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    true);    }    else    {    writer.append(   "n   ");    }    	non-compiled	[CE]  	43	None	replace
177	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  writer.toCharArray());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  writer.toCharArray());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  writer.toCharArray());	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toCharArray());    	non-compiled	[CE]  	2	None	replace
178	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  cSV_QUOTE_STR,  writer);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  cSV_QUOTE_STR,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  cSV_QUOTE_STR,  writer);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    cSV_DELIMITER);    	non-compiled	[CE]  	53	None	replace
179	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append( "n ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append( "n ");  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  writer.append( "n ");  }	  if(escapeSingleQuotes)    {    char[]    CSV_DELIMITER    =    str.toCharArray();    writer.append(escapeSingleQuotes);    }    	non-compiled	[CE]  	35	None	replace
180	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  CSV_QUOTE_STR,  null);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  CSV_QUOTE_STR,  null);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  CSV_QUOTE_STR,  null);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer,    null);    	non-compiled	[CE]  	50	None	replace
181	[BUG]  [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	MutableString  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);	  MutableString    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  	56	None	replace
182	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(CSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	33	None	replace
183	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  else  {  writer.append( "n ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);      [BUGGY]  if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  else  {  writer.append( "n ");  }  [BUGGY]      escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	160	160	1	replace	if(str.length()  ==  0)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  writer.append(CSV_QUOTE_STR,  escapeSingleQuotes);  }  else  {  writer.append( "n ");  }	  char[]    CSV_QUOTE_STR    =    str.toCharArray();    writer.append(CSV_QUOTE_STR,    escapeSingleQuotes);    	non-compiled	[CE]  	33	None	replace
