bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while(str!=  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  while(str!=  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	while(str!=  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  false);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	15	None	replace
2	[BUG]  [BUGGY]  while(str  ==  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  while(str  ==  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	while(str  ==  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  false);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	15	None	replace
3	[BUG]  [BUGGY]  while(str!=  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  while(str!=  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	while(str!=  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  true);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	15	None	replace
4	[BUG]  [BUGGY]  StringEscapeUtils.escapeJava(str,  false);  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  StringEscapeUtils.escapeJava(str,  false);  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	StringEscapeUtils.escapeJava(str,  false);	      StringEscapeUtils.escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	10	None	replace
5	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJava(str,  true);  }  else  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJava(str,  true);  }  else  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJava(str,  true);  }  else  {  return  escapeJavaStyleString(str,  false);  }	      StringEscapeUtils.escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	10	None	replace
6	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJava(str,  true);  }  [CE]  empty  character  literal  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJava(str,  true);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJava(str,  true);  }	      StringEscapeUtils.escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	10	None	replace
7	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJava(str,  true);  }  else  {  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJava(str,  true);  }  else  {  escapeJavaStyleString(str,  false);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJava(str,  true);  }  else  {  escapeJavaStyleString(str,  false);  }	      StringEscapeUtils.escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	10	None	replace
8	[BUG]  [BUGGY]  return  escapeJava(str,  null);  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJava(str,  null);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJava(str,  null);	      	non-compiled	[CE]  empty  character  literal	5	None	replace
9	[BUG]  [BUGGY]  return  escapeJava(str,  0);  [CE]  empty  character  literal  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJava(str,  0);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJava(str,  0);	      	non-compiled	[CE]  empty  character  literal	5	None	replace
10	[BUG]  [BUGGY]  return  escape(str,  null);  [CE]  empty  character  literal  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escape(str,  null);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escape(str,  null);	      	non-compiled	[CE]  empty  character  literal	5	None	replace
11	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false,  true);  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false,  true);  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  false,  true);	      StringEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	6	None	replace
12	[BUG]  [BUGGY]  StringUtils.escapeJavaStyleString(str,  true);  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  StringUtils.escapeJavaStyleString(str,  true);  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	StringUtils.escapeJavaStyleString(str,  true);	      StringEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	6	None	replace
13	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str,  true,  true);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str,  true,  true);	  return    escapeJavaStyleString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	4	None	replace
14	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true,  false);  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str,  true,  false);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str,  true,  false);	  return    escapeJavaStyleString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	4	None	replace
15	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str,  false,  false);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str,  false,  false);	  return    escapeJavaStyleString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	4	None	replace
16	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true,  null);  [CE]  empty  character  literal  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str,  true,  null);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str,  true,  null);	  return    escapeJavaStyleString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	4	None	replace
17	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  CSV_QUOTE_STR.toCharArray();  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_QUOTE_STR  =  CSV_QUOTE_STR.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_QUOTE_STR  =  CSV_QUOTE_STR.toCharArray();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	13	None	replace
18	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	String[]  CSV_QUOTE_STR  =  str.toCharArray();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	13	None	replace
19	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  CSV_SEARCH_CHARS.toCharArray();  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_QUOTE_STR  =  CSV_SEARCH_CHARS.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_QUOTE_STR  =  CSV_SEARCH_CHARS.toCharArray();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	13	None	replace
20	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null);  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str,  null);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str,  null);	  return    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	1	None	replace
21	[BUG]  [BUGGY]  return  escapeJava(str,  false,  true);  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJava(str,  false,  true);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJava(str,  false,  true);	  return    escapeJava(str,    false);    	non-compiled	[CE]  empty  character  literal	3	None	replace
22	[BUG]  [BUGGY]  if(str  ==  null)  {  return  escapeJava(str,  true);  }  else  {  System.arraycopy(cSV_DELIMITER,  str,  CSV_QUOTE_STR,  0,  str.length);  }  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  return  escapeJava(str,  true);  }  else  {  System.arraycopy(cSV_DELIMITER,  str,  CSV_QUOTE_STR,  0,  str.length);  }  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  return  escapeJava(str,  true);  }  else  {  System.arraycopy(cSV_DELIMITER,  str,  CSV_QUOTE_STR,  0,  str.length);  }	  return    escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	2	None	replace
23	[BUG]  [BUGGY]  if(str  ==  null)  {  return  escapeJava(str,  true);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  return  escapeJava(str,  true);  }  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  return  escapeJava(str,  true);  }	  return    escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	2	None	replace
24	[BUG]  [BUGGY]  if(str  ==  null)  {  return  escapeJava(str,  true);  }  else  {  System.arraycopy(cSV_DELIMITER,  str,  CSV_SEARCH_CHARS,  0,  str.length);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  return  escapeJava(str,  true);  }  else  {  System.arraycopy(cSV_DELIMITER,  str,  CSV_SEARCH_CHARS,  0,  str.length);  }  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  return  escapeJava(str,  true);  }  else  {  System.arraycopy(cSV_DELIMITER,  str,  CSV_SEARCH_CHARS,  0,  str.length);  }	  return    escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	2	None	replace
25	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  return  escapeJavaStyleString(str,  false);  }	      StringEscapeUtils.escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	7	None	replace
26	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }	      StringEscapeUtils.escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	7	None	replace
27	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  escapeJavaStyleString(str,  false);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  escapeJavaStyleString(str,  false);  }	      StringEscapeUtils.escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	7	None	replace
28	[BUG]  [BUGGY]  return  escapeJava(str,  true,  null);  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJava(str,  true,  null);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJava(str,  true,  null);	  return    escapeJavaStyleString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	12	None	replace
29	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  null);  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  null);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str,  false,  null,  null);	  return    escapeJavaStyleString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	12	None	replace
30	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  true);  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  true);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str,  false,  null,  true);	  return    escapeJavaStyleString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	12	None	replace
31	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str);  }	      StringEscapeUtils.escapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	9	None	replace
32	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	String[]  CSV_DELIMITER  =  str.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	11	None	replace
33	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  CSV_DELIMITER.toCharArray();  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_DELIMITER  =  CSV_DELIMITER.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_DELIMITER  =  CSV_DELIMITER.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	11	None	replace
34	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  CSV_SEARCH_CHARS.toCharArray();  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_DELIMITER  =  CSV_SEARCH_CHARS.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_DELIMITER  =  CSV_SEARCH_CHARS.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	11	None	replace
35	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE.toCharArray();  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_DELIMITER  =  CSV_QUOTE.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	11	None	replace
36	[BUG]  [BUGGY]  while(str  ==  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  while(str  ==  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	while(str  ==  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  true);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	14	None	replace
37	[BUG]  [BUGGY]  char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_CHARS.toCharArray();  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_CHARS.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_CHARS.toCharArray();	      char[]    CSV_SEARCH_CHARS    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	8	None	replace
38	[BUG]  [BUGGY]  String[]  CSV_SEARCH_CHARS  =  str.toCharArray();  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  String[]  CSV_SEARCH_CHARS  =  str.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	String[]  CSV_SEARCH_CHARS  =  str.toCharArray();	      char[]    CSV_SEARCH_CHARS    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	8	None	replace
39	[BUG]  [BUGGY]  char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_STR.toCharArray();  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_STR.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_STR.toCharArray();	      char[]    CSV_SEARCH_CHARS    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	8	None	replace
40	[BUG]  [BUGGY]  char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_CHARS,  str.toCharArray();  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_CHARS,  str.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_CHARS,  str.toCharArray();	      char[]    CSV_SEARCH_CHARS    =    str.toCharArray();    	non-compiled	[CE]  ';'  expected	8	None	replace
41	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  CSV_DELIMITER.toCharArray();  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_QUOTE_STR  =  CSV_DELIMITER.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_QUOTE_STR  =  CSV_DELIMITER.toCharArray();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	13	None	replace
42	[BUG]  [BUGGY]  return  escapeJava(str,  true,  false);  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJava(str,  true,  false);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJava(str,  true,  false);	  return    escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	2	None	replace
43	[BUG]  [BUGGY]  return  escape(str,  false);  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escape(str,  false);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escape(str,  false);	  return    escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	2	None	replace
44	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }	      StringEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	6	None	replace
45	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }	      StringEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	6	None	replace
46	[BUG]  [BUGGY]  char[]  CSV_SEARCH_CHARS  =  CSV_DELIMITER.toCharArray();  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_SEARCH_CHARS  =  CSV_DELIMITER.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_SEARCH_CHARS  =  CSV_DELIMITER.toCharArray();	      char[]    CSV_SEARCH_CHARS    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	8	None	replace
47	[BUG]  [BUGGY]  char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_QUOTE.toCharArray();  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_QUOTE.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_SEARCH_CHARS  =  CSV_SEARCH_QUOTE.toCharArray();	      char[]    CSV_SEARCH_CHARS    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	8	None	replace
48	[BUG]  [BUGGY]  while(str  <  =  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  while(str  <  =  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	while(str  <  =  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  false);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	11	None	replace
50	[BUG]  [BUGGY]  if(str  ==  null)  {  return  null;  }  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  return  null;  }  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  return  null;  }	      	non-compiled	[CE]  empty  character  literal	5	None	replace
51	[BUG]  [BUGGY]  return  escapeJavaStyleString(str);  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str);	  return    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	1	None	replace
52	[BUG]  [BUGGY]  while(str  <  =  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  while(str  <  =  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	while(str  <  =  CSV_DELIMITER)  {  return  escapeJavaStyleString(str,  true);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  Character(str)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  Character(str)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	Character(str)  {  return  escapeJavaStyleString(str,  true);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
54	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  null);  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str,  null,  null);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str,  null,  null);	  return    escapeJavaStyleString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	12	None	replace
55	[BUG]  [BUGGY]  return  escape(str,  true);  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escape(str,  true);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escape(str,  true);	  return    escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	2	None	replace
56	[BUG]  [BUGGY]  if(str!=  null)  {  StringEscapeUtils.escapeJavaStyleString(str);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str!=  null)  {  StringEscapeUtils.escapeJavaStyleString(str);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str!=  null)  {  StringEscapeUtils.escapeJavaStyleString(str);  }	      StringEscapeUtils.escapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	9	None	replace
57	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str  ==  null?  CSV_QUOTE_STR  :  CSV_SEARCH_CHARS;  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  char[]  CSV_QUOTE_STR  =  str  ==  null?  CSV_QUOTE_STR  :  CSV_SEARCH_CHARS;  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	char[]  CSV_QUOTE_STR  =  str  ==  null?  CSV_QUOTE_STR  :  CSV_SEARCH_CHARS;	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  empty  character  literal	13	None	replace
58	[BUG]  [BUGGY]  if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE)  {  return  escapeJavaStyleString(str,  true);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	15	None	replace
59	[BUG]  [BUGGY]  if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE_STR)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE_STR)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE_STR)  {  return  escapeJavaStyleString(str,  true);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	15	None	replace
60	[BUG]  [BUGGY]  if(str!=  null)  {  StringEscapeUtils.escapeJava(str,  true);  }  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str!=  null)  {  StringEscapeUtils.escapeJava(str,  true);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str!=  null)  {  StringEscapeUtils.escapeJava(str,  true);  }	      StringEscapeUtils.escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	10	None	replace
61	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  CSV_DELIMITER);  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  CSV_DELIMITER);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str,  false,  null,  CSV_DELIMITER);	  return    escapeJavaStyleString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	12	None	replace
62	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  SV_SEARCH_CHARS);  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  SV_SEARCH_CHARS);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleString(str,  false,  null,  SV_SEARCH_CHARS);	  return    escapeJavaStyleString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	12	None	replace
63	[BUG]  [BUGGY]  return  escapeJavaStyleStringEscape(str,  true);  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJavaStyleStringEscape(str,  true);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJavaStyleStringEscape(str,  true);	  return    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	1	None	replace
64	[BUG]  [BUGGY]  if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE)  {  return  escapeJavaStyleString(str,  false);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	14	None	replace
65	[BUG]  [BUGGY]  if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE_STR)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE_STR)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  CSV_DELIMITER  ||  str  ==  CSV_QUOTE_STR)  {  return  escapeJavaStyleString(str,  false);  }	      if(str    ==    CSV_DELIMITER)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	14	None	replace
66	[BUG]  [BUGGY]  return  escapeJava(str,  false,  null);  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  return  escapeJava(str,  false,  null);  [BUGGY]    }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	return  escapeJava(str,  false,  null);	  return    escapeJava(str,    false);    	non-compiled	[CE]  empty  character  literal	3	None	replace
67	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR	      StringEscapeUtils.escapeJavaStyleString(str,    true);    	non-compiled	[CE]  ';'  expected	7	None	replace
68	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  return  CSV_QUOTE_STR;  }  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  escapeJava(String  str)  {    [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  return  CSV_QUOTE_STR;  }  [BUGGY]    return  escapeJavaStyleString(str,  false);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJava  [RETURN_TYPE]  String  String  str  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	86	86	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  return  CSV_QUOTE_STR;  }	      StringEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	6	None	replace
