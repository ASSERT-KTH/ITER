bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(out  ==  null  ||  str.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(out  ==  null  ||  str.length()  ==  0)  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(out  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
2	[BUG]  [BUGGY]  if(out  ==  null  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(out  ==  null  ||  out.length()  ==  0)  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(out  ==  null  ||  out.length()  ==  0)  {	  if(str    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
3	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ||  out.isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ||  out.isEmpty())  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(str  ==  null  ||  escapeSingleQuote  ||  out.isEmpty())  {	  if(str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
4	[BUG]  [BUGGY]  if(escapeSingleQuote  ==  null  ||  str.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(escapeSingleQuote  ==  null  ||  str.length()  ==  0)  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(escapeSingleQuote  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
5	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ||  out.length()  ==  0)  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(str  ==  null  ||  escapeSingleQuote  ||  out.length()  ==  0)  {	  if(str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
6	[BUG]  [BUGGY]  OutputStream  str  =  out.getWriter();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  out.getWriter();  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  out.getWriter();	      OutputStream    str    =    out.getOutputStream();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
7	[BUG]  [BUGGY]  OutputStream  str  =  out.getOutputStream(str);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  out.getOutputStream(str);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  out.getOutputStream(str);	      OutputStream    str    =    out.getOutputStream();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
8	[BUG]  [BUGGY]  out.write( "u00 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write( "u00 "  +  hex(ch));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write( "u00 "  +  hex(ch));	      out.write(   "u   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
9	[BUG]  [BUGGY]  out.write( "u000 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write( "u000 "  +  hex(ch));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write( "u000 "  +  hex(ch));	      out.write(   "u   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
10	[BUG]  [BUGGY]  out.write( "u00 "  +  str.charAt(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write( "u00 "  +  str.charAt(0));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write( "u00 "  +  str.charAt(0));	      out.write(   "u   "    +    str.charAt(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
11	[BUG]  [BUGGY]  out.write( "u000 "  +  str.charAt(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write( "u000 "  +  str.charAt(0));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write( "u000 "  +  str.charAt(0));	      out.write(   "u   "    +    str.charAt(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
12	[BUG]  [BUGGY]  out.write(str.charAt(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write(str.charAt(0));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write(str.charAt(0));	      out.write(   "u   "    +    str.charAt(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
13	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  out.write( "u "  +  hex(ch));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(escapeSingleQuote)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  out.write( "u "  +  hex(ch));  }  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(escapeSingleQuote)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  out.write( "u "  +  hex(ch));  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
14	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write( "u "  +  hex(ch));  }  else  {  out.write( "u "  +  hex(ch));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(escapeSingleQuote)  {  out.write( "u "  +  hex(ch));  }  else  {  out.write( "u "  +  hex(ch));  }  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(escapeSingleQuote)  {  out.write( "u "  +  hex(ch));  }  else  {  out.write( "u "  +  hex(ch));  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
15	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write( "u "  +  hex(ch));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(escapeSingleQuote)  {  out.write( "u "  +  hex(ch));  }  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(escapeSingleQuote)  {  out.write( "u "  +  hex(ch));  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
16	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  out.write('u'  +  hex(ch));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(escapeSingleQuote)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  out.write('u'  +  hex(ch));  }  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(escapeSingleQuote)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  out.write('u'  +  hex(ch));  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
17	[BUG]  [BUGGY]  out.write( "u00 "  +  hex(str));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write( "u00 "  +  hex(str));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write( "u00 "  +  hex(str));	      out.write(   "u   "    +    hex(str));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
18	[BUG]  [BUGGY]  out.write( "u000 "  +  hex(str));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write( "u000 "  +  hex(str));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write( "u000 "  +  hex(str));	      out.write(   "u   "    +    hex(str));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
19	[BUG]  [BUGGY]  OutputStream  str  =  out.readLine()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  out.readLine()  +  1;  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  out.readLine()  +  1;	      OutputStream    str    =    out.readLine();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
20	[BUG]  [BUGGY]  OutputStream  str  =  out.readLine(),  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  out.readLine(),  str);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  out.readLine(),  str);	      OutputStream    str    =    out.readLine();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
21	[BUG]  [BUGGY]  OutputStream  str  =  out.readFully(str);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  out.readFully(str);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  out.readFully(str);	      OutputStream    str    =    out.readLine();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
22	[BUG]  [BUGGY]  String  str  =  str.charAt(0);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  str.charAt(0);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  str.charAt(0);	      char    str    =    str.charAt(0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
23	[BUG]  [BUGGY]  char  str  =  str.charAt(i);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  char  str  =  str.charAt(i);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	char  str  =  str.charAt(i);	      char    str    =    str.charAt(0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
24	[BUG]  [BUGGY]  char  str  =  str.charAt(1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  char  str  =  str.charAt(1);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	char  str  =  str.charAt(1);	      char    str    =    str.charAt(0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
25	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(str  ==  null  ||  str.length()!=  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
26	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuote)  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuote)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
27	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  out.charAt(0)!=  '-')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  out.charAt(0)!=  '-')  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  out.charAt(0)!=  '-')  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
28	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  escapeSingleQuote(out,  str);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  escapeSingleQuote(out,  str);	      String    str    =    escapeSingleQuote(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
29	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  escapeSingleQuote(str,  escapeSingleQuote);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  escapeSingleQuote(str,  escapeSingleQuote);	      String    str    =    escapeSingleQuote(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
30	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(str);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  escapeSingleQuote(str);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  escapeSingleQuote(str);	      String    str    =    escapeSingleQuote(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
31	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  escapeSingleQuote(out,  str.length());  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  escapeSingleQuote(out,  str.length());	      String    str    =    escapeSingleQuote(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
32	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(out);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(out);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  escapeSingleQuote.toCharArray(out);	      String    str    =    escapeSingleQuote.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
33	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(),  out);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(),  out);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  escapeSingleQuote.toCharArray(),  out);	      String    str    =    escapeSingleQuote.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
34	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toString(out);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  escapeSingleQuote.toString(out);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  escapeSingleQuote.toString(out);	      String    str    =    escapeSingleQuote.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
35	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toString(),  out);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  escapeSingleQuote.toString(),  out);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  escapeSingleQuote.toString(),  out);	      String    str    =    escapeSingleQuote.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
36	[BUG]  [BUGGY]  char  str  =  escapeSingleQuote.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  char  str  =  escapeSingleQuote.toString();  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	char  str  =  escapeSingleQuote.toString();	      String    str    =    escapeSingleQuote.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
37	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  out);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  escapeSingleQuote(out,  out);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  escapeSingleQuote(out,  out);	      String    str    =    escapeSingleQuote(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
38	[BUG]  [BUGGY]  out.write('u000'  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write('u000'  +  hex(ch));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write('u000'  +  hex(ch));	      out.write(   "u   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
39	[BUG]  [BUGGY]  out.write( "u0000 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write( "u0000 "  +  hex(ch));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write( "u0000 "  +  hex(ch));	      out.write(   "u   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
40	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  out.charAt(0)  ==  'n')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  out.charAt(0)  ==  'n')  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  out.charAt(0)  ==  'n')  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
41	[BUG]  [BUGGY]  String  str  =  out.toCharArray();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  out.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  out.toCharArray();	      String    str    =    escapeSingleQuote.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
42	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write( "u "  +  hex(ch));  }  else  {  out.write('u "  +  hex(ch));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(escapeSingleQuote)  {  out.write( "u "  +  hex(ch));  }  else  {  out.write('u "  +  hex(ch));  }  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(escapeSingleQuote)  {  out.write( "u "  +  hex(ch));  }  else  {  out.write('u "  +  hex(ch));  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
43	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write( "u "  +  str.charAt(0));  }  else  {  out.write( "u "  +  hex(ch));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(escapeSingleQuote)  {  out.write( "u "  +  str.charAt(0));  }  else  {  out.write( "u "  +  hex(ch));  }  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(escapeSingleQuote)  {  out.write( "u "  +  str.charAt(0));  }  else  {  out.write( "u "  +  hex(ch));  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
44	[BUG]  [BUGGY]  String  str  =  out.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  out.toString();  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  out.toString();	      String    str    =    escapeSingleQuote.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
45	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toString(out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  escapeSingleQuote.toString(out,  str);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  escapeSingleQuote.toString(out,  str);	      String    str    =    escapeSingleQuote.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
46	[BUG]  [BUGGY]  out.write('u000'  +  str.charAt(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write('u000'  +  str.charAt(0));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write('u000'  +  str.charAt(0));	      out.write(   "u   "    +    str.charAt(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
47	[BUG]  [BUGGY]  out.write( "u00 "  +  str.charAt(1));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  out.write( "u00 "  +  str.charAt(1));  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	out.write( "u00 "  +  str.charAt(1));	      out.write(   "u   "    +    str.charAt(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
48	[BUG]  [BUGGY]  if(out  ==  null  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(out  ==  null  ||  escapeSingleQuote)  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(out  ==  null  ||  escapeSingleQuote)  {	  if(str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
49	[BUG]  [BUGGY]  OutputStream  str  =  out.readLine(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  out.readLine(),  escapeSingleQuote);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  out.readLine(),  escapeSingleQuote);	      OutputStream    str    =    out.readLine();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
50	[BUG]  [BUGGY]  OutputStream  str  =  out.readLine()  &&  escapeSingleQuote;  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  out.readLine()  &&  escapeSingleQuote;  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  out.readLine()  &&  escapeSingleQuote;	      OutputStream    str    =    out.readLine();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
51	[BUG]  [BUGGY]  OutputStream  str  =  out.readLine(),  escapeSingleQuote;  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  out.readLine(),  escapeSingleQuote;  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  out.readLine(),  escapeSingleQuote;	      OutputStream    str    =    out.readLine();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
52	[BUG]  [BUGGY]  OutputStream  str  =  out.toByteArray();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  out.toByteArray();  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  out.toByteArray();	      OutputStream    str    =    out.getOutputStream();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
53	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(escapeSingleQuote)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(escapeSingleQuote)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
54	[BUG]  [BUGGY]  CharSequence  str  =  str.charAt(0);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  CharSequence  str  =  str.charAt(0);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	CharSequence  str  =  str.charAt(0);	      char    str    =    str.charAt(0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
55	[BUG]  [BUGGY]  String  str  =  str.charAt(1);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  String  str  =  str.charAt(1);  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	String  str  =  str.charAt(1);	      char    str    =    str.charAt(0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
56	[BUG]  [BUGGY]  OutputStream  str  =  this.out.readLine();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  this.out.readLine();  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  this.out.readLine();	      OutputStream    str    =    out.readLine();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
57	[BUG]  [BUGGY]  OutputStream  str  =  getStyle().readLine();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  getStyle().readLine();  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  getStyle().readLine();	      OutputStream    str    =    out.readLine();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
58	[BUG]  [BUGGY]  OutputStream  str  =  out.getLine();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  OutputStream  str  =  out.getLine();  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	OutputStream  str  =  out.getLine();	      OutputStream    str    =    out.readLine();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
59	[BUG]  [BUGGY]  char  str  =  escapeSingleQuote.toCharArray();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  char  str  =  escapeSingleQuote.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	char  str  =  escapeSingleQuote.toCharArray();	      String    str    =    escapeSingleQuote.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
60	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  out.charAt(0)  ==  '-')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  out.charAt(0)  ==  '-')  {  [BUGGY]    return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	182	182	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  out.charAt(0)  ==  '-')  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
