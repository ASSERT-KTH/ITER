bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()  ==  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  if(escapeSingleQuotes  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(escapeSingleQuotes  ==  null  ||  str.length()  ==  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(escapeSingleQuotes  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()!=  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()!=  0)  {	  if(str    ==    null    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length());	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str  ==  null  ||  str.length()  >=  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  escapeSingleQuotes,  0);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String  str  =  escapeJavaStyleString(str,  escapeSingleQuotes,  0);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String  str  =  escapeJavaStyleString(str,  escapeSingleQuotes,  0);	      String    str    =    escapeJavaStyleString(str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  escapeSingleQuotes,  true);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String  str  =  escapeJavaStyleString(str,  escapeSingleQuotes,  true);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String  str  =  escapeJavaStyleString(str,  escapeSingleQuotes,  true);	      String    str    =    escapeJavaStyleString(str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  escapeSingleQuotes,  false);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String  str  =  escapeJavaStyleString(str,  escapeSingleQuotes,  false);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String  str  =  escapeJavaStyleString(str,  escapeSingleQuotes,  false);	      String    str    =    escapeJavaStyleString(str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String[]  CSV_DELIMITER  =  str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String[]  CSV_DELIMITER  =  str.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  CSV_DELIMITER  =  escapeSingleQuotes.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  String  CSV_DELIMITER  =  str.toCharArray();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String  CSV_DELIMITER  =  str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String  CSV_DELIMITER  =  str.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  String[]  str  =  str.toCharArray();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String[]  str  =  str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String[]  str  =  str.toCharArray();	      char[]    str    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  char[]  str  =  escapeSingleQuotes.toCharArray();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  str  =  escapeSingleQuotes.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  str  =  escapeSingleQuotes.toCharArray();	      char[]    str    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  char[]  str  =  CSV_DELIMITER.toCharArray();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  str  =  CSV_DELIMITER.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  str  =  CSV_DELIMITER.toCharArray();	      char[]    str    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String[]  CSV_QUOTE_STR  =  str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String[]  CSV_QUOTE_STR  =  str.toCharArray();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  escapeSingleQuotes.toCharArray();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  CSV_QUOTE_STR  =  escapeSingleQuotes.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  CSV_QUOTE_STR  =  escapeSingleQuotes.toCharArray();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  String[]  CSV_QUOTE_STR  =  str.trim().toCharArray();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String[]  CSV_QUOTE_STR  =  str.trim().toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String[]  CSV_QUOTE_STR  =  str.trim().toCharArray();	      char[]    CSV_QUOTE_STR    =    str.trim().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str.trim().toCharArray(escapeSingleQuotes);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  CSV_QUOTE_STR  =  str.trim().toCharArray(escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  CSV_QUOTE_STR  =  str.trim().toCharArray(escapeSingleQuotes);	      char[]    CSV_QUOTE_STR    =    str.trim().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str!=  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    str.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  String  str  =  escapeSingleQuotes(str);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String  str  =  escapeSingleQuotes(str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String  str  =  escapeSingleQuotes(str);	      String    str    =    escapeJavaStyleString(str);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  char  str  =  escapeJavaStyleString(str);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char  str  =  escapeJavaStyleString(str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char  str  =  escapeJavaStyleString(str);	      String    str    =    escapeJavaStyleString(str);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String  str  =  escapeJavaStyleString(str.substring(0,  str.length()  -  1));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String  str  =  escapeJavaStyleString(str.substring(0,  str.length()  -  1));	      String    str    =    escapeJavaStyleString(str);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE.toCharArray();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  CSV_DELIMITER  =  CSV_QUOTE.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  2);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  2);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  2);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.equals(escapeSingleQuotes))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.equals(escapeSingleQuotes))  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ||  str.equals(escapeSingleQuotes))  {	  if(str    ==    null    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str  ==  null?  null  :  str.toCharArray();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  CSV_QUOTE_STR  =  str  ==  null?  null  :  str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  CSV_QUOTE_STR  =  str  ==  null?  null  :  str.toCharArray();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str.toCharArray()  +  escapeSingleQuotes;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  CSV_QUOTE_STR  =  str.toCharArray()  +  escapeSingleQuotes;  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  CSV_QUOTE_STR  =  str.toCharArray()  +  escapeSingleQuotes;	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()  >>  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str  ==  null  ||  str.length()  >>  0)  {	  if(str    ==    null    ||    str.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String  str  =  escapeJavaStyleString(str,  false);	      String    str    =    escapeJavaStyleString(str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  char[]  str  =  CSV_SEARCH_CHARS.toCharArray();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  str  =  CSV_SEARCH_CHARS.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  str  =  CSV_SEARCH_CHARS.toCharArray();	      char[]    str    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
42	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str.trim().escapeSingleQuotes();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  CSV_QUOTE_STR  =  str.trim().escapeSingleQuotes();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  CSV_QUOTE_STR  =  str.trim().escapeSingleQuotes();	      char[]    CSV_QUOTE_STR    =    str.trim().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  char[]  CSV_QUOTE_STR  =  str.trim();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  CSV_QUOTE_STR  =  str.trim();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  CSV_QUOTE_STR  =  str.trim();	      char[]    CSV_QUOTE_STR    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str  ==  null  ||  str.length()  <  =  0)  {	  if(str    ==    null    ||    str.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  CSV_DELIMITER  =  CSV_QUOTE_STR.toCharArray();	      char[]    CSV_DELIMITER    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
47	[BUG]  [BUGGY]  char[]  str  =  CSV_QUOTE_STR.toCharArray();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  char[]  str  =  CSV_QUOTE_STR.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	char[]  str  =  CSV_QUOTE_STR.toCharArray();	      char[]    str    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  0);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  String  str  =  escapeJavaStyleString(str,  0);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	String  str  =  escapeJavaStyleString(str,  0);	      String    str    =    escapeJavaStyleString(str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
49	[BUG]  [BUGGY]  if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	155	155	1	replace	if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
