bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.write('n',  str.length()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  str.length()  +  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  str.length()  +  1);	  out.write('n',    str.length()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
2	[BUG]  [BUGGY]  out.write('N',  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('N',  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('N',  str.length());	  out.write('n',    str.length()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
3	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(out,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeJavaStyleString(out,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeJavaStyleString(out,  str,  escapeSingleQuote);	  String    str    =    escapeJavaStyleString(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
4	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(out,  str.length(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeJavaStyleString(out,  str.length(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeJavaStyleString(out,  str.length(),  escapeSingleQuote);	  String    str    =    escapeJavaStyleString(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
5	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(out,  str,  escapeSINGleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeJavaStyleString(out,  str,  escapeSINGleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeJavaStyleString(out,  str,  escapeSINGleQuote);	  String    str    =    escapeJavaStyleString(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
6	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(str,  out,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(str,  out,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(str,  out,  escapeSingleQuote);	  String    str    =    escapeSingleQuote(str,    out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
7	[BUG]  [BUGGY]  CharSequence  str  =  escapeSingleQuote(out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  CharSequence  str  =  escapeSingleQuote(out,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	CharSequence  str  =  escapeSingleQuote(out,  str);	  String    str    =    escapeSingleQuote(str,    out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
8	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str,  ch);	  String    str    =    escapeSingleQuote(out,    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
9	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  ch,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  ch,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  ch,  escapeSingleQuote);	  String    str    =    escapeSingleQuote(out,    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
10	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str.length(),  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str.length(),  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str.length(),  ch);	  String    str    =    escapeSingleQuote(out,    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
11	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ||  out.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ||  out.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  escapeSingleQuote  ||  out.length()!=  0)  {	  if(escapeSingleQuote    ||    out.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
12	[BUG]  [BUGGY]  if(out,  escapeSingleQuote  ||  out.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out,  escapeSingleQuote  ||  out.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out,  escapeSingleQuote  ||  out.length()!=  0)  {	  if(escapeSingleQuote    ||    out.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
13	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getPath(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getPath(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getPath(),  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.getPath());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
14	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getPath()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getPath()  +  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getPath()  +  1);	  OutputStream    out    =    new    FileOutputStream(str.getPath());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
15	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str,  escapeSingleQuote);	  OutputStream    out    =    getOutputStream(out,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
16	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(str,  escapeSingleQuote);	  OutputStream    out    =    getOutputStream(out,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
17	[BUG]  [BUGGY]  out  =  getOutputStream(out,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out  =  getOutputStream(out,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out  =  getOutputStream(out,  str,  escapeSingleQuote);	  OutputStream    out    =    getOutputStream(out,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
18	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  -  1,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  -  1,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length()  -  1,  str,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.length()    -    1,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
19	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  +  1,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  +  1,  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length()  +  1,  str.length());	  OutputStream    out    =    new    FileOutputStream(str.length()    -    1,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
20	[BUG]  [BUGGY]  String  str  =  out.toCharArray(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  out.toCharArray(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  out.toCharArray(),  escapeSingleQuote);	  String    str    =    escapeSingleQuote.toCharArray(),    out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
21	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(),  out,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(),  out,  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toCharArray(),  out,  ch);	  String    str    =    escapeSingleQuote.toCharArray(),    out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
22	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(),  out,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(),  out,  false);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toCharArray(),  out,  false);	  String    str    =    escapeSingleQuote.toCharArray(),    out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
23	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toString(),  out);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toString(),  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toString(),  out);	  String    str    =    escapeSingleQuote.toCharArray(),    out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
24	[BUG]  [BUGGY]  out.write('n',  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  str,  escapeSingleQuote);	  out.write('n',    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
25	[BUG]  [BUGGY]  out.write('n',  str.length()  -  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  str.length()  -  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  str.length()  -  escapeSingleQuote);	  out.write('n',    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
26	[BUG]  [BUGGY]  out.write(ch,  'n',  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(ch,  'n',  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(ch,  'n',  escapeSingleQuote);	  out.write('n',    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
27	[BUG]  [BUGGY]  out.write(str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(str,  escapeSingleQuote);	  out.write('n',    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
28	[BUG]  [BUGGY]  if(out  ==  null  ||  escapeSingleQuote.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  escapeSingleQuote.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  escapeSingleQuote.length()  ==  0)  {	  if(escapeSingleQuote    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
29	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ==  null  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ==  null  ||  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  escapeSingleQuote  ==  null  ||  out.length()  ==  0)  {	  if(escapeSingleQuote    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
30	[BUG]  [BUGGY]  if(escapeSingleQuote  ==  null  ||  out.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ==  null  ||  out.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ==  null  ||  out.length()!=  0)  {	  if(escapeSingleQuote    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
31	[BUG]  [BUGGY]  if(!escapeSingleQuote  &&  out.length()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(!escapeSingleQuote  &&  out.length()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(!escapeSingleQuote  &&  out.length()  >  0)  {	  if(!escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
32	[BUG]  [BUGGY]  if(!escapeSingleQuote  &&  out.charAt(str.length()  -  1)!=  'n')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(!escapeSingleQuote  &&  out.charAt(str.length()  -  1)!=  'n')  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(!escapeSingleQuote  &&  out.charAt(str.length()  -  1)!=  'n')  {	  if(!escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
33	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  str.length());	  OutputStream    out    =    new    FileOutputStream(str.length()    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
34	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str.length(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str.length(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str.length(),  escapeSingleQuote);	  String    str    =    escapeSingleQuote(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
35	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str.length()  -  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str.length()  -  1);	  String    str    =    escapeSingleQuote(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
36	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str.length()  -  1,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str.length()  -  1,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str.length()  -  1,  escapeSingleQuote);	  String    str    =    escapeSingleQuote(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
37	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str.substring(0,  str.length()  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str.substring(0,  str.length()  -  1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str.substring(0,  str.length()  -  1));	  String    str    =    escapeSingleQuote(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
38	[BUG]  [BUGGY]  char  str  =  escapeSingleQuote(out);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  char  str  =  escapeSingleQuote(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	char  str  =  escapeSingleQuote(out);	  char    str    =    escapeSingleQuote(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
39	[BUG]  [BUGGY]  Char  str  =  escapeSingleQuote(out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  Char  str  =  escapeSingleQuote(out,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	Char  str  =  escapeSingleQuote(out,  str);	  char    str    =    escapeSingleQuote(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
40	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getName(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getName(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getName(),  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
41	[BUG]  [BUGGY]  out.write('n',  str.length()  +  1,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  str.length()  +  1,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  str.length()  +  1,  escapeSingleQuote);	  out.write('n',    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
42	[BUG]  [BUGGY]  if(out  ==  null  ||  out  ==  null  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  out  ==  null  ||  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  out  ==  null  ||  out.length()  ==  0)  {	  if(out    ==    null    ||    str    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
43	[BUG]  [BUGGY]  if(str  ==  null  ||  out  ==  null  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  out  ==  null  ||  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  out  ==  null  ||  out.length()  ==  0)  {	  if(out    ==    null    ||    str    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
44	[BUG]  [BUGGY]  if(out  ==  null  ||  str  ==  null  ||  out.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  str  ==  null  ||  out.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  str  ==  null  ||  out.length()!=  0)  {	  if(out    ==    null    ||    str    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
45	[BUG]  [BUGGY]  out.write('f',  'f');  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('f',  'f');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('f',  'f');	  out.write('ufffd',    'ufffd');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
46	[BUG]  [BUGGY]  out.write('0',  '0');  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('0',  '0');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('0',  '0');	  out.write('ufffd',    'ufffd');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
47	[BUG]  [BUGGY]  out.write('ufffd',  'p');  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('ufffd',  'p');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('ufffd',  'p');	  out.write('ufffd',    'ufffd');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
48	[BUG]  [BUGGY]  out.write('/',  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('/',  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('/',  str.length());	  out.write('/');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
49	[BUG]  [BUGGY]  out.write('/',  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('/',  str.length()  -  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('/',  str.length()  -  1);	  out.write('/');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
50	[BUG]  [BUGGY]  out.write('/',  str.length()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('/',  str.length()  -  2);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('/',  str.length()  -  2);	  out.write('/');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
51	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str);	  OutputStream    out    =    new    FileOutputStream(escapeSingleQuote,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
52	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(escapeSingleQuote,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(escapeSingleQuote,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(escapeSingleQuote,  str,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(escapeSingleQuote,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
53	[BUG]  [BUGGY]  out  =  new  FileOutputStream(str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out  =  new  FileOutputStream(str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out  =  new  FileOutputStream(str,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(escapeSingleQuote,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
54	[BUG]  [BUGGY]  out.write(ch,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(ch,  escapeSingleQuote);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(ch,  escapeSingleQuote);	  out.write(ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
55	[BUG]  [BUGGY]  out.write(cSV_DELIMITER);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(cSV_DELIMITER);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(cSV_DELIMITER);	  out.write(ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
56	[BUG]  [BUGGY]  out.write(cSV_DELIMITER,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(cSV_DELIMITER,  ch);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(cSV_DELIMITER,  ch);	  out.write(ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
57	[BUG]  [BUGGY]  out.write(cSV_DELIMITER,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(cSV_DELIMITER,  str);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(cSV_DELIMITER,  str);	  out.write(ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
58	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.toString(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.toString(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.toString(),  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
59	[BUG]  [BUGGY]  out  =  getOutputStream(str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out  =  getOutputStream(str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out  =  getOutputStream(str,  escapeSingleQuote);	  OutputStream    out    =    getOutputStream(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
60	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath()  +  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath()  +  2);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath()  +  2);	  OutputStream    out    =    new    FileOutputStream(str.getAbsolutePath()    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
61	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {	  if(out    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
62	[BUG]  [BUGGY]  if(str  ==  null  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  out.length()  ==  0)  {	  if(out    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
63	[BUG]  [BUGGY]  if(out  ==  null  ||  str.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  str.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  str.length()!=  0)  {	  if(out    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
64	[BUG]  [BUGGY]  if(escapeSingleQuote  ==  null  ||  str  ==  null  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ==  null  ||  str  ==  null  ||  escapeSingleQuote)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ==  null  ||  str  ==  null  ||  escapeSingleQuote)  {	  if(out    ==    null    ||    str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
65	[BUG]  [BUGGY]  if(escapeSingleQuote  ==  null  ||  str  ==  null  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ==  null  ||  str  ==  null  ||  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ==  null  ||  str  ==  null  ||  out.length()  ==  0)  {	  if(out    ==    null    ||    str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
66	[BUG]  [BUGGY]  char  ch  =  str.charAt(i);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  char  ch  =  str.charAt(i);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	char  ch  =  str.charAt(i);	  char    ch    =    str.charAt(0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
67	[BUG]  [BUGGY]  char  ch  =  str.charAt(0),  escapeSingleQuote;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  char  ch  =  str.charAt(0),  escapeSingleQuote;  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	char  ch  =  str.charAt(0),  escapeSingleQuote;	  char    ch    =    str.charAt(0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
68	[BUG]  [BUGGY]  char  ch  =  str.charAt(0),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  char  ch  =  str.charAt(0),  escapeSingleQuote);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	char  ch  =  str.charAt(0),  escapeSingleQuote);	  char    ch    =    str.charAt(0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
69	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.length()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.length()  +  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.length()  +  1);	  OutputStream    out    =    new    FileOutputStream(str.length(),    escapeSingleQuote,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
70	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.length()  -  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.length()  -  1);	  OutputStream    out    =    new    FileOutputStream(str.length(),    escapeSingleQuote,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
71	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.length()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.length()  -  2);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.length()  -  2);	  OutputStream    out    =    new    FileOutputStream(str.length(),    escapeSingleQuote,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
72	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.charAt(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.charAt(0));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str.charAt(0));	  OutputStream    out    =    new    FileOutputStream(str.length(),    escapeSingleQuote,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
73	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(out,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toCharArray(out,  str);	  String    str    =    escapeSingleQuote.toCharArray(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
74	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toCharArray(str);	  String    str    =    escapeSingleQuote.toCharArray(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
75	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toCharArray(str,  escapeSingleQuote);	  String    str    =    escapeSingleQuote.toCharArray(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
76	[BUG]  [BUGGY]  String  str  =  out.toCharArray(escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  out.toCharArray(escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  out.toCharArray(escapeSingleQuote);	  String    str    =    escapeSingleQuote.toCharArray(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
77	[BUG]  [BUGGY]  char  str  =  escapeSingleQuote(out,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  char  str  =  escapeSingleQuote(out,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	char  str  =  escapeSingleQuote(out,  str,  escapeSingleQuote);	  char    str    =    escapeSingleQuote(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
78	[BUG]  [BUGGY]  Char  str  =  escapeSingleQuote(out,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  Char  str  =  escapeSingleQuote(out,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	Char  str  =  escapeSingleQuote(out,  str,  escapeSingleQuote);	  char    str    =    escapeSingleQuote(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
79	[BUG]  [BUGGY]  Character  str  =  escapeSingleQuote(out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  Character  str  =  escapeSingleQuote(out,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	Character  str  =  escapeSingleQuote(out,  str);	  char    str    =    escapeSingleQuote(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
80	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  charEscapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  charEscapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str,  charEscapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
81	[BUG]  [BUGGY]  if(escapeSingleQuote  ==  false)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ==  false)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ==  false)  {	  if(escapeSingleQuote    ==    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
82	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  escapeSingleQuote  ==  null)  {	  if(escapeSingleQuote    ==    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
83	[BUG]  [BUGGY]  if(out  ==  null  ||  escapeSingleQuote  ||  str.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  escapeSingleQuote  ||  str.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  escapeSingleQuote  ||  str.length()!=  0)  {	  if(out    ==    null    ||    escapeSingleQuote    ||    out.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
84	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  CSV_DELIMITER);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  CSV_DELIMITER);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  CSV_DELIMITER);	  OutputStream    out    =    new    FileOutputStream(str.length(),    escapeSingleQuote,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
85	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  str,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.length(),    escapeSingleQuote,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
86	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  cache);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  cache);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  cache);	  OutputStream    out    =    new    FileOutputStream(str.length(),    escapeSingleQuote,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
87	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  str.length()  +  1,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  str.length()  +  1,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  str.length()  +  1,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.length()    +    1,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
88	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  str.length(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  str.length(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  str.length(),  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.length()    +    1,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
89	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  *  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  *  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length()  *  1);	  OutputStream    out    =    new    FileOutputStream(str.length()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
90	[BUG]  [BUGGY]  Char  str  =  escapeSingleQuote.toCharArray();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  Char  str  =  escapeSingleQuote.toCharArray();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	Char  str  =  escapeSingleQuote.toCharArray();	  char    str    =    escapeSingleQuote.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
91	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  str  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ||  str  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ||  str  ==  null)  {	  if(escapeSingleQuote    ||    out!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
92	[BUG]  [BUGGY]  if(out  ||  escapeSingleQuote!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ||  escapeSingleQuote!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ||  escapeSingleQuote!=  null)  {	  if(escapeSingleQuote    ||    out!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
93	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(out,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
94	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.length(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.length(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.length(),  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(out,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
95	[BUG]  [BUGGY]  out.write(':',  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(':',  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(':',  str.length());	  out.write(':');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
96	[BUG]  [BUGGY]  out.write(':',  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(':',  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(':',  str);	  out.write(':');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
97	[BUG]  [BUGGY]  out.write(':',  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(':',  str.length()  -  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(':',  str.length()  -  1);	  out.write(':');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
98	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.length());	  OutputStream    out    =    new    FileOutputStream(out.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
99	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getBytes());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getBytes());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.getBytes());	  OutputStream    out    =    new    FileOutputStream(out.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
100	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.length()  -  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.length()  -  1);	  OutputStream    out    =    new    FileOutputStream(out.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
101	[BUG]  [BUGGY]  if(out  ==  null  ||  out.length()  >=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  out.length()  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  out.length()  >=  0)  {	  if(out    ==    null    ||    out.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
102	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str.length);	  OutputStream    out    =    getOutputStream(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
103	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.charAt(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.charAt(0));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str.charAt(0));	  OutputStream    out    =    getOutputStream(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
104	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  cache,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  cache,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  cache,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.length(),    str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
105	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  str,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.getAbsolutePath(),    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
106	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  escapeSingleQuote,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  escapeSingleQuote,  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  escapeSingleQuote,  str.length());	  OutputStream    out    =    new    FileOutputStream(str.getAbsolutePath(),    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
107	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getAbsolutePath(),  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getAbsolutePath(),  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.getAbsolutePath(),  str,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.getAbsolutePath(),    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
108	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getAbsolutePath(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getAbsolutePath(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.getAbsolutePath(),  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.getAbsolutePath(),    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
109	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getPath());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getPath());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.getPath());	  OutputStream    out    =    new    FileOutputStream(out.getAbsolutePath());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
110	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getAbsolutePath(),  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getAbsolutePath(),  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.getAbsolutePath(),  str);	  OutputStream    out    =    new    FileOutputStream(out.getAbsolutePath());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
111	[BUG]  [BUGGY]  String  str  =  out.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  out.toString();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  out.toString();	  String    str    =    out.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
112	[BUG]  [BUGGY]  String  str  =  out.toCharArray()  +  escapeSingleQuote;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  out.toCharArray()  +  escapeSingleQuote;  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  out.toCharArray()  +  escapeSingleQuote;	  String    str    =    out.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
113	[BUG]  [BUGGY]  out.write('0',  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('0',  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('0',  str.length());	  out.write('n',    str.length()    -    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
114	[BUG]  [BUGGY]  if(out!=  null  ||  str.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out!=  null  ||  str.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out!=  null  ||  str.length()  ==  0)  {	  if(out!=    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
115	[BUG]  [BUGGY]  out.write('n',  '/');  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  '/');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  '/');	  out.write('n',    'ufffd');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
116	[BUG]  [BUGGY]  out.write('n',  'utf-8');  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  'utf-8');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  'utf-8');	  out.write('n',    'ufffd');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
117	[BUG]  [BUGGY]  out.write('n',  'h');  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  'h');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  'h');	  out.write('n',    'ufffd');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
118	[BUG]  [BUGGY]  if(escapeSingleQuote  ==  null  ||  str.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ==  null  ||  str.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
119	[BUG]  [BUGGY]  out.write(',',  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(',',  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(',',  escapeSingleQuote);	  out.write(',');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
120	[BUG]  [BUGGY]  out.write(',',  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(',',  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(',',  str.length());	  out.write(',');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
121	[BUG]  [BUGGY]  out.write(ch,  ',');  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(ch,  ',');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(ch,  ',');	  out.write(',');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
122	[BUG]  [BUGGY]  if(out!=  null  ||  str  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out!=  null  ||  str  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out!=  null  ||  str  ==  null)  {	  if(str    ==    null    ||    out    ==    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
123	[BUG]  [BUGGY]  if(escapeSingleQuote  &&  out.isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  &&  out.isEmpty())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  &&  out.isEmpty())  {	  if(escapeSingleQuote    ||    out.isEmpty())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
124	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ||  out.isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ||  out.isEmpty())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  escapeSingleQuote  ||  out.isEmpty())  {	  if(escapeSingleQuote    ||    out.isEmpty())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
125	[BUG]  [BUGGY]  if(out.isEmpty()  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out.isEmpty()  ||  escapeSingleQuote)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out.isEmpty()  ||  escapeSingleQuote)  {	  if(escapeSingleQuote    ||    out.isEmpty())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
126	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  str.isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ||  str.isEmpty())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ||  str.isEmpty())  {	  if(escapeSingleQuote    ||    out.isEmpty())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
127	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toString()  + "n ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toString()  + "n ";  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toString()  + "n ";	  String    str    =    escapeSingleQuote.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
128	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toString(out);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toString(out);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toString(out);	  String    str    =    escapeSingleQuote.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
129	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  out.endsWith( "java. "))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ||  out.endsWith( "java. "))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ||  out.endsWith( "java. "))  {	  if(escapeSingleQuote    ||    out.endsWith(   ".java   "))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
130	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  out.endsWith( "java/ "))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ||  out.endsWith( "java/ "))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ||  out.endsWith( "java/ "))  {	  if(escapeSingleQuote    ||    out.endsWith(   ".java   "))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
131	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  out.endsWith( "java "))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ||  out.endsWith( "java "))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ||  out.endsWith( "java "))  {	  if(escapeSingleQuote    ||    out.endsWith(   ".java   "))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
132	[BUG]  [BUGGY]  out.write('  ',  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('  ',  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('  ',  str.length());	  out.write('    ');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
133	[BUG]  [BUGGY]  out.write(ch,'');  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(ch,'');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(ch,'');	  out.write('    ');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
134	[BUG]  [BUGGY]  String  ch  =  str.substring(0,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  ch  =  str.substring(0,  str.length());  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  ch  =  str.substring(0,  str.length());	  String    ch    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
135	[BUG]  [BUGGY]  char  ch  =  str.substring(0,  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  char  ch  =  str.substring(0,  str.length()  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	char  ch  =  str.substring(0,  str.length()  -  1);	  String    ch    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
136	[BUG]  [BUGGY]  String  ch  =  str.substring(0,  str.length()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  ch  =  str.substring(0,  str.length()  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  ch  =  str.substring(0,  str.length()  +  1);	  String    ch    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
137	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  str.charAt(str.length()  -  1)!=  '/')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ||  str.charAt(str.length()  -  1)!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ||  str.charAt(str.length()  -  1)!=  '/')  {	  if(escapeSingleQuote    ||    out.charAt(str.length()    -    1)!=    '/')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
138	[BUG]  [BUGGY]  if(escapeSingleQuote  &&  out.charAt(str.length()  -  1)!=  '/')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  &&  out.charAt(str.length()  -  1)!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  &&  out.charAt(str.length()  -  1)!=  '/')  {	  if(escapeSingleQuote    ||    out.charAt(str.length()    -    1)!=    '/')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
139	[BUG]  [BUGGY]  if(str  ||  escapeSingleQuote.charAt(str.length()  -  1)!=  '/')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ||  escapeSingleQuote.charAt(str.length()  -  1)!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ||  escapeSingleQuote.charAt(str.length()  -  1)!=  '/')  {	  if(escapeSingleQuote    ||    out.charAt(str.length()    -    1)!=    '/')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
140	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  str.length());	  OutputStream    out    =    new    FileOutputStream(str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
141	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  ch);	  OutputStream    out    =    new    FileOutputStream(str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
142	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  0);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  0);	  OutputStream    out    =    new    FileOutputStream(str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
143	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.toString());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.toString());	  OutputStream    out    =    new    FileOutputStream(out,    str.getAbsolutePath());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
144	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getPath());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getPath());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.getPath());	  OutputStream    out    =    new    FileOutputStream(out,    str.getAbsolutePath());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
145	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getAbsolutePath()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getAbsolutePath()  +  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.getAbsolutePath()  +  1);	  OutputStream    out    =    new    FileOutputStream(out,    str.getAbsolutePath());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
146	[BUG]  [BUGGY]  if(out  ||  escapeSingleQuote  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ||  escapeSingleQuote  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ||  escapeSingleQuote  ==  null)  {	  if(escapeSingleQuote    ||    out    ==    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
147	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  out,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  out,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  out,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(out.length(),    str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
148	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.length(),  str,  escapeSingleQuote,  CSV_DELIMITER);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.length(),  str,  escapeSingleQuote,  CSV_DELIMITER);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.length(),  str,  escapeSingleQuote,  CSV_DELIMITER);	  OutputStream    out    =    new    FileOutputStream(out.length(),    str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
149	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.length(),  str,  escapeSingleQuote,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.length(),  str,  escapeSingleQuote,  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.length(),  str,  escapeSingleQuote,  ch);	  OutputStream    out    =    new    FileOutputStream(out.length(),    str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
150	[BUG]  [BUGGY]  if(out  ==  null  ||  escapeSingleQuote  ||  str.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  escapeSingleQuote  ||  str.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  escapeSingleQuote  ||  str.length()  ==  0)  {	  if(out    ==    null    ||    escapeSingleQuote    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
151	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuote  ||  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  escapeSingleQuote  ||  out.length()  ==  0)  {	  if(out    ==    null    ||    escapeSingleQuote    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
152	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  escapeSingleQuote);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str,  escapeSingleQuote);	  String    str    =    escapeSingleQuote(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
153	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  escapeSingleValue);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  escapeSingleValue);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str,  escapeSingleValue);	  String    str    =    escapeSingleQuote(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
154	[BUG]  [BUGGY]  out.write('.',  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('.',  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('.',  str.length());	  out.write('ufffd',    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
155	[BUG]  [BUGGY]  out.write('f',  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('f',  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('f',  str.length());	  out.write('ufffd',    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
156	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes(),  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.getBytes());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
157	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes( "UTF-8 "));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes( "UTF-8 "));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes( "UTF-8 "));	  OutputStream    out    =    new    FileOutputStream(str.getBytes());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
158	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(),  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(),  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes(),  str.length());	  OutputStream    out    =    new    FileOutputStream(str.getBytes());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
159	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(str,  escapeSingleQuote,  out);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(str,  escapeSingleQuote,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(str,  escapeSingleQuote,  out);	  String    str    =    escapeSingleQuote(str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
160	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(str,  escapeSingleQuote,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(str,  escapeSingleQuote,  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(str,  escapeSingleQuote,  ch);	  String    str    =    escapeSingleQuote(str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
161	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  -  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str.length()  -  1);	  OutputStream    out    =    getOutputStream(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
162	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  -  1,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  -  1,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str.length()  -  1,  escapeSingleQuote);	  OutputStream    out    =    getOutputStream(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
163	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  -  2);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str.length()  -  2);	  OutputStream    out    =    getOutputStream(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
164	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  +  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str.length()  +  1);	  OutputStream    out    =    getOutputStream(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
165	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  str.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ||  str.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ||  str.length()  ==  0)  {	  if(escapeSingleQuote    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
166	[BUG]  [BUGGY]  if(out,  escapeSingleQuote  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out,  escapeSingleQuote  ||  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out,  escapeSingleQuote  ||  out.length()  ==  0)  {	  if(escapeSingleQuote    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
167	[BUG]  [BUGGY]  out.write(',',  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(',',  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(',',  ch);	  out.write(',');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
168	[BUG]  [BUGGY]  if(out  ==  null  ||  escapeSingleQuote  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  escapeSingleQuote  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  escapeSingleQuote  ==  null)  {	  if(escapeSingleQuote    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
169	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(escapeJavaStyleString,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(escapeJavaStyleString,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(escapeJavaStyleString,  str);	  OutputStream    out    =    new    FileOutputStream(escapeSingleQuote,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
170	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  -  4);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  -  4);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str.length()  -  4);	  OutputStream    out    =    getOutputStream(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
171	[BUG]  [BUGGY]  out.write('n',  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  str);	  out.write('n',    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
172	[BUG]  [BUGGY]  if(out  ==  null  ||!escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||!escapeSingleQuote)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||!escapeSingleQuote)  {	  if(!escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
173	[BUG]  [BUGGY]  if(!escapeSingleQuote  &&  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(!escapeSingleQuote  &&  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(!escapeSingleQuote  &&  out.length()  ==  0)  {	  if(!escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
174	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.toString());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.toString());	  OutputStream    out    =    new    FileOutputStream(str.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
175	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getAbsolutePath(),  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getAbsolutePath(),  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.getAbsolutePath(),  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.getAbsolutePath(),    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
176	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  escapeSingLEQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  escapeSingLEQuote);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str,  escapeSingLEQuote);	  String    str    =    escapeSingleQuote(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
177	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  false);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str,  false);	  String    str    =    escapeSingleQuote(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
178	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  ch,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  ch,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str,  ch,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
179	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toString(out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toString(out,  str);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toString(out,  str);	  String    str    =    escapeSingleQuote.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
180	[BUG]  [BUGGY]  if(out  ==  null  ||  out!=  null  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  out!=  null  ||  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  out!=  null  ||  out.length()  ==  0)  {	  if(out    ==    null    ||    str    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
181	[BUG]  [BUGGY]  OutputStream  out  =  escapeSingleQuote?  getOutputStream(out):  getOutputStream(str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  escapeSingleQuote?  getOutputStream(out):  getOutputStream(str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  escapeSingleQuote?  getOutputStream(out):  getOutputStream(str);	  OutputStream    out    =    getOutputStream(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
182	[BUG]  [BUGGY]  OutputStream  out  =  escapeSingleQuote?  getOutputStream(str):  getOutputStream(out);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  escapeSingleQuote?  getOutputStream(str):  getOutputStream(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  escapeSingleQuote?  getOutputStream(str):  getOutputStream(out);	  OutputStream    out    =    getOutputStream(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
183	[BUG]  [BUGGY]  if(out  ==  null  ||  out  ==  null  ||  str  ==  null  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  out  ==  null  ||  str  ==  null  ||  escapeSingleQuote)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  out  ==  null  ||  str  ==  null  ||  escapeSingleQuote)  {	  if(out    ==    null    ||    str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
184	[BUG]  [BUGGY]  if(out  ==  null  ||  str!=  null  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  str!=  null  ||  escapeSingleQuote)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  str!=  null  ||  escapeSingleQuote)  {	  if(out    ==    null    ||    str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
185	[BUG]  [BUGGY]  if(out!=  null  ||  str  ==  null  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out!=  null  ||  str  ==  null  ||  escapeSingleQuote)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out!=  null  ||  str  ==  null  ||  escapeSingleQuote)  {	  if(out    ==    null    ||    str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
186	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out);	  OutputStream    out    =    new    FileOutputStream(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
187	[BUG]  [BUGGY]  out.write('n',  '-');  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  '-');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  '-');	  out.write('n',    'ufffd');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
188	[BUG]  [BUGGY]  out.write('n',  'p');  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  'p');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  'p');	  out.write('n',    'ufffd');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
189	[BUG]  [BUGGY]  if(out  ||  escapeSingleQuote.isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ||  escapeSingleQuote.isEmpty())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ||  escapeSingleQuote.isEmpty())  {	  if(escapeSingleQuote    ||    out.isEmpty())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
190	[BUG]  [BUGGY]  if(out,  escapeSingleQuote  ||  out.isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out,  escapeSingleQuote  ||  out.isEmpty())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out,  escapeSingleQuote  ||  out.isEmpty())  {	  if(escapeSingleQuote    ||    out.isEmpty())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
191	[BUG]  [BUGGY]  if(out!=  null  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out!=  null  ||  escapeSingleQuote)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out!=  null  ||  escapeSingleQuote)  {	  if(str    ==    null    ||    escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
192	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(out,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(out,  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toCharArray(out,  ch);	  String    str    =    escapeSingleQuote.toCharArray(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
193	[BUG]  [BUGGY]  if(out  ||  escapeSingleQuote!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ||  escapeSingleQuote!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ||  escapeSingleQuote!=  0)  {	  if(escapeSingleQuote    ||    out.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
194	[BUG]  [BUGGY]  if(escapeSingleQuote  &&  out.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  &&  out.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  &&  out.length()!=  0)  {	  if(escapeSingleQuote    ||    out.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
195	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  ch);	  OutputStream    out    =    getOutputStream(out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
196	[BUG]  [BUGGY]  if(escapeSingleQuote  &&  out!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  &&  out!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  &&  out!=  null)  {	  if(escapeSingleQuote    ||    out!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
197	[BUG]  [BUGGY]  out.write('  ',  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('  ',  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('  ',  escapeSingleQuote);	  out.write('    ');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
198	[BUG]  [BUGGY]  if(out!=  null  ||  out.length()  >=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out!=  null  ||  out.length()  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out!=  null  ||  out.length()  >=  0)  {	  if(out!=    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
199	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  -  1,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  -  1,  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length()  -  1,  str.length());	  OutputStream    out    =    new    FileOutputStream(str.length()    -    1,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
200	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(),  out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(),  out,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toCharArray(),  out,  str);	  String    str    =    escapeSingleQuote.toCharArray(),    out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
201	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(),  out,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote.toCharArray(),  out,  null);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote.toCharArray(),  out,  null);	  String    str    =    escapeSingleQuote.toCharArray(),    out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
202	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  +  1,  escapeSingleQuote,  out);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  +  1,  escapeSingleQuote,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length()  +  1,  escapeSingleQuote,  out);	  OutputStream    out    =    new    FileOutputStream(str.length()    +    1,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
203	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str.charAt(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str.charAt(0));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str.charAt(0));	  String    str    =    escapeSingleQuote(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
204	[BUG]  [BUGGY]  if(out  ||  escapeSingleQuote.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ||  escapeSingleQuote.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ||  escapeSingleQuote.length()  ==  0)  {	  if(escapeSingleQuote    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
205	[BUG]  [BUGGY]  if(escapeSingleQuote  &&  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  &&  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  &&  out.length()  ==  0)  {	  if(escapeSingleQuote    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
206	[BUG]  [BUGGY]  if(out  ||  escapeSingleQuote  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ||  escapeSingleQuote  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ||  escapeSingleQuote  ==  0)  {	  if(escapeSingleQuote    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
207	[BUG]  [BUGGY]  if(out  ==  null  ||  out!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  out!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  out!=  null)  {	  if(out    ==    null    ||    str!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
208	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getName());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.getName());	  OutputStream    out    =    new    FileOutputStream(str.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
209	[BUG]  [BUGGY]  String  ch  =  str.substring(0,  str.length())+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  ch  =  str.substring(0,  str.length())+  1;  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  ch  =  str.substring(0,  str.length())+  1;	  String    ch    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
210	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  ch,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  ch,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  ch,  escapeSingleQuote);	  OutputStream    out    =    getOutputStream(out,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
211	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath()  /  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath()  /  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath()  /  1);	  OutputStream    out    =    new    FileOutputStream(str.getAbsolutePath()    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
212	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(ch,  out);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(ch,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(ch,  out);	  String    str    =    escapeSingleQuote(out,    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
213	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  ch);	  OutputStream    out    =    new    FileOutputStream(str.length(),    escapeSingleQuote,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
214	[BUG]  [BUGGY]  char  str  =  escapeSingleQuote.toCharArray(out);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  char  str  =  escapeSingleQuote.toCharArray(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	char  str  =  escapeSingleQuote.toCharArray(out);	  char    str    =    escapeSingleQuote.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
215	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  out.charAt(str.length())!=  '/')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ||  out.charAt(str.length())!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ||  out.charAt(str.length())!=  '/')  {	  if(escapeSingleQuote    ||    out.charAt(str.length()    -    1)!=    '/')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
216	[BUG]  [BUGGY]  if(escapeSingleQuote  &&  out.endsWith( ".java "))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  &&  out.endsWith( ".java "))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  &&  out.endsWith( ".java "))  {	  if(escapeSingleQuote    ||    out.endsWith(   ".java   "))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
217	[BUG]  [BUGGY]  if(out  ||  escapeSingleQuote.endsWith( ".java "))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ||  escapeSingleQuote.endsWith( ".java "))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ||  escapeSingleQuote.endsWith( ".java "))  {	  if(escapeSingleQuote    ||    out.endsWith(   ".java   "))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
218	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getBytes());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getBytes());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.getBytes());	  OutputStream    out    =    new    FileOutputStream(str.getBytes());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
219	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(escapeSingleQuote));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(escapeSingleQuote));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes(escapeSingleQuote));	  OutputStream    out    =    new    FileOutputStream(str.getBytes());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
220	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  CSV_DELIMITER,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  CSV_DELIMITER,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  CSV_DELIMITER,  str,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.length(),    str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
221	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  CSV_DELIMITER,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  CSV_DELIMITER,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  CSV_DELIMITER,  str);	  OutputStream    out    =    getOutputStream(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
222	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  CSV_DELIMITER);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  CSV_DELIMITER);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  CSV_DELIMITER);	  OutputStream    out    =    getOutputStream(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
223	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  SHORT_DESCRIPTOR,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  SHORT_DESCRIPTOR,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  SHORT_DESCRIPTOR,  str);	  OutputStream    out    =    getOutputStream(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
224	[BUG]  [BUGGY]  out.write('/',  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('/',  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('/',  str);	  out.write('/');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
225	[BUG]  [BUGGY]  out.write(':',  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(':',  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(':',  escapeSingleQuote);	  out.write(':');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
226	[BUG]  [BUGGY]  char  ch  =  str.charAt(1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  char  ch  =  str.charAt(1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	char  ch  =  str.charAt(1);	  char    ch    =    str.charAt(0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
227	[BUG]  [BUGGY]  String  ch  =  str.charAt(0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  ch  =  str.charAt(0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  ch  =  str.charAt(0);	  char    ch    =    str.charAt(0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
228	[BUG]  [BUGGY]  if(out  ==  null  ||  out  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  out  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  out  ==  null)  {	  if(str    ==    null    ||    out    ==    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
229	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str.substring(0,  str.length()));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str.substring(0,  str.length()));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str.substring(0,  str.length()));	  String    str    =    escapeSingleQuote(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
230	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str.toCharArray());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str.toCharArray());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str.toCharArray());	  String    str    =    escapeSingleQuote(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
231	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  str.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ||  str.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ||  str.length()!=  0)  {	  if(escapeSingleQuote    ||    out.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
232	[BUG]  [BUGGY]  if(!escapeSingleQuote  &&  out.isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(!escapeSingleQuote  &&  out.isEmpty())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(!escapeSingleQuote  &&  out.isEmpty())  {	  if(!escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
233	[BUG]  [BUGGY]  if(!escapeSingleQuote  &&  out.endsWith( ".java "))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(!escapeSingleQuote  &&  out.endsWith( ".java "))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(!escapeSingleQuote  &&  out.endsWith( ".java "))  {	  if(!escapeSingleQuote)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
234	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.length(),  CSV_DELIMITER,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.length(),  CSV_DELIMITER,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.length(),  CSV_DELIMITER,  str,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(out.length(),    str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
235	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.length(),  str,  escapeSingleQuote,  cache);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.length(),  str,  escapeSingleQuote,  cache);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out.length(),  str,  escapeSingleQuote,  cache);	  OutputStream    out    =    new    FileOutputStream(out.length(),    str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
236	[BUG]  [BUGGY]  out.write(CSV_DELIMITER);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(CSV_DELIMITER);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(CSV_DELIMITER);	  out.write(ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
237	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  *  1,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  *  1,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length()  *  1,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.length()    +    1,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
238	[BUG]  [BUGGY]  if(str  ==  null  ||  out!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  out!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  out!=  null)  {	  if(out    ==    null    ||    str!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
239	[BUG]  [BUGGY]  if(out  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuote)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuote)  {	  if(out    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
240	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuote!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuote!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  escapeSingleQuote!=  null)  {	  if(escapeSingleQuote    ||    out!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
241	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  CSV_DELIMITER);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  CSV_DELIMITER);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str,  escapeSingleQuote,  CSV_DELIMITER);	  OutputStream    out    =    new    FileOutputStream(str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
242	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  CSV_DELIMITER.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  CSV_DELIMITER.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  CSV_DELIMITER.length());	  OutputStream    out    =    new    FileOutputStream(str.length(),    escapeSingleQuote,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
243	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  str.endsWith( ".java "))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  ||  str.endsWith( ".java "))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  ||  str.endsWith( ".java "))  {	  if(escapeSingleQuote    ||    out.endsWith(   ".java   "))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
244	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  -  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.length()  -  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str.length()  -  escapeSingleQuote);	  OutputStream    out    =    getOutputStream(out,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
245	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(str,  ch,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(str,  ch,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(str,  ch,  escapeSingleQuote);	  String    str    =    escapeSingleQuote(str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
246	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  escapeSINGLE_QUOTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(out,  str,  escapeSINGLE_QUOTE);  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(out,  str,  escapeSINGLE_QUOTE);	  String    str    =    escapeSingleQuote(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
247	[BUG]  [BUGGY]  out.write('n',  'a');  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('n',  'a');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('n',  'a');	  out.write('n',    'ufffd');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
248	[BUG]  [BUGGY]  if(escapeSingleQuote  &&  str.charAt(str.length()  -  1)!=  '/')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote  &&  str.charAt(str.length()  -  1)!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote  &&  str.charAt(str.length()  -  1)!=  '/')  {	  if(escapeSingleQuote    ||    out.charAt(str.length()    -    1)!=    '/')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
249	[BUG]  [BUGGY]  if(escapeSingleQuote!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(escapeSingleQuote!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(escapeSingleQuote!=  null)  {	  if(escapeSingleQuote    ==    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
250	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote?  null  :  out.toCharArray();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote?  null  :  out.toCharArray();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote?  null  :  out.toCharArray();	  String    str    =    out.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
251	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote?  out.toCharArray()  :  str;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote?  out.toCharArray()  :  str;  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote?  out.toCharArray()  :  str;	  String    str    =    out.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
252	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(escapeSingleQuote,  CSV_DELIMITER);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(escapeSingleQuote,  CSV_DELIMITER);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(escapeSingleQuote,  CSV_DELIMITER);	  OutputStream    out    =    new    FileOutputStream(escapeSingleQuote,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
253	[BUG]  [BUGGY]  OutputStream  out  =  createOutputStream(out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  createOutputStream(out,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  createOutputStream(out,  str);	  OutputStream    out    =    getOutputStream(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
254	[BUG]  [BUGGY]  CharSequence  str  =  escapeSingleQuote(out);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  CharSequence  str  =  escapeSingleQuote(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	CharSequence  str  =  escapeSingleQuote(out);	  char    str    =    escapeSingleQuote(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
255	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(cSV_DELIMITER,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(cSV_DELIMITER,  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(cSV_DELIMITER,  str);	  OutputStream    out    =    new    FileOutputStream(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
256	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.substring(0,  str.length()  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.substring(0,  str.length()  -  1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str.substring(0,  str.length()  -  1));	  OutputStream    out    =    getOutputStream(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
257	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.substring(0,  str.length()));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(out,  str.substring(0,  str.length()));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  getOutputStream(out,  str.substring(0,  str.length()));	  OutputStream    out    =    getOutputStream(out,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
258	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  CSV_QUOTE_STR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  CSV_QUOTE_STR);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length(),  escapeSingleQuote,  CSV_QUOTE_STR);	  OutputStream    out    =    new    FileOutputStream(str.length(),    escapeSingleQuote,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
259	[BUG]  [BUGGY]  Character  str  =  escapeSingleQuote.toCharArray();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  Character  str  =  escapeSingleQuote.toCharArray();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	Character  str  =  escapeSingleQuote.toCharArray();	  char    str    =    escapeSingleQuote.toCharArray();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
260	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  +  1,  str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.length()  +  1,  str,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.length()  +  1,  str,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.length(),    str,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
261	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getName());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.getName());	  OutputStream    out    =    new    FileOutputStream(out,    str.getAbsolutePath());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
262	[BUG]  [BUGGY]  out.write(',',  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write(',',  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write(',',  str);	  out.write(',');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
263	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  escapeSingleQuote,  CSV_DELIMITER);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  escapeSingleQuote,  CSV_DELIMITER);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  escapeSingleQuote,  CSV_DELIMITER);	  OutputStream    out    =    new    FileOutputStream(str.getAbsolutePath(),    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
264	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  cache,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  cache,  escapeSingleQuote);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  cache,  escapeSingleQuote);	  OutputStream    out    =    new    FileOutputStream(str.getAbsolutePath(),    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
265	[BUG]  [BUGGY]  String  str  =  escapeSingleQuote(str,  out,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeSingleQuote(str,  out,  ch);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeSingleQuote(str,  out,  ch);	  String    str    =    escapeSingleQuote(str,    out);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
266	[BUG]  [BUGGY]  out.write('ufffd',  'a');  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.write('ufffd',  'a');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.write('ufffd',  'a');	  out.write('ufffd',    'ufffd');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
267	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(),  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(),  str);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes(),  str);	  OutputStream    out    =    new    FileOutputStream(str.getBytes());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
268	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(out,  str.substring(0,  str.length()  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeJavaStyleString(out,  str.substring(0,  str.length()  -  1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeJavaStyleString(out,  str.substring(0,  str.length()  -  1));	  String    str    =    escapeJavaStyleString(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
269	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(out,  str.substring(0,  str.length()  -  2));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  String  str  =  escapeJavaStyleString(out,  str.substring(0,  str.length()  -  2));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	String  str  =  escapeJavaStyleString(out,  str.substring(0,  str.length()  -  2));	  String    str    =    escapeJavaStyleString(out,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
270	[BUG]  [BUGGY]  out.append('  ');  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  out.append('  ');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	out.append('  ');	  out.write('    ');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
271	[BUG]  [BUGGY]  if(out  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuote.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuote.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(out  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuote.length()  ==  0)  {	  if(out    ==    null    ||    escapeSingleQuote    ||    out.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
272	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.toString()  + ".js ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.toString()  + ".js ");  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.toString()  + ".js ");	  OutputStream    out    =    new    FileOutputStream(str.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
273	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  str.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath(),  str.length());	  OutputStream    out    =    new    FileOutputStream(str.getAbsolutePath()    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
274	[BUG]  [BUGGY]  if(str  ==  null  ||  out.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  out.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	179	179	1	replace	if(str  ==  null  ||  out.length()!=  0)  {	  if(out    ==    null    ||    out.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
