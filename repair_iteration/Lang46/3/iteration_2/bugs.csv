bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  out.write('');  out.write('/');  }  else  {  out.write(ch);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(str.length()  ==  0)  {  out.write('');  out.write('/');  }  else  {  out.write(ch);  }  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(str.length()  ==  0)  {  out.write('');  out.write('/');  }  else  {  out.write(ch);  }	      out.write('');    out.write('/');    	non-compiled	[CE]  empty  character  literal	3	None	replace
2	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  out.write('');  out.write('/');  }  else  {  break;  }  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(str.length()  ==  0)  {  out.write('');  out.write('/');  }  else  {  break;  }  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(str.length()  ==  0)  {  out.write('');  out.write('/');  }  else  {  break;  }	      out.write('');    out.write('/');    	non-compiled	[CE]  empty  character  literal	3	None	replace
3	[BUG]  [BUGGY]  out.write('-');  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write('-');  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write('-');	      out.write('');    	non-compiled	[CE]  empty  character  literal	1	None	replace
4	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write('');  }  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote)  {  out.write('');  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote)  {  out.write('');  }	  if(escapeSingleQuote)    {    break;    }    else    {    out.write(ch);    }    	non-compiled	[CE]  empty  character  literal	8	None	replace
5	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write('');  }  else  {  out.write(ch);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote)  {  out.write('');  }  else  {  out.write(ch);  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote)  {  out.write('');  }  else  {  out.write(ch);  }	  if(escapeSingleQuote)    {    break;    }    else    {    out.write(ch);    }    	non-compiled	[CE]  empty  character  literal	8	None	replace
6	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write(ch);  }  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote)  {  out.write(ch);  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote)  {  out.write(ch);  }	  if(escapeSingleQuote)    {    break;    }    else    {    out.write(ch);    }    	non-compiled	[CE]  empty  character  literal	8	None	replace
7	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  escapeSingleQuote)  {  break;  }  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote  ||  escapeSingleQuote)  {  break;  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote  ||  escapeSingleQuote)  {  break;  }	  if(escapeSingleQuote)    {    break;    }    	non-compiled	[CE]  empty  character  literal	6	None	replace
8	[BUG]  [BUGGY]  if(!escapeSingleQuote)  {  break;  }  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(!escapeSingleQuote)  {  break;  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(!escapeSingleQuote)  {  break;  }	  if(escapeSingleQuote)    {    break;    }    	non-compiled	[CE]  empty  character  literal	6	None	replace
9	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  else  {  out.write('/');  }  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  else  {  out.write('/');  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  else  {  out.write('/');  }	  if(escapeSingleQuote)    {    out.write('');    out.write('   "');    }    else    {    out.write('');    out.write('/');    }    	non-compiled	[CE]  empty  character  literal	10	None	replace
10	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  else  {  out.write('');  }  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  else  {  out.write('');  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  else  {  out.write('');  }	  if(escapeSingleQuote)    {    out.write('');    out.write('   "');    }    else    {    out.write('');    out.write('');    }    	non-compiled	[CE]  empty  character  literal	9	None	replace
11	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  else  {  out.write('');  }  }  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  else  {  out.write('');  }  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  else  {  out.write('');  }  }	  if(escapeSingleQuote)    {    out.write('');    out.write('   "');    }    else    {    out.write('');    out.write('');    }    	non-compiled	[CE]  empty  character  literal	9	None	replace
12	[BUG]  [BUGGY]  out.write(']');  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write(']');  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write(']');	      out.write('');    out.write(']');    	non-compiled	[CE]  empty  character  literal	13	None	replace
13	[BUG]  [BUGGY]  out.write('[');  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write('[');  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write('[');	      out.write('');    out.write(']');    	non-compiled	[CE]  empty  character  literal	13	None	replace
14	[BUG]  [BUGGY]  out.write('>');  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write('>');  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write('>');	      out.write('');    out.write('>');    	non-compiled	[CE]  empty  character  literal	12	None	replace
15	[BUG]  [BUGGY]  ch  =  str.charAt(i  +  1);  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  ch  =  str.charAt(i  +  1);  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	ch  =  str.charAt(i  +  1);	      ch    =    str.charAt(i);    	non-compiled	[CE]  empty  character  literal	5	None	replace
16	[BUG]  [BUGGY]  ch  =  str.charAt(0);  [CE]  empty  character  literal  [FE]                  ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  ch  =  str.charAt(0);  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	ch  =  str.charAt(0);	      ch    =    str.charAt(i);    	non-compiled	[CE]  empty  character  literal	5	None	replace
17	[BUG]  [BUGGY]  ch  =  str.charAt(sz);  [CE]  empty  character  literal  [FE]                    ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  ch  =  str.charAt(sz);  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	ch  =  str.charAt(sz);	      ch    =    str.charAt(i);    	non-compiled	[CE]  empty  character  literal	5	None	replace
18	[BUG]  [BUGGY]  ch  =  str.charAt(i  +  2);  [CE]  empty  character  literal  [FE]                      ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  ch  =  str.charAt(i  +  2);  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	ch  =  str.charAt(i  +  2);	      ch    =    str.charAt(i);    	non-compiled	[CE]  empty  character  literal	5	None	replace
19	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote)  {  out.write('');  out.write('   "');  }	  if(escapeSingleQuote)    {    break;    }    else    {    out.write('');    out.write('   "');    }    	non-compiled	[CE]  empty  character  literal	7	None	replace
20	[BUG]  [BUGGY]  out.write('/',  ch);  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write('/',  ch);  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write('/',  ch);	      out.write('/');    	non-compiled	[CE]  empty  character  literal	4	None	replace
21	[BUG]  [BUGGY]  out.write('/'  +  ch);  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write('/'  +  ch);  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write('/'  +  ch);	      out.write('/');    	non-compiled	[CE]  empty  character  literal	4	None	replace
22	[BUG]  [BUGGY]  out.write('/'  +  str.length());  [CE]  empty  character  literal  [FE]                  ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write('/'  +  str.length());  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write('/'  +  str.length());	      out.write('/');    	non-compiled	[CE]  empty  character  literal	4	None	replace
23	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  escapeSingleQuote)  {  out.write('');  }  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote  ||  escapeSingleQuote)  {  out.write('');  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote  ||  escapeSingleQuote)  {  out.write('');  }	  if(escapeSingleQuote)    {    break;    }    else    {    out.write(ch);    }    	non-compiled	[CE]  empty  character  literal	8	None	replace
24	[BUG]  [BUGGY]  out.write('');  out.write('   "');  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write('');  out.write('   "');  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write('');  out.write('   "');	  if(escapeSingleQuote)    {    out.write('');    out.write('   "');    }    else    {    out.write('');    out.write('/');    }    	non-compiled	[CE]  empty  character  literal	10	None	replace
25	[BUG]  [BUGGY]  out.write('   "');  out.write('/');  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write('   "');  out.write('/');  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write('   "');  out.write('/');	  if(escapeSingleQuote)    {    out.write('');    out.write('   "');    }    else    {    out.write('');    out.write('/');    }    	non-compiled	[CE]  unclosed  character  literal	10	None	replace
26	[BUG]  [BUGGY]  if(escapeSingleQuote  &&  escapeSingleQuote)  {  break;  }  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote  &&  escapeSingleQuote)  {  break;  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote  &&  escapeSingleQuote)  {  break;  }	  if(escapeSingleQuote)    {    break;    }    	non-compiled	[CE]  empty  character  literal	6	None	replace
27	[BUG]  [BUGGY]  out.write(''  +  ch);  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write(''  +  ch);  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write(''  +  ch);	      out.write('');    	non-compiled	[CE]  empty  character  literal	1	None	replace
28	[BUG]  [BUGGY]  ch  =  str.charAt(i)+  1;  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  ch  =  str.charAt(i)+  1;  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	ch  =  str.charAt(i)+  1;	      ch    =    str.charAt(i);    	non-compiled	[CE]  empty  character  literal	5	None	replace
29	[BUG]  [BUGGY]  out.write('   "');  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write('   "');  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write('   "');	  if(escapeSingleQuote)    {    out.write('');    out.write('   "');    }    else    {    out.write('');    out.write('');    }    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
30	[BUG]  [BUGGY]  if(escapeSingleQuote  ||  escapeSingleQuote)  {  break;  }  else  {  out.write(ch);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote  ||  escapeSingleQuote)  {  break;  }  else  {  out.write(ch);  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote  ||  escapeSingleQuote)  {  break;  }  else  {  out.write(ch);  }	  if(escapeSingleQuote)    {    break;    }    else    {    out.write(ch);    }    	non-compiled	[CE]  empty  character  literal	8	None	replace
31	[BUG]  [BUGGY]  Out.write(ch,  escapeSingleQuote);  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  Out.write(ch,  escapeSingleQuote);  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	Out.write(ch,  escapeSingleQuote);	  if(escapeSingleQuote)    {    out.write('');    out.write('   "');    }    else    {    out.write('');    out.write('/');    }    	non-compiled	[CE]  empty  character  literal	10	None	replace
32	[BUG]  [BUGGY]  out.write(cSV_QUOTE_STR);  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  out.write(cSV_QUOTE_STR);  [BUGGY]    break;  default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	out.write(cSV_QUOTE_STR);	      out.write(cSV_QUOTE);    	non-compiled	[CE]  empty  character  literal	14	None	replace
33	[BUG]  [BUGGY]  if(escapeSingleQuote  >  0)  {  break;  }  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    out.write('\\');  out.write('   "');  break;  case  '\\'  :  out.write('\\');  out.write('\\');  break;  case  '/'  :  out.write('\\');  out.write('/');    [BUGGY]  if(escapeSingleQuote  >  0)  {  break;  }  [BUGGY]    default  :  out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.7071067811865475	246	246	1	replace	if(escapeSingleQuote  >  0)  {  break;  }	  if(escapeSingleQuote)    {    break;    }    	non-compiled	[CE]  empty  character  literal	6	None	replace
