bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  writer.toString()  + "n ";  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + "n ";  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	return  writer.toString()  + "n ";	return  writer.toString();  	non-compiled	[CE]  	15	None	replace
2	[BUG]  [BUGGY]  return  writer.toString()  + ", "  +  str.length();  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + ", "  +  str.length();  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	return  writer.toString()  + ", "  +  str.length();	return  writer.toString();  	non-compiled	[CE]  	15	None	replace
3	[BUG]  [BUGGY]  return  writer.toString()  + ": "+str.length();  [CE]  [FE]        ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + ": "+str.length();  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	return  writer.toString()  + ": "+str.length();	return  writer.toString();  	non-compiled	[CE]  	15	None	replace
4	[BUG]  [BUGGY]    [CE]  [FE]          ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	  	return  writer.toString();  	non-compiled	[CE]  	15	None	replace
5	[BUG]  [BUGGY]    StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);		non-compiled	[CE]  	16	None	add
6	[BUG]  [BUGGY]    StringWriter  writer  =  new  StringWriter(str.length()  *  2);  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    StringWriter  writer  =  new  StringWriter(str.length()  *  2);  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    StringWriter  writer  =  new  StringWriter(str.length()  *  2);		non-compiled	[CE]  	16	None	add
7	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(CSV_QUOTE_STR[i]);  }  [CE]  [FE]        ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(CSV_QUOTE_STR[i]);  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(CSV_QUOTE_STR[i]);  }		non-compiled	[CE]  	16	None	add
8	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(',');  }  [CE]  [FE]          ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(',');  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(',');  }		non-compiled	[CE]  	16	None	add
9	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(cSV_QUOTE_STR[i]);  }  [CE]  [FE]            ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(cSV_QUOTE_STR[i]);  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(cSV_QUOTE_STR[i]);  }		non-compiled	[CE]  	16	None	add
10	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  if(cSV_QUOTE.equals(escapeSingleQuotes))  {  writer.append( "n ");  }  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  if(cSV_QUOTE.equals(escapeSingleQuotes))  {  writer.append( "n ");  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  if(cSV_QUOTE.equals(escapeSingleQuotes))  {  writer.append( "n ");  }		non-compiled	[CE]  	16	None	add
11	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  if(cSV_QUOTE.equals(escapeSingleQuotes))  {  writer.append('n');  }  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  if(cSV_QUOTE.equals(escapeSingleQuotes))  {  writer.append('n');  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  if(cSV_QUOTE.equals(escapeSingleQuotes))  {  writer.append('n');  }		non-compiled	[CE]  	16	None	add
12	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  if(cSV_QUOTE.equals(escapeSingleQuotes))  {  return  writer;  }  [CE]  [FE]        ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  if(cSV_QUOTE.equals(escapeSingleQuotes))  {  return  writer;  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    if(escapeSingleQuotes)  {  char[]  CSV_DELIMITER  =  str.toCharArray();  if(cSV_QUOTE.equals(escapeSingleQuotes))  {  return  writer;  }		non-compiled	[CE]  	16	None	add
13	[BUG]  [BUGGY]  return  writer.toString()  +  escapeSingleQuotes;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  +  escapeSingleQuotes;  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	return  writer.toString()  +  escapeSingleQuotes;	return  writer.toString();  	non-compiled	[CE]  	15	None	replace
14	[BUG]  [BUGGY]  return  writer.toString(str);  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString(str);  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	return  writer.toString(str);	return  writer.toString();  	non-compiled	[CE]  	15	None	replace
15	[BUG]  [BUGGY]    char[]  CSV_QUOTE_STR  =  str.toCharArray();  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    char[]  CSV_QUOTE_STR  =  str.toCharArray();  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    char[]  CSV_QUOTE_STR  =  str.toCharArray();		non-compiled	[CE]  	16	None	add
16	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(CSV_QUOTE_STR  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(CSV_QUOTE_STR  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(CSV_QUOTE_STR		non-compiled	[CE]  	16	None	add
17	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append('n');  }  [CE]  [FE]        ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append('n');  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append('n');  }		non-compiled	[CE]  	16	None	add
18	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(CSV_QUOTE_STR);  }  [CE]  [FE]          ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(CSV_QUOTE_STR);  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append(CSV_QUOTE_STR);  }		non-compiled	[CE]  	16	None	add
19	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append('/');  }  [CE]  [FE]            ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append('/');  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	    if(escapeSingleQuotes)  {  char[]  CSV_QUOTE_STR  =  str.toCharArray();  for(int  i  =  0;  i  <  CSV_QUOTE_STR.length();  ++i)  {  writer.append('/');  }		non-compiled	[CE]  	16	None	add
20	[BUG]  [BUGGY]  return  writer.toString()  + "  - "  +  str;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + "  - "  +  str;  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	return  writer.toString()  + "  - "  +  str;	return  writer.toString();  	non-compiled	[CE]  	15	None	replace
21	[BUG]  [BUGGY]  return  writer.toString()  + ": "  +  str;  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + ": "  +  str;  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuotes  IOException  ioe  StringWriter  writer  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	161	161	1	replace	return  writer.toString()  + ": "  +  str;	return  writer.toString();  	non-compiled	[CE]  	15	None	replace
