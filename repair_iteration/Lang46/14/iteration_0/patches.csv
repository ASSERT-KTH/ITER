bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ch  ==  'u')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]  if(ch  ==  'u')  {  [BUGGY]  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u')  {	if  (ch  >  0xfff)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
2	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u')  {  [BUGGY]  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  'u')  {	if  (ch  >  0xfff)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
3	[BUG]  [BUGGY]  if(ch!=  'u')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]  if(ch!=  'u')  {  [BUGGY]  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch!=  'u')  {	if  (ch  >  0xfff)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
4	[BUG]  [BUGGY]  if(ch  <  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]  if(ch  <  0x7f)  {  [BUGGY]  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7f)  {	if  (ch  >  0xfff)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
5	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    [BUGGY]  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	  	if  (ch  >  0xfff)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
6	[BUG]  [BUGGY]    out.write( "u "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    out.write( "u "  +  hex(ch));  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    out.write( "u "  +  hex(ch));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
7	[BUG]  [BUGGY]    Char  ch  =  str.charAt(i);  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    Char  ch  =  str.charAt(i);  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    Char  ch  =  str.charAt(i);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
8	[BUG]  [BUGGY]    if(ch  ==  '')  {  out.write('');  }  else  {  out.write('');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    if(ch  ==  '')  {  out.write('');  }  else  {  out.write('');  }  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    if(ch  ==  '')  {  out.write('');  }  else  {  out.write('');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
9	[BUG]  [BUGGY]    if(ch  ==  '')  {  out.write('');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    if(ch  ==  '')  {  out.write('');  }  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    if(ch  ==  '')  {  out.write('');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
10	[BUG]  [BUGGY]    if(ch!=  '')  {  out.write('');  }  else  {  out.write('');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    if(ch!=  '')  {  out.write('');  }  else  {  out.write('');  }  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    if(ch!=  '')  {  out.write('');  }  else  {  out.write('');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
11	[BUG]  [BUGGY]  if(ch  >  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]  if(ch  >  0xff)  {  [BUGGY]  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  >  0xff)  {	if  (ch  >  0xfff)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
12	[BUG]  [BUGGY]  if(ch  <  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]  if(ch  <  0xff)  {  [BUGGY]  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0xff)  {	if  (ch  >  0xfff)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
13	[BUG]  [BUGGY]    out.write( "u00 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    out.write( "u00 "  +  hex(ch));  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    out.write( "u00 "  +  hex(ch));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
14	[BUG]  [BUGGY]    out.write('');  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    out.write('');  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    out.write('');		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
15	[BUG]  [BUGGY]    out.write( "u0 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    out.write( "u0 "  +  hex(ch));  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    out.write( "u0 "  +  hex(ch));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
16	[BUG]  [BUGGY]    out.write( "u000 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    out.write( "u000 "  +  hex(ch));  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    out.write( "u000 "  +  hex(ch));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
17	[BUG]  [BUGGY]  if(ch  >  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]  if(ch  >  0x7f)  {  [BUGGY]  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  >  0x7f)  {	if  (ch  >  0xfff)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
18	[BUG]  [BUGGY]  if(ch  <  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]  if(ch  <  0x80)  {  [BUGGY]  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x80)  {	if  (ch  >  0xfff)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
19	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]  if(ch  <  0x7F)  {  [BUGGY]  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7F)  {	if  (ch  >  0xfff)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
20	[BUG]  [BUGGY]    int  hex  =  str.length();  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    int  hex  =  str.length();  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    int  hex  =  str.length();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
21	[BUG]  [BUGGY]    if(ch  <  '')  {  out.write('');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);    [BUGGY]    if(ch  <  '')  {  out.write('');  }  [BUGGY]  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write( "\\u0 "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write( "\\u00 "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	    if(ch  <  '')  {  out.write('');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
