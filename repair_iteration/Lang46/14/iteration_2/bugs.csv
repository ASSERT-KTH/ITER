bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.write(ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  out.write(ch);  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	out.write(ch);	      out.write('');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
2	[BUG]  [BUGGY]  out.write(''  +  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  out.write(''  +  ch);  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	out.write(''  +  ch);	      out.write('');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
3	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x7F  ||  ch  >  0xff)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7F  ||  ch  >  0xff)  {	  if(ch    <    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
4	[BUG]  [BUGGY]  if(ch  <  =  0x7F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  =  0x7F)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  =  0x7F)  {	  if(ch    <    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
5	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x7f)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7f  ||  ch  >  0x7f)  {	  if(ch    <    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
6	[BUG]  [BUGGY]  if(ch!=  'u'  ||  ch  ==  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch!=  'u'  ||  ch  ==  '')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch!=  'u'  ||  ch  ==  '')  {	  if(ch!=    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
7	[BUG]  [BUGGY]  if(ch!=  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch!=  '')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch!=  '')  {	  if(ch!=    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
8	[BUG]  [BUGGY]  char  hex  =  str.length();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  char  hex  =  str.length();  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	char  hex  =  str.length();	      int    hex    =    str.length();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
9	[BUG]  [BUGGY]  int  hex  =  str.length()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  int  hex  =  str.length()  +  1;  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	int  hex  =  str.length()  +  1;	      int    hex    =    str.length();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
10	[BUG]  [BUGGY]  int  hex  =  ch.length();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  int  hex  =  ch.length();  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	int  hex  =  ch.length();	      int    hex    =    str.length();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
11	[BUG]  [BUGGY]  int  hex  =  str.length()  +  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  int  hex  =  str.length()  +  2;  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	int  hex  =  str.length()  +  2;	      int    hex    =    str.length();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
12	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x80  ||  ch  >  0x80)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x80  ||  ch  >  0x80)  {	  if(ch    <    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
13	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x80  ||  ch  >  0x7f)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x80  ||  ch  >  0x7f)  {	  if(ch    <    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
14	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x80  ||  ch  >  0xff)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x80  ||  ch  >  0xff)  {	  if(ch    <    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
15	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  '')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  '')  {	  if(ch    ==    'u'    ||    ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
16	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'z')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'z')  {	  if(ch    ==    'u'    ||    ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
17	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'z')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'z')  {	  if(ch    ==    'u'    ||    ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
18	[BUG]  [BUGGY]  out.write( "u0000 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  out.write( "u0000 "  +  hex(ch));  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	out.write( "u0000 "  +  hex(ch));	      out.write(   "u000   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
19	[BUG]  [BUGGY]  out.write( ".s.IFJDCS ".charAt(i));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  out.write( ".s.IFJDCS ".charAt(i));  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	out.write( ".s.IFJDCS ".charAt(i));	      if(ch!=    '')    {    out.write('');    }    else    {    out.write('');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
20	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0xff  ||  ch  >  0x7f)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0xff  ||  ch  >  0x7f)  {	  if(ch    <    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
21	[BUG]  [BUGGY]  if(ch  <  =  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  =  0xff)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  =  0xff)  {	  if(ch    <    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
22	[BUG]  [BUGGY]  if(ch  ==  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  0xff)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  0xff)  {	  if(ch    <    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
23	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  'u'  ||  ch  ==  '')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  '')  {	  if(ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
24	[BUG]  [BUGGY]  if(ch  ==  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  '')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  '')  {	  if(ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
25	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {	  if(ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
26	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {	  if(ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
27	[BUG]  [BUGGY]  char  ch  =  str.charAt(i);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  char  ch  =  str.charAt(i);  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	char  ch  =  str.charAt(i);	      Char    ch    =    str.charAt(i);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
28	[BUG]  [BUGGY]  char  ch  =  str.charAt(i  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  char  ch  =  str.charAt(i  +  1);  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	char  ch  =  str.charAt(i  +  1);	      Char    ch    =    str.charAt(i);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
29	[BUG]  [BUGGY]  char  ch  =  str.charAt(i,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  char  ch  =  str.charAt(i,  sz);  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	char  ch  =  str.charAt(i,  sz);	      Char    ch    =    str.charAt(i);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
30	[BUG]  [BUGGY]  char  ch  =  str.charAt(i++);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  char  ch  =  str.charAt(i++);  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	char  ch  =  str.charAt(i++);	      Char    ch    =    str.charAt(i);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
31	[BUG]  [BUGGY]  if(ch  <  =  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  =  0x7f)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  =  0x7f)  {	  if(ch    <    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
32	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x3f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x3f)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7f  ||  ch  >  0x3f)  {	  if(ch    <    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
33	[BUG]  [BUGGY]  if(ch  ==  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  0x7f)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  0x7f)  {	  if(ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
34	[BUG]  [BUGGY]  if(ch!=  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch!=  0xff)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch!=  0xff)  {	  if(ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
35	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0xff  ||  ch  >  0xff)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0xff  ||  ch  >  0xff)  {	  if(ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
36	[BUG]  [BUGGY]  out.write(''  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  out.write(''  +  hex(ch));  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	out.write(''  +  hex(ch));	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
37	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x80)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7f  ||  ch  >  0x80)  {	  if(ch    <    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
38	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  'u'  ||  ch  >  'u')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  'u'  ||  ch  >  'u')  {	  if(ch    ==    'u'    ||    ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
39	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
40	[BUG]  [BUGGY]  char  ch  =  str.charAt(i)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  char  ch  =  str.charAt(i)+  1;  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	char  ch  =  str.charAt(i)+  1;	      Char    ch    =    str.charAt(i);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
41	[BUG]  [BUGGY]  if(ch  <  0x7FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x7FF)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7FF)  {	  if(ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
42	[BUG]  [BUGGY]  if(ch  >  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  >  0x80)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  >  0x80)  {	  if(ch    <    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
43	[BUG]  [BUGGY]  if(ch  >=  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  >=  '')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  >=  '')  {	  if(ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
44	[BUG]  [BUGGY]  if(ch  >  0x7F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  >  0x7F)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  >  0x7F)  {	  if(ch    <    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
45	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x80)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7F  ||  ch  >  0x80)  {	  if(ch    <    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
46	[BUG]  [BUGGY]  if(ch  >  0xff  ||  hex  <  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  >  0xff  ||  hex  <  0x7f)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  >  0xff  ||  hex  <  0x7f)  {	  if(ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
47	[BUG]  [BUGGY]  int  hex  =  str.length()  +  i;  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  int  hex  =  str.length()  +  i;  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	int  hex  =  str.length()  +  i;	      int    hex    =    str.length();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
48	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
49	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
50	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
51	[BUG]  [BUGGY]  if(ch  <  'e'  ||  ch  >  'E')  {  out.write('E');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  'e'  ||  ch  >  'E')  {  out.write('E');  }  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  'e'  ||  ch  >  'E')  {  out.write('E');  }	      if(ch    <    '')    {    out.write('');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
52	[BUG]  [BUGGY]  if(ch  <  '0'  ||  ch  >  '9')  {  out.write('');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  '0'  ||  ch  >  '9')  {  out.write('');  }  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  '0'  ||  ch  >  '9')  {  out.write('');  }	      if(ch    <    '')    {    out.write('');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
53	[BUG]  [BUGGY]  int  hex  =  str.length()  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  int  hex  =  str.length()  -  1;  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	int  hex  =  str.length()  -  1;	      int    hex    =    str.length();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
54	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  'u'  ||  ch  >  '')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  'u'  ||  ch  >  '')  {	  if(ch    ==    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
55	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >  0x10)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0xff  ||  ch  >  0x10)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0xff  ||  ch  >  0x10)  {	  if(ch    <    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
56	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x10)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x10)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7f  ||  ch  >  0x10)  {	  if(ch    <    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
57	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x10)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x10)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7F  ||  ch  >  0x10)  {	  if(ch    <    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
58	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x10FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x10FF)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7F  ||  ch  >  0x10FF)  {	  if(ch    <    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
59	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x7F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x7F)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x7F  ||  ch  >  0x7F)  {	  if(ch    <    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
60	[BUG]  [BUGGY]  out.write( "utf-8 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  out.write( "utf-8 "  +  hex(ch));  [BUGGY]    if  (ch  >  0xfff)  {  out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	out.write( "utf-8 "  +  hex(ch));	      out.write(   "u   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
61	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0x800)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch  <  0x80  ||  ch  >  0x800)  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch  <  0x80  ||  ch  >  0x800)  {	  if(ch    <    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
62	[BUG]  [BUGGY]  if(ch!=  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch!=  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch!=  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {	  if(ch!=    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
63	[BUG]  [BUGGY]  if(ch!=  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);      [BUGGY]  if(ch!=  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z')  {  [BUGGY]    out.write(   "\\u   "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(   "\\u0   "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(   "\\u00   "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b'  :  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  char  CSV_DELIMITER  CSV_QUOTE  ch  String  CSV_QUOTE_STR  str  boolean  escapeSingleQuote  Writer  out  int  i  sz  char[]  CSV_SEARCH_CHARS  	projects/Lang46/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5	191	191	1	replace	if(ch!=  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z')  {	  if(ch!=    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
