bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  handleChildren(n,  parent);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleChildren(n,  parent);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n,  parent);	  handleChildren(n);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2	[BUG]  [BUGGY]  handleChildrenWithCatch(n);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleChildrenWithCatch(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildrenWithCatch(n);	  handleChildren(n);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
3	[BUG]  [BUGGY]  handleChildren(t,  n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleChildren(t,  n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(t,  n);	  handleChildren(n);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
4	[BUG]  [BUGGY]  handleCatch(n,  cfg,  parent);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  cfg,  parent);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  parent);	  handleCatch(n,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	4	None	replace
5	[BUG]  [BUGGY]  handleCatch(n,  cfg,  root);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  cfg,  root);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  root);	  handleCatch(n,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	4	None	replace
6	[BUG]  [BUGGY]  handleCatch(n,  parent,  cfg);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  parent,  cfg);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  cfg);	  handleCatch(n,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	4	None	replace
7	[BUG]  [BUGGY]  handleCatch(t,  n,  cfg);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(t,  n,  cfg);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  cfg);	  handleCatch(n,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	4	None	replace
8	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentScope();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  t.getCurrentScope();  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentScope();	      Context    cfg    =    Context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
9	[BUG]  [BUGGY]  Context  cfg  =  context.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  context.getCurrentScope();  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  context.getCurrentScope();	      Context    cfg    =    Context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
10	[BUG]  [BUGGY]  Context  cfg  =  parent.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  parent.getCurrentScope();  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  parent.getCurrentScope();	      Context    cfg    =    Context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
11	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]    AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  parent);	      	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	6	None	replace
12	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  Context  [FE]      AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  cannot  find  symbol  Context	6	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node)  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  NodeTraversal.traverse(compiler,  n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n);	      	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node)	6	None	replace
14	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  Context  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.CATCH);	      	non-compiled	[CE]  cannot  find  symbol  Context	6	None	replace
15	[BUG]  [BUGGY]  n.setString( "CATCH ",  t.getSourceName());  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "CATCH ",  t.getSourceName());  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ",  t.getSourceName());	      n.setString(   "CATCH   ");    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	22	None	replace
16	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "CATCH: ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "CATCH: ");	      n.setString(   "CATCH   ");    	compilable	  [FE]  RuntimeException  	22	12	replace
17	[BUG]  [BUGGY]  n.setString( "CATCH: ");  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "CATCH: ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH: ");	      n.setString(   "CATCH   ");    	compilable	  [FE]  RuntimeException  	22	12	replace
18	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleCatch(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);    handleCatch(n);	  	compilable	  [FE]  RuntimeException  	2	12	add
19	[BUG]  [BUGGY]  handleFunction(n);  handleCatch(n);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleCatch(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleCatch(n);	  	compilable	  [FE]  RuntimeException  	2	12	add
20	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleFunction(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);    handleFunction(n);	  	compilable	  [FE]  RuntimeException  	2	12	add
21	[BUG]  [BUGGY]  handleFunction(n);  handleFunction(n);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleFunction(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleFunction(n);	  	compilable	  [FE]  RuntimeException  	2	12	add
22	[BUG]  [BUGGY]  handleFunction(n);  handleStdFunction(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleStdFunction(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleStdFunction(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
23	[BUG]  [BUGGY]  handleFunction(n);  handleCATCH(n);  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleCATCH(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleCATCH(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
24	[BUG]  [BUGGY]  handleFunction(n);  handleField(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleField(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleField(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
25	[BUG]  [BUGGY]  handleFunction(n);  handleEmbedded(n);  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleEmbedded(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleEmbedded(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
26	[BUG]  [BUGGY]  handleFunction(n,  parent);  [CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n,  parent);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n,  parent);	  handleFunction(n);    	non-compiled	[CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	3	None	replace
27	[BUG]  [BUGGY]  handleEmbeddedObject(n);  return;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleEmbeddedObject(n);  return;  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedObject(n);  return;	      handleFunction(n);    return;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
28	[BUG]  [BUGGY]  handleChildAfter(n);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleChildAfter(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildAfter(n);	  handleChild(n);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
29	[BUG]  [BUGGY]  handleChildWith(n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleChildWith(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildWith(n);	  handleChild(n);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
30	[BUG]  [BUGGY]  HandleCatch(n,  parent);  return;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  HandleCatch(n,  parent);  return;  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  parent);  return;	      HandleCatch(n);    return;    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
31	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH);  return;  [CE]  cannot  find  symbol  Context  [FE]                AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH);  return;  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.CATCH);  return;	      HandleCatch(n);    return;    	non-compiled	[CE]  cannot  find  symbol  Context	24	None	replace
32	[BUG]  [BUGGY]  handleCatch(n,  parent,  t);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  parent,  t);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  t);	  handleCatch(n,    parent);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	1	None	replace
33	[BUG]  [BUGGY]  handleCatch(n,  parent,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  parent,  astPositionCounter);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  astPositionCounter);	  handleCatch(n,    parent);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	1	None	replace
34	[BUG]  [BUGGY]  handleCatch(n,  parent,  nodePriorities);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  parent,  nodePriorities);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  nodePriorities);	  handleCatch(n,    parent);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	1	None	replace
35	[BUG]  [BUGGY]  handleCat(n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCat(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCat(n);	      handleCATCH(n);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
36	[BUG]  [BUGGY]  handleCatchStatement(n,  parent);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatchStatement(n,  parent);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  parent);	  handleCatchStatement(n);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
37	[BUG]  [BUGGY]  handleCatchStatement(n.getLastChild());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatchStatement(n.getLastChild());  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n.getLastChild());	  handleCatchStatement(n);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
38	[BUG]  [BUGGY]  handleCatchStatement(n.getFirstChild());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatchStatement(n.getFirstChild());  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n.getFirstChild());	  handleCatchStatement(n);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
39	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      n.setString(   "CATCH   ");  n.setString( "CATCH   ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	        n.setString(   "CATCH   ");    n.setString( "CATCH   ");	  	compilable	  [FE]  RuntimeException  	21	12	add
40	[BUG]  [BUGGY]      n.setString(   "CATCH   ");  n.setString( "CATCH   ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      n.setString(   "CATCH   ");  n.setString( "CATCH   ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	        n.setString(   "CATCH   ");    n.setString( "CATCH   ");	  	compilable	  [FE]  RuntimeException  	21	12	add
41	[BUG]  [BUGGY]      n.setString(   "CATCH   ");  n.setString(, "CATCH   ");  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      n.setString(   "CATCH   ");  n.setString(, "CATCH   ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	        n.setString(   "CATCH   ");    n.setString(, "CATCH   ");	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
42	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      n.setString(   "CATCH   ");  n.setString( ",CATCH   ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	        n.setString(   "CATCH   ");    n.setString( ",CATCH   ");	  	compilable	  [FE]  RuntimeException  	21	12	add
43	[BUG]  [BUGGY]      n.setString(   "CATCH   ");  n.setString( ",CATCH   ");  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      n.setString(   "CATCH   ");  n.setString( ",CATCH   ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	        n.setString(   "CATCH   ");    n.setString( ",CATCH   ");	  	compilable	  [FE]  RuntimeException  	21	12	add
44	[BUG]  [BUGGY]  handleExpression(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleExpression(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpression(n);	      handleCatch(n);    return;    case    Token.EXPR_RESULT:    handleExpression(n);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleExpr(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleExpr(n);	      handleCatch(n);    return;    case    Token.EXPR_RESULT:    handleExpression(n);    	compilable	  [FE]  AssertionFailedError  	11	8	replace
46	[BUG]  [BUGGY]  handleExpr(n);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleExpr(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);	      handleCatch(n);    return;    case    Token.EXPR_RESULT:    handleExpression(n);    	compilable	  [FE]  AssertionFailedError  	11	8	replace
47	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  parent);  return;  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]    AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      NodeTraversal.traverse(compiler,  n,  parent);  return;  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	        NodeTraversal.traverse(compiler,  n,  parent);  return;	  	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	5	None	add
48	[BUG]  [BUGGY]  n.setString( "catch ",  t.getSourceName());  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "catch ",  t.getSourceName());  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  t.getSourceName());	      n.setString(   "catch   ");    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	20	None	replace
49	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "catch: ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "catch: ");	      n.setString(   "catch   ");    	compilable	  [FE]  RuntimeException  	20	12	replace
50	[BUG]  [BUGGY]  n.setString( "catch: ");  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "catch: ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch: ");	      n.setString(   "catch   ");    	compilable	  [FE]  RuntimeException  	20	12	replace
51	[BUG]  [BUGGY]  handleLabel(n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleLabel(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleLabel(n);	      handleCatch(n);    return;    case    Token.EXPR_RESULT:    handleExpr(n);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
52	[BUG]  [BUGGY]  handleCount(n);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCount(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCount(n);	      handleCatch(n);    return;    case    Token.EXPR_RESULT:    handleExpr(n);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
53	[BUG]  [BUGGY]  handleKey(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleKey(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleKey(n);	      handleKey(n);    return;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
54	[BUG]  [BUGGY]  handleFunctionThrough(n);  return;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunctionThrough(n);  return;  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunctionThrough(n);  return;	      handleFallThrough(n);    return;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
55	[BUG]  [BUGGY]  handleFallThrough(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFallThrough(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFallThrough(n);	      handleFallThrough(n);    return;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
56	[BUG]  [BUGGY]  handleTree(n);  return;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleTree(n);  return;  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleTree(n);  return;	      handleCatch(n);    return;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n);  n  =  parent.getParent();  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);  n  =  parent.getParent();	      handleCATCH(n);    return;    	compilable	  [FE]  AssertionFailedError  	12	3	replace
58	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getParent();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n);  n  =  parent.getParent();  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);  n  =  parent.getParent();	      handleCATCH(n);    return;    	compilable	  [FE]  AssertionFailedError  	12	3	replace
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);  n  =  parent.getFirstChild();	      handleCATCH(n);    return;    	compilable	  [FE]  AssertionFailedError  	12	3	replace
60	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);  n  =  parent.getFirstChild();	      handleCATCH(n);    return;    	compilable	  [FE]  AssertionFailedError  	12	3	replace
61	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      n.setString(   "catch   ");  n.setString(   "catch   ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	        n.setString(   "catch   ");    n.setString(   "catch   ");	  	compilable	  [FE]  RuntimeException  	19	12	add
62	[BUG]  [BUGGY]      n.setString(   "catch   ");  n.setString(   "catch   ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      n.setString(   "catch   ");  n.setString(   "catch   ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	        n.setString(   "catch   ");    n.setString(   "catch   ");	  	compilable	  [FE]  RuntimeException  	19	12	add
63	[BUG]  [BUGGY]      n.setString(   "catch   ");  n.setString(   "catch "));  [CE]  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      n.setString(   "catch   ");  n.setString(   "catch "));  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	        n.setString(   "catch   ");    n.setString(   "catch "));	  	non-compiled	[CE]  	19	None	add
64	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentContext();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  t.getCurrentContext();  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentContext();	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
65	[BUG]  [BUGGY]  Context  cfg  =  context.getCurrentContext();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  context.getCurrentContext();  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  context.getCurrentContext();	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
66	[BUG]  [BUGGY]  Context  cfg  =  parent.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  parent.getCurrentContext();  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  parent.getCurrentContext();	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
67	[BUG]  [BUGGY]  Context  cfg  =  Context.createCurrentContext(t,  n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  Context.createCurrentContext(t,  n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.createCurrentContext(t,  n);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
68	[BUG]  [BUGGY]  handleChildren(n);  return;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleChildren(n);  return;  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n);  return;	      handleCatch(n);    return;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
69	[BUG]  [BUGGY]  handleFunction(n);  handleStandardFunction(n);  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleStandardFunction(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleStandardFunction(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
70	[BUG]  [BUGGY]  handleFunction(n);  handleStatement(n);  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleStatement(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleStatement(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
71	[BUG]  [BUGGY]  handleFunction(n);  handleEmbeddedObject(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleEmbeddedObject(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleEmbeddedObject(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
72	[BUG]  [BUGGY]  handleFunction(n);  handleMatch(n);  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleMatch(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleMatch(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
73	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "match ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "match ");	      n.setString(   "catch   ");    	compilable	  [FE]  RuntimeException  	20	12	replace
74	[BUG]  [BUGGY]  n.setString( "match ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "match ");  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "match ");	      n.setString(   "catch   ");    	compilable	  [FE]  RuntimeException  	20	12	replace
75	[BUG]  [BUGGY]  n.setString( "catch ",  t.getModule());  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "catch ",  t.getModule());  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  t.getModule());	      n.setString(   "catch   ");    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	20	None	replace
76	[BUG]  [BUGGY]  handleCatch(n,  cfg,  value);  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  cfg,  value);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  value);	  handleCatch(n,    cfg);    	non-compiled	[CE]  cannot  find  symbol  value	4	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(parent);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(parent);	      handleCATCH(n);    	compilable	  [FE]  AssertionFailedError  	13	8	replace
78	[BUG]  [BUGGY]  handleCatch(parent);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(parent);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(parent);	      handleCATCH(n);    	compilable	  [FE]  AssertionFailedError  	13	8	replace
79	[BUG]  [BUGGY]  handleCatch(n,  parent,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  parent,  exceptionHandler);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  exceptionHandler);	  handleCatch(n,    parent);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	1	None	replace
80	[BUG]  [BUGGY]  handleCatch(n,  parent,  value);  [CE]  cannot  find  symbol  value  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  parent,  value);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  value);	  handleCatch(n,    parent);    	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
81	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentScope(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  Context.getCurrentScope(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentScope(n);	      Context    cfg    =    Context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
82	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph  <  Node>());  [CE]  type  AstControlFlowGraph  does  not  take  parameters  [FE]    AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph  <  Node>());  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph  <  Node>());	      	non-compiled	[CE]  type  AstControlFlowGraph  does  not  take  parameters	6	None	replace
83	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph());  [CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph());  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph());	      	non-compiled	[CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;	6	None	replace
84	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Map<DiGraphNode<Node,Branch>,Integer>)  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  nodePriorities);	      	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Map<DiGraphNode<Node,Branch>,Integer>)	6	None	replace
85	[BUG]  [BUGGY]  n.setString( "CATCH ",  t.getModule());  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "CATCH ",  t.getModule());  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ",  t.getModule());	      n.setString(   "CATCH   ");    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	22	None	replace
86	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(n);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  Context.getCurrentContext(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentContext(n);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
87	[BUG]  [BUGGY]  handleCategory(n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCategory(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCategory(n);	  handleChildren(n);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
88	[BUG]  [BUGGY]  handleEmbeddedBy(n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleEmbeddedBy(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedBy(n);	      handleCatch(n);    return;    case    Token.EXPR_RESULT:    handleExpr(n);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
89	[BUG]  [BUGGY]  HandleCatch(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  HandleCatch(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n);	      HandleCatch(n);    return;    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
90	[BUG]  [BUGGY]  handleEmbeddedObject(n);  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleEmbeddedObject(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedObject(n);	  handleFunction(n);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
91	[BUG]  [BUGGY]  n.setString( "catch ".equals(getCatchName()));  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "catch ".equals(getCatchName()));  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ".equals(getCatchName()));	      n.setString(   "catch   ");    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
92	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int)  [FE]    AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  astPositionCounter);	      	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int)	6	None	replace
93	[BUG]  [BUGGY]      n.setString(   "CATCH   ");  n.setString( "CATCH "));  [CE]  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      n.setString(   "CATCH   ");  n.setString( "CATCH "));  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	        n.setString(   "CATCH   ");    n.setString( "CATCH "));	  	non-compiled	[CE]  	21	None	add
94	[BUG]  [BUGGY]  handleEscaped(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleEscaped(n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEscaped(n);	      handleCatch(n);    return;    case    Token.EXPR_RESULT:    handleExpression(n);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
95	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	        NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  StackOverflowError  	5	12	add
96	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	        NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  StackOverflowError  	5	12	add
97	[BUG]  [BUGGY]  handleFunction(n);  handleEmbeddedBlock(n);  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleEmbeddedBlock(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleEmbeddedBlock(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
98	[BUG]  [BUGGY]  handleFunction(n);  handleEmbeddedBy(n);  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleEmbeddedBy(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleEmbeddedBy(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
99	[BUG]  [BUGGY]  handleFunction(n);  handleEmbeddedByName(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleFunction(n);  handleEmbeddedByName(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);    handleEmbeddedByName(n);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
100	[BUG]  [BUGGY]  handleCatch(t,  n,  parent);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(t,  n,  parent);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  parent);	  handleCatch(n,    parent);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	1	None	replace
101	[BUG]  [BUGGY]  handleCatch(n,  parent,  type);  [CE]  cannot  find  symbol  type  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  parent,  type);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  type);	  handleCatch(n,    parent);    	non-compiled	[CE]  cannot  find  symbol  type	1	None	replace
102	[BUG]  [BUGGY]  handleCatch(n,  cfg,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCatch(n,  cfg,  astPositionCounter);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  astPositionCounter);	  handleCatch(n,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	4	None	replace
103	[BUG]  [BUGGY]  handleShouldBeCatch(n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleShouldBeCatch(n);  [BUGGY]    return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleShouldBeCatch(n);	  handleChildren(n);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
104	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentScope(t,  n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  Context.getCurrentScope(t,  n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentScope(t,  n);	      Context    cfg    =    Context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
105	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(t,  n);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  Context.getCurrentContext(t,  n);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentContext(t,  n);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
106	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(t);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  Context  cfg  =  Context.getCurrentContext(t);  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentContext(t);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
107	[BUG]  [BUGGY]  n.setString( "CATCH ",  t.getMessage());  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  n.setString( "CATCH ",  t.getMessage());  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ",  t.getMessage());	      n.setString(   "CATCH   ");    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
108	[BUG]  [BUGGY]  handleCategory(n);  return;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:    [BUGGY]  handleCategory(n);  return;  [BUGGY]    handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCategory(n);  return;	      handleFunction(n);    return;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
