bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentScope(n,  parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.getCurrentScope(n,  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentScope(n,  parent);	  Context    cfg    =    Context.getCurrentScope(n);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
2	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentScope(parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.getCurrentScope(parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentScope(parent);	  Context    cfg    =    Context.getCurrentScope(n);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
3	[BUG]  [BUGGY]  Context  cfg  =  t,  n.getCurrentContext();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t,  n.getCurrentContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t,  n.getCurrentContext();	  Context    cfg    =    t.getCurrentContext();    	non-compiled	[CE]  ';'  expected	64	None	replace
4	[BUG]  [BUGGY]  Context  cfg  =  n.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  n.getCurrentContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  n.getCurrentContext();	  Context    cfg    =    t.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
5	[BUG]  [BUGGY]  Context  cfg  =  t.createContext(n,  parent.getCurrentContext());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.createContext(n,  parent.getCurrentContext());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.createContext(n,  parent.getCurrentContext());	  Context    cfg    =    t.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
6	[BUG]  [BUGGY]  Context  cfg  =  t.getContext();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getContext();	  Context    cfg    =    t.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
7	[BUG]  [BUGGY]  Context  cfg  =  Context.createCurrentContext(t,  n,  parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.createCurrentContext(t,  n,  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.createCurrentContext(t,  n,  parent);	  Context    cfg    =    Context.createCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
8	[BUG]  [BUGGY]  Context  cfg  =  Context.createCurrentContext(n,  t);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.createCurrentContext(n,  t);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.createCurrentContext(n,  t);	  Context    cfg    =    Context.createCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
9	[BUG]  [BUGGY]  Context  cfg  =  Context.createCurrentContext(t,  n,  astPositionCounter);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.createCurrentContext(t,  n,  astPositionCounter);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.createCurrentContext(t,  n,  astPositionCounter);	  Context    cfg    =    Context.createCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
10	[BUG]  [BUGGY]  Context  cfg  =  Context.current().createCurrentContext(t,  n);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.current().createCurrentContext(t,  n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.current().createCurrentContext(t,  n);	  Context    cfg    =    Context.createCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
11	[BUG]  [BUGGY]  n.setString( "catch "  +  getCatchName());  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch "  +  getCatchName());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch "  +  getCatchName());	  n.setString(   "catch   ".equals(getCatchName()));    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
12	[BUG]  [BUGGY]  n.setString( "catch ",  cfg.getCatchName());  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch ",  cfg.getCatchName());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  cfg.getCatchName());	  n.setString(   "catch   ".equals(getCatchName()));    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
13	[BUG]  [BUGGY]  n.setString( "catch ",  getCatchName());  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch ",  getCatchName());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  getCatchName());	  n.setString(   "catch   ".equals(getCatchName()));    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
14	[BUG]  [BUGGY]  n.setString( "CATCH "  +  getCatchName());  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH "  +  getCatchName());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH "  +  getCatchName());	  n.setString(   "catch   ".equals(getCatchName()));    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
15	[BUG]  [BUGGY]  handleSatch(n);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleSatch(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleSatch(n);	  handleCatch(parent);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
16	[BUG]  [BUGGY]  handleCatch(n,  t,  parent);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  t,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  t,  parent);	  handleCatch(n,    parent,    t);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	32	None	replace
17	[BUG]  [BUGGY]  handleCatch(n,  cfg,  parent,  t);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  parent,  t);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  parent,  t);	  handleCatch(n,    parent,    t);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	32	None	replace
18	[BUG]  [BUGGY]  handleCatch(t,  parent,  n);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  parent,  n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  parent,  n);	  handleCatch(n,    parent,    t);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	32	None	replace
19	[BUG]  [BUGGY]  handleCatch(n,  parent,  t,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  t,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  t,  astPositionCounter);	  handleCatch(n,    parent,    t);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	32	None	replace
20	[BUG]  [BUGGY]  handleCatch(n,  n,  parent);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  n,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  n,  parent);	  handleCatch(n,    parent,    t);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	32	None	replace
21	[BUG]  [BUGGY]  handleCatalina(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatalina(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatalina(n);	  handleCat(n);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
22	[BUG]  [BUGGY]  handleConstructor(n);  return;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleConstructor(n);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleConstructor(n);  return;	  handleCategory(n);    return;    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
23	[BUG]  [BUGGY]  handleCatch(n,  cfg,  astPositionCounter,  priorityCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  astPositionCounter,  priorityCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  astPositionCounter,  priorityCounter);	  handleCatch(n,    cfg,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	102	None	replace
24	[BUG]  [BUGGY]  handleCatch(n,  cfg,  astPositionCounter,  priorityComparator);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  astPositionCounter,  priorityComparator);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  astPositionCounter,  priorityComparator);	  handleCatch(n,    cfg,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	102	None	replace
25	[BUG]  [BUGGY]  handleCatch(n,  cfg,  astPositionCounter,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  astPositionCounter,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  astPositionCounter,  exceptionHandler);	  handleCatch(n,    cfg,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	102	None	replace
26	[BUG]  [BUGGY]  handleCatch(t,  n,  cfg,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  cfg,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  cfg,  astPositionCounter);	  handleCatch(n,    cfg,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	102	None	replace
27	[BUG]  [BUGGY]  handleCatch(n,  parent,  cfg,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  cfg,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  cfg,  astPositionCounter);	  handleCatch(n,    cfg,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	102	None	replace
28	[BUG]  [BUGGY]  Context  cfg  =  t,  n.getCurrentScope();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t,  n.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t,  n.getCurrentScope();	  Context    cfg    =    t.getCurrentScope();    	non-compiled	[CE]  ';'  expected	8	None	replace
29	[BUG]  [BUGGY]  Context  cfg  =  n.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  n.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  n.getCurrentScope();	  Context    cfg    =    t.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
30	[BUG]  [BUGGY]  Context  cfg  =  t.scope.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.scope.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.scope.getCurrentScope();	  Context    cfg    =    t.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
31	[BUG]  [BUGGY]  handleCatchStatement(n,  t.getLastChild());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  t.getLastChild());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  t.getLastChild());	  handleCatchStatement(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
32	[BUG]  [BUGGY]  handleCatchStatement(n.getLastChild(),  n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n.getLastChild(),  n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n.getLastChild(),  n);	  handleCatchStatement(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
33	[BUG]  [BUGGY]  handleCatchStatement(n,  n.getLastChild());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  n.getLastChild());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  n.getLastChild());	  handleCatchStatement(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
34	[BUG]  [BUGGY]  handleCatchStatement(n,  parent.getLastChild());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  parent.getLastChild());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  parent.getLastChild());	  handleCatchStatement(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
35	[BUG]  [BUGGY]  n.setString( "catch "  +  name,  t.getModule());  [CE]  cannot  find  symbol  name  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch "  +  name,  t.getModule());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch "  +  name,  t.getModule());	  n.setString(   "catch   ",    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  name	75	None	replace
36	[BUG]  [BUGGY]  n.setString( "catch ",  t.getModule(),  parent);  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch ",  t.getModule(),  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  t.getModule(),  parent);	  n.setString(   "catch   ",    t.getModule());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	75	None	replace
37	[BUG]  [BUGGY]  n.setString( "catch ",  t.getModule(),  handleCatch(n);  [CE]  [FE]              RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch ",  t.getModule(),  handleCatch(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  t.getModule(),  handleCatch(n);	  n.setString(   "catch   ",    t.getModule());    	non-compiled	[CE]  	75	None	replace
38	[BUG]  [BUGGY]  n.setString( "Catch ",  t.getModule());  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "Catch ",  t.getModule());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "Catch ",  t.getModule());	  n.setString(   "catch   ",    t.getModule());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	75	None	replace
39	[BUG]  [BUGGY]  handleChildren(n,  parent,  cfg);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildren(n,  parent,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n,  parent,  cfg);	  handleChildren(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
40	[BUG]  [BUGGY]  handleChildren(n,  parent,  nodePriorities);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildren(n,  parent,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n,  parent,  nodePriorities);	  handleChildren(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
41	[BUG]  [BUGGY]  handleChildren(n,  cfg);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildren(n,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n,  cfg);	  handleChildren(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
42	[BUG]  [BUGGY]  handleChildren(n,  parent,  t);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildren(n,  parent,  t);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n,  parent,  t);	  handleChildren(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
43	[BUG]  [BUGGY]  Context  cfg  =  t.context.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.context.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.context.getCurrentScope();	  Context    cfg    =    context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
44	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "match "  +  Token.CATCH);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "match "  +  Token.CATCH);	  n.setString(   "match   ");    	compilable	  [FE]  RuntimeException  	74	12	replace
45	[BUG]  [BUGGY]  n.setString( "match "  +  Token.CATCH);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "match "  +  Token.CATCH);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "match "  +  Token.CATCH);	  n.setString(   "match   ");    	compilable	  [FE]  RuntimeException  	74	12	replace
46	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "mv.match ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "mv.match ");	  n.setString(   "match   ");    	compilable	  [FE]  RuntimeException  	74	12	replace
47	[BUG]  [BUGGY]  n.setString( "mv.match ");  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "mv.match ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "mv.match ");	  n.setString(   "match   ");    	compilable	  [FE]  RuntimeException  	74	12	replace
48	[BUG]  [BUGGY]  Context  cfg  =  t.context.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.context.getCurrentContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.context.getCurrentContext();	  Context    cfg    =    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
49	[BUG]  [BUGGY]  n.setString(t.getSourceName(),   "catch ");  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(t.getSourceName(),   "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(t.getSourceName(),   "catch ");	  n.setString(   "catch   ",    t.getSourceName());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	48	None	replace
50	[BUG]  [BUGGY]  n.setString( "catch ",  t.getSourceName(),  parent);  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch ",  t.getSourceName(),  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  t.getSourceName(),  parent);	  n.setString(   "catch   ",    t.getSourceName());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	48	None	replace
51	[BUG]  [BUGGY]  n.setString( "catch ",  t.getSourceName()  + ": ");  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch ",  t.getSourceName()  + ": ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  t.getSourceName()  + ": ");	  n.setString(   "catch   ",    t.getSourceName());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	48	None	replace
52	[BUG]  [BUGGY]  Context  cfg  =  t.n.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.n.getCurrentContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.n.getCurrentContext();	  Context    cfg    =    parent.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
53	[BUG]  [BUGGY]  Context  cfg  =  t,  parent.getCurrentContext();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t,  parent.getCurrentContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t,  parent.getCurrentContext();	  Context    cfg    =    parent.getCurrentContext();    	non-compiled	[CE]  ';'  expected	66	None	replace
54	[BUG]  [BUGGY]  HandleCatch(n,  parent,  cfg);  return;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  parent,  cfg);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  parent,  cfg);  return;	  HandleCatch(n,    parent);    return;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
55	[BUG]  [BUGGY]  HandleCatch(n,  parent,  t);  return;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  parent,  t);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  parent,  t);  return;	  HandleCatch(n,    parent);    return;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
56	[BUG]  [BUGGY]  HandleCatch(n,  parent,  n);  return;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  parent,  n);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  parent,  n);  return;	  HandleCatch(n,    parent);    return;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
57	[BUG]  [BUGGY]  HandleCatch(n,  cfg);  return;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  cfg);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  cfg);  return;	  HandleCatch(n,    parent);    return;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Map<DiGraphNode<Node,Branch>,Integer>)  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);	  NodeTraversal.traverse(compiler,    n,    nodePriorities);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Map<DiGraphNode<Node,Branch>,Integer>)	84	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  nodePriorities);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int,Map<DiGraphNode<Node,Branch>,Integer>)  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  astPositionCounter,  nodePriorities);	  NodeTraversal.traverse(compiler,    n,    nodePriorities);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int,Map<DiGraphNode<Node,Branch>,Integer>)	84	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  nodePriorities);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Map<DiGraphNode<Node,Branch>,Integer>)  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  root,  nodePriorities);	  NodeTraversal.traverse(compiler,    n,    nodePriorities);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Map<DiGraphNode<Node,Branch>,Integer>)	84	None	replace
61	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities,  astPositionCounter);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Map<DiGraphNode<Node,Branch>,Integer>,int)  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  nodePriorities,  astPositionCounter);	  NodeTraversal.traverse(compiler,    n,    nodePriorities);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Map<DiGraphNode<Node,Branch>,Integer>,int)	84	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Map<DiGraphNode<Node,Branch>,Integer>,Node)  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  nodePriorities,  parent);	  NodeTraversal.traverse(compiler,    n,    nodePriorities);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Map<DiGraphNode<Node,Branch>,Integer>,Node)	84	None	replace
63	[BUG]  [BUGGY]  handleStdFunction(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleStdFunction(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleStdFunction(n);	  handleFunction(n);    handleStdFunction(n);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
64	[BUG]  [BUGGY]  handleEmbeddedFunction(n);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmbeddedFunction(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedFunction(n);	  handleFunction(n);    handleStdFunction(n);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
65	[BUG]  [BUGGY]  handleEmbeddedObject(n,  parent);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmbeddedObject(n,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedObject(n,  parent);	  handleEmbeddedObject(n);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
66	[BUG]  [BUGGY]  handleEmbeddedObject(t,  n);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmbeddedObject(t,  n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedObject(t,  n);	  handleEmbeddedObject(n);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
67	[BUG]  [BUGGY]  handleFunctionThrough(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunctionThrough(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunctionThrough(n);	  handleFunctionThrough(n);    return;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
68	[BUG]  [BUGGY]  handleFieldThrough(n);  return;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFieldThrough(n);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFieldThrough(n);  return;	  handleFunctionThrough(n);    return;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
69	[BUG]  [BUGGY]  handleCatch(n,  parent,  astPositionCounter,  priorityCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  astPositionCounter,  priorityCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  astPositionCounter,  priorityCounter);	  handleCatch(n,    parent,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	33	None	replace
70	[BUG]  [BUGGY]  handleCatch(n,  n,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  n,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  n,  astPositionCounter);	  handleCatch(n,    parent,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	33	None	replace
71	[BUG]  [BUGGY]  handleCatch(n,  n,  parent,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  n,  parent,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  n,  parent,  astPositionCounter);	  handleCatch(n,    parent,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	33	None	replace
72	[BUG]  [BUGGY]  handleCatch(n,  parent,  astPositionCounter,  priorityComparator);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  astPositionCounter,  priorityComparator);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  astPositionCounter,  priorityComparator);	  handleCatch(n,    parent,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	33	None	replace
73	[BUG]  [BUGGY]  handleCatch(t,  n,  parent,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  parent,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  parent,  astPositionCounter);	  handleCatch(n,    parent,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	33	None	replace
74	[BUG]  [BUGGY]  Context.checkState(parent.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  Context  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(parent.getType()  ==  Token.CATCH);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(parent.getType()  ==  Token.CATCH);	  Context.checkState(n.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  Context	14	None	replace
75	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH  ||  n.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  Context  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH  ||  n.getType()  ==  Token.CATCH);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.CATCH  ||  n.getType()  ==  Token.CATCH);	  Context.checkState(n.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  Context	14	None	replace
76	[BUG]  [BUGGY]  Context.checkState(n.getType()!=  Token.CATCH);  [CE]  cannot  find  symbol  Context  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()!=  Token.CATCH);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()!=  Token.CATCH);	  Context.checkState(n.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  Context	14	None	replace
77	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH  ||  parent.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  Context  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH  ||  parent.getType()  ==  Token.CATCH);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.CATCH  ||  parent.getType()  ==  Token.CATCH);	  Context.checkState(n.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  Context	14	None	replace
78	[BUG]  [BUGGY]  handleEmbeddedByName(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmbeddedByName(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedByName(n);	  handleFunction(n);    handleEmbeddedByName(n);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
79	[BUG]  [BUGGY]  handleEmbeddedByCatch(n);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmbeddedByCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedByCatch(n);	  handleFunction(n);    handleEmbeddedByName(n);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
80	[BUG]  [BUGGY]  handleEmbeddedWithName(n);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmbeddedWithName(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedWithName(n);	  handleFunction(n);    handleEmbeddedByName(n);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
81	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "catch:   ");  n.setString(   "catch:   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString(   "catch:   ");    n.setString(   "catch:   ");	  	compilable	  [FE]  RuntimeException  	49	12	add
82	[BUG]  [BUGGY]  n.setString(   "catch:   ");  n.setString(   "catch:   ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "catch:   ");  n.setString(   "catch:   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "catch:   ");    n.setString(   "catch:   ");	  	compilable	  [FE]  RuntimeException  	49	12	add
83	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "catch:   ");  n.setString( ",catch:   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString(   "catch:   ");    n.setString( ",catch:   ");	  	compilable	  [FE]  RuntimeException  	49	12	add
84	[BUG]  [BUGGY]  n.setString(   "catch:   ");  n.setString( ",catch:   ");  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "catch:   ");  n.setString( ",catch:   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "catch:   ");    n.setString( ",catch:   ");	  	compilable	  [FE]  RuntimeException  	49	12	add
85	[BUG]  [BUGGY]  n.setString(   "catch:   ");  n.setString(   "catch: ".);  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "catch:   ");  n.setString(   "catch: ".);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "catch:   ");    n.setString(   "catch: ".);	  	non-compiled	[CE]  <identifier>  expected	49	None	add
86	[BUG]  [BUGGY]  n.setString( "CATCH ",  n.getString());  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH ",  n.getString());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ",  n.getString());	          n.setString(       "CATCH       ");    n.setString(   ",CATCH       ");    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	43	None	replace
87	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( ",CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( ",CATCH ");	          n.setString(       "CATCH       ");    n.setString(   ",CATCH       ");    	compilable	  [FE]  RuntimeException  	43	12	replace
88	[BUG]  [BUGGY]  n.setString( ",CATCH ");  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( ",CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( ",CATCH ");	          n.setString(       "CATCH       ");    n.setString(   ",CATCH       ");    	compilable	  [FE]  RuntimeException  	43	12	replace
89	[BUG]  [BUGGY]  handleFinally(n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFinally(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFinally(n);	  handleFallThrough(n);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
90	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "CATCH:   ");  n.setString( "CATCH:   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString(   "CATCH:   ");    n.setString( "CATCH:   ");	  	compilable	  [FE]  RuntimeException  	16	12	add
91	[BUG]  [BUGGY]  n.setString(   "CATCH:   ");  n.setString( "CATCH:   ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "CATCH:   ");  n.setString( "CATCH:   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "CATCH:   ");    n.setString( "CATCH:   ");	  	compilable	  [FE]  RuntimeException  	16	12	add
92	[BUG]  [BUGGY]  n.setString(   "CATCH:   ");  n.setString( "CATCH: ".);  [CE]  <identifier>  expected  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "CATCH:   ");  n.setString( "CATCH: ".);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "CATCH:   ");    n.setString( "CATCH: ".);	  	non-compiled	[CE]  <identifier>  expected	16	None	add
93	[BUG]  [BUGGY]  n.setString( "CATCH "  +  name,  t.getModule());  [CE]  cannot  find  symbol  name  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH "  +  name,  t.getModule());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH "  +  name,  t.getModule());	  n.setString(   "CATCH   ",    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  name	85	None	replace
94	[BUG]  [BUGGY]  n.setString( "CATCH ",  t.getModule(),  parent);  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH ",  t.getModule(),  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ",  t.getModule(),  parent);	  n.setString(   "CATCH   ",    t.getModule());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	85	None	replace
95	[BUG]  [BUGGY]  n.setString( "CATCH ",  t.getModule(),  cfg);  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH ",  t.getModule(),  cfg);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ",  t.getModule(),  cfg);	  n.setString(   "CATCH   ",    t.getModule());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	85	None	replace
96	[BUG]  [BUGGY]  n.setString( "CATCH "  + ",  t.getModule());  [CE]  unclosed  string  literal  [FE]              RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH "  + ",  t.getModule());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH "  + ",  t.getModule());	  n.setString(   "CATCH   ",    t.getModule());    	non-compiled	[CE]  unclosed  string  literal	85	None	replace
97	[BUG]  [BUGGY]  handleCatch(t,  n,  parent,  root);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  parent,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  parent,  root);	  handleCatch(t,    n,    parent);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	100	None	replace
98	[BUG]  [BUGGY]  handleCatch(t,  n,  parent,  nodePriorities);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  parent,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  parent,  nodePriorities);	  handleCatch(t,    n,    parent);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	100	None	replace
99	[BUG]  [BUGGY]  handleCatch(t,  n,  parent,  name);  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  parent,  name);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  parent,  name);	  handleCatch(t,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  name	100	None	replace
100	[BUG]  [BUGGY]  handleCatch(t,  n,  parent,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  parent,  nameNode);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  parent,  nameNode);	  handleCatch(t,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	100	None	replace
101	[BUG]  [BUGGY]  handleCatch(n,  parent,  root);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  root);	  handleCatch(n,    parent,    value);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	80	None	replace
102	[BUG]  [BUGGY]  handleCatch(n,  parent,  n);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  n);	  handleCatch(n,    parent,    value);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	80	None	replace
103	[BUG]  [BUGGY]  handleCatch(n,  parent,  entry);  [CE]  cannot  find  symbol  entry  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  entry);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  entry);	  handleCatch(n,    parent,    value);    	non-compiled	[CE]  cannot  find  symbol  entry	80	None	replace
104	[BUG]  [BUGGY]  handleCatch(n,  parent,  name);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  name);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  name);	  handleCatch(n,    parent,    value);    	non-compiled	[CE]  cannot  find  symbol  name	80	None	replace
105	[BUG]  [BUGGY]  handleCatch(n,  n,  parent,  nodePriorities);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  n,  parent,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  n,  parent,  nodePriorities);	  handleCatch(n,    parent,    nodePriorities);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	34	None	replace
106	[BUG]  [BUGGY]  handleCatch(n,  parent,  nodePriorities,  t);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  nodePriorities,  t);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  nodePriorities,  t);	  handleCatch(n,    parent,    nodePriorities);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	34	None	replace
107	[BUG]  [BUGGY]  handleCatch(n,  n,  nodePriorities);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  n,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  n,  nodePriorities);	  handleCatch(n,    parent,    nodePriorities);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	34	None	replace
108	[BUG]  [BUGGY]  handleCatch(n,  parent,  nodePriorities,  priorityCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  nodePriorities,  priorityCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  nodePriorities,  priorityCounter);	  handleCatch(n,    parent,    nodePriorities);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	34	None	replace
109	[BUG]  [BUGGY]  handleCatch(n,  parent,  nodePriorities,  type);  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  nodePriorities,  type);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  nodePriorities,  type);	  handleCatch(n,    parent,    nodePriorities);    	non-compiled	[CE]  cannot  find  symbol  type	34	None	replace
110	[BUG]  [BUGGY]  Context.checkState(parent.getType()  ==  Token.CATCH);  return;  [CE]  cannot  find  symbol  Context  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(parent.getType()  ==  Token.CATCH);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(parent.getType()  ==  Token.CATCH);  return;	  Context.checkState(n.getType()    ==    Token.CATCH);    return;    	non-compiled	[CE]  cannot  find  symbol  Context	31	None	replace
111	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH  ||  n.getType()  ==  Token.CATCH);  return;  [CE]  cannot  find  symbol  Context  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH  ||  n.getType()  ==  Token.CATCH);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.CATCH  ||  n.getType()  ==  Token.CATCH);  return;	  Context.checkState(n.getType()    ==    Token.CATCH);    return;    	non-compiled	[CE]  cannot  find  symbol  Context	31	None	replace
112	[BUG]  [BUGGY]  Context.checkState(n.getType()!=  Token.CATCH);  return;  [CE]  cannot  find  symbol  Context  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()!=  Token.CATCH);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()!=  Token.CATCH);  return;	  Context.checkState(n.getType()    ==    Token.CATCH);    return;    	non-compiled	[CE]  cannot  find  symbol  Context	31	None	replace
113	[BUG]  [BUGGY]  n.setString( "CATCH: "  +  getName());  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH: "  +  getName());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH: "  +  getName());	  n.setString(   "CATCH:   ");    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
114	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "AstControlFlowGraph: ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "AstControlFlowGraph: ");	  n.setString(   "CATCH:   ");    	compilable	  [FE]  RuntimeException  	17	12	replace
115	[BUG]  [BUGGY]  n.setString( "AstControlFlowGraph: ");  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "AstControlFlowGraph: ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "AstControlFlowGraph: ");	  n.setString(   "CATCH:   ");    	compilable	  [FE]  RuntimeException  	17	12	replace
116	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  root);	  NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	13	None	replace
117	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  type);  [CE]  cannot  find  symbol  type  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  type);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  type);	  NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  cannot  find  symbol  type	13	None	replace
118	[BUG]  [BUGGY]  handleCatch(n,  cfg,  entry);  [CE]  cannot  find  symbol  entry  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  entry);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  entry);	  handleCatch(n,    cfg,    value);    	non-compiled	[CE]  cannot  find  symbol  entry	76	None	replace
119	[BUG]  [BUGGY]  handleCatch(n,  cfg,  name);  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  name);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  name);	  handleCatch(n,    cfg,    value);    	non-compiled	[CE]  cannot  find  symbol  name	76	None	replace
120	[BUG]  [BUGGY]  handleShouldBeCatch(n,  parent);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleShouldBeCatch(n,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleShouldBeCatch(n,  parent);	  handleShouldBeCatch(n);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
121	[BUG]  [BUGGY]  handleShouldbeCatch(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleShouldbeCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleShouldbeCatch(n);	  handleShouldBeCatch(n);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
122	[BUG]  [BUGGY]  handleShouldBeCATCH(n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleShouldBeCATCH(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleShouldBeCATCH(n);	  handleShouldBeCatch(n);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
123	[BUG]  [BUGGY]  handleEmbedded(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmbedded(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbedded(n);	  handleLabel(n);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
124	[BUG]  [BUGGY]  handleMatch(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleMatch(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleMatch(n);	  handleLabel(n);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
125	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "CATCH     ");    n.setString(   "CATCH     ");  n.setString( "CATCH   ");  n.setString( "CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	                n.setString(       "CATCH       ");        n.setString(   "CATCH       ");    n.setString( "CATCH   ");  n.setString( "CATCH ");	  	compilable	  [FE]  RuntimeException  	39	12	add
126	[BUG]  [BUGGY]          n.setString(     "CATCH     ");    n.setString(   "CATCH     ");  n.setString( "CATCH   ");  n.setString( "CATCH ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "CATCH     ");    n.setString(   "CATCH     ");  n.setString( "CATCH   ");  n.setString( "CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                n.setString(       "CATCH       ");        n.setString(   "CATCH       ");    n.setString( "CATCH   ");  n.setString( "CATCH ");	  	compilable	  [FE]  RuntimeException  	39	12	add
127	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	                NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  StackOverflowError  	95	12	add
128	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  StackOverflowError  	95	12	add
129	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  [CE]  'else'  without  'if'  [FE]      StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  }  else  {  NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  'else'  without  'if'	95	None	add
130	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  case  Token.EXPR_RESULT:  handleExpr(n);  [CE]  duplicate  case  label  [FE]        StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  case  Token.EXPR_RESULT:  handleExpr(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  case  Token.EXPR_RESULT:  handleExpr(n);	  	non-compiled	[CE]  duplicate  case  label	95	None	add
131	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  case  Token.EXPR_RESULT:  handleExpression(n);  [CE]  duplicate  case  label  [FE]          StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  case  Token.EXPR_RESULT:  handleExpression(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  case  Token.EXPR_RESULT:  handleExpression(n);	  	non-compiled	[CE]  duplicate  case  label	95	None	add
132	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  case  Token.EXPR_RESULT:  handleExtern(n);  [CE]  duplicate  case  label  [FE]            StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  case  Token.EXPR_RESULT:  handleExtern(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  case  Token.EXPR_RESULT:  handleExtern(n);	  	non-compiled	[CE]  duplicate  case  label	95	None	add
133	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  AstControlFlowGraph  <  Node>  traverse(compiler,  n,  this);  [CE]  ';'  expected  [FE]              StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  AstControlFlowGraph  <  Node>  traverse(compiler,  n,  this);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                NodeTraversal.traverse(compiler,    n,    this);    AstControlFlowGraph  <  Node>  traverse(compiler,  n,  this);	  	non-compiled	[CE]  ';'  expected	95	None	add
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleCatch(n);  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);    n    =    parent.getFirstChild();    handleCatch(n);  n  =  parent.getFirstChild();	  	compilable	  [FE]  AssertionFailedError  	59	3	add
135	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleCatch(n);  n  =  parent.getFirstChild();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleCatch(n);  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getFirstChild();    handleCatch(n);  n  =  parent.getFirstChild();	  	compilable	  [FE]  AssertionFailedError  	59	3	add
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleCatch(n);  n  =  parent.getLastChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);    n    =    parent.getFirstChild();    handleCatch(n);  n  =  parent.getLastChild();	  	compilable	  [FE]  AssertionFailedError  	59	3	add
137	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleCatch(n);  n  =  parent.getLastChild();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleCatch(n);  n  =  parent.getLastChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getFirstChild();    handleCatch(n);  n  =  parent.getLastChild();	  	compilable	  [FE]  AssertionFailedError  	59	3	add
138	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  HandleCatch(n);  n  =  parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  HandleCatch(n);  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getFirstChild();    HandleCatch(n);  n  =  parent.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
139	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleSatch(n);  n  =  parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleSatch(n);  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getFirstChild();    handleSatch(n);  n  =  parent.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
140	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleCatch(n);  n  =  parent.getNext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);    n    =    parent.getFirstChild();    handleCatch(n);  n  =  parent.getNext();	  	compilable	  [FE]  RuntimeException  	59	9	add
141	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleCatch(n);  n  =  parent.getNext();  [FE]  RuntimeException  [FE]            AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleCatch(n);  n  =  parent.getNext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getFirstChild();    handleCatch(n);  n  =  parent.getNext();	  	compilable	  [FE]  RuntimeException  	59	9	add
142	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  Node  n  =  parent.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  Node  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getFirstChild();    Node  n  =  parent.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	59	None	add
143	[BUG]  [BUGGY]  handleEscape(n);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEscape(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEscape(n);	  handleExpression(n);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
144	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  root);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Node)  [FE]        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  root);	  NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Node)	11	None	replace
145	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,int)  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);	  NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,int)	11	None	replace
146	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Node)  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  root,  parent);	  NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Node)	11	None	replace
147	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  value);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  value);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  value);	  NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  value	11	None	replace
148	[BUG]  [BUGGY]  handleChildrenWithCatch(n,  parent);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildrenWithCatch(n,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildrenWithCatch(n,  parent);	  handleChildrenWithCatch(n);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
149	[BUG]  [BUGGY]  handleChildrenWithCatch(n.getLastChild());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildrenWithCatch(n.getLastChild());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildrenWithCatch(n.getLastChild());	  handleChildrenWithCatch(n);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
150	[BUG]  [BUGGY]  handleChildrenWithCatch(n.getFirstChild());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildrenWithCatch(n.getFirstChild());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildrenWithCatch(n.getFirstChild());	  handleChildrenWithCatch(n);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getNext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);  n  =  parent.getNext();	  handleCatch(n);    n    =    parent.getParent();    	compilable	  [FE]  AssertionFailedError  	58	3	replace
152	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getNext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getNext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);  n  =  parent.getNext();	  handleCatch(n);    n    =    parent.getParent();    	compilable	  [FE]  AssertionFailedError  	58	3	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getLastChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);  n  =  parent.getLastChild();	  handleCatch(n);    n    =    parent.getParent();    	compilable	  [FE]  AssertionFailedError  	58	3	replace
154	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getLastChild();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getLastChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);  n  =  parent.getLastChild();	  handleCatch(n);    n    =    parent.getParent();    	compilable	  [FE]  AssertionFailedError  	58	3	replace
155	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);  n  =  parent.getType()  ==  Token.EXPR_RESULT;	  handleCatch(n);    n    =    parent.getParent();    	non-compiled	[CE]  incompatible  types	58	None	replace
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getParent();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);    n    =    parent.getParent();    handleCatch(n);  n  =  parent.getParent();	  	compilable	  [FE]  AssertionFailedError  	57	7	add
157	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getParent();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getParent();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getParent();    handleCatch(n);  n  =  parent.getParent();	  	compilable	  [FE]  AssertionFailedError  	57	7	add
158	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getNext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);    n    =    parent.getParent();    handleCatch(n);  n  =  parent.getNext();	  	compilable	  [FE]  RuntimeException  	57	10	add
159	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getNext();  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getNext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getParent();    handleCatch(n);  n  =  parent.getNext();	  	compilable	  [FE]  RuntimeException  	57	10	add
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getLastChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);    n    =    parent.getParent();    handleCatch(n);  n  =  parent.getLastChild();	  	compilable	  [FE]  AssertionFailedError  	57	7	add
161	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getLastChild();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getLastChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getParent();    handleCatch(n);  n  =  parent.getLastChild();	  	compilable	  [FE]  AssertionFailedError  	57	7	add
162	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getParent();  HandleCatch(n);  n  =  parent.getParent();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  HandleCatch(n);  n  =  parent.getParent();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getParent();    HandleCatch(n);  n  =  parent.getParent();	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
163	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleSatch(n);  n  =  parent.getParent();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleSatch(n);  n  =  parent.getParent();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getParent();    handleSatch(n);  n  =  parent.getParent();	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);    n    =    parent.getParent();    handleCatch(n);  n  =  parent.getFirstChild();	  	compilable	  [FE]  AssertionFailedError  	57	7	add
165	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getFirstChild();  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleCatch(n);  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getParent();    handleCatch(n);  n  =  parent.getFirstChild();	  	compilable	  [FE]  AssertionFailedError  	57	7	add
166	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "cATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "cATCH ");	          n.setString(       "CATCH       ");    n.setString(   "CATCH       ");    	compilable	  [FE]  RuntimeException  	40	12	replace
167	[BUG]  [BUGGY]  n.setString( "cATCH ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "cATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "cATCH ");	          n.setString(       "CATCH       ");    n.setString(   "CATCH       ");    	compilable	  [FE]  RuntimeException  	40	12	replace
168	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "ATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "ATCH ");	          n.setString(       "CATCH       ");    n.setString(   "CATCH       ");    	compilable	  [FE]  RuntimeException  	40	12	replace
169	[BUG]  [BUGGY]  n.setString( "ATCH ");  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "ATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "ATCH ");	          n.setString(       "CATCH       ");    n.setString(   "CATCH       ");    	compilable	  [FE]  RuntimeException  	40	12	replace
170	[BUG]  [BUGGY]  handleStatement(n);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleStatement(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleStatement(n);	  handleFunction(n);    handleStatement(n);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
171	[BUG]  [BUGGY]  handleFunction(t,  n);  [CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(t,  n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(t,  n);	  handleFunction(n);    handleStatement(n);    	non-compiled	[CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	70	None	replace
172	[BUG]  [BUGGY]  HandleCatch(n,  parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  parent);	  HandleCatch(n);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
173	[BUG]  [BUGGY]  HandleCatch(n,  cfg);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  cfg);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  cfg);	  HandleCatch(n);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
174	[BUG]  [BUGGY]  HandleCatch(n,  t);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  t);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  t);	  HandleCatch(n);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
175	[BUG]  [BUGGY]  handleEmptyObject(n);  return;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmptyObject(n);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmptyObject(n);  return;	  handleEmbeddedObject(n);    return;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
176	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(n,  parent);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.getCurrentContext(n,  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentContext(n,  parent);	  Context    cfg    =    Context.getCurrentContext(n);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
177	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.getCurrentContext(parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentContext(parent);	  Context    cfg    =    Context.getCurrentContext(n);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
178	[BUG]  [BUGGY]  Context  cfg  =  ContextUtil.getCurrentContext(n);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  ContextUtil.getCurrentContext(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  ContextUtil.getCurrentContext(n);	  Context    cfg    =    Context.getCurrentContext(n);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
179	[BUG]  [BUGGY]  handleCatch(t,  n,  parent,  cfg);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  parent,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  parent,  cfg);	  handleCatch(n,    parent,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	6	None	replace
180	[BUG]  [BUGGY]  handleCatch(n,  t,  parent,  cfg);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  t,  parent,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  t,  parent,  cfg);	  handleCatch(n,    parent,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	6	None	replace
181	[BUG]  [BUGGY]  handleCatch(n,  parent,  cfg,  t);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  cfg,  t);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  cfg,  t);	  handleCatch(n,    parent,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	6	None	replace
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  n.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);  n  =  n.getFirstChild();	  handleCatch(n);    n    =    parent.getFirstChild();    	compilable	  [FE]  AssertionFailedError  	60	3	replace
183	[BUG]  [BUGGY]  handleCatch(n);  n  =  n.getFirstChild();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  n.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);  n  =  n.getFirstChild();	  handleCatch(n);    n    =    parent.getFirstChild();    	compilable	  [FE]  AssertionFailedError  	60	3	replace
184	[BUG]  [BUGGY]  n.setString( "CATCH "  +  t.getMessage());  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH "  +  t.getMessage());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH "  +  t.getMessage());	  n.setString(   "CATCH   ",    t.getMessage());    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
185	[BUG]  [BUGGY]  t.setString( "CATCH ", "CATCH ");  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  t.setString( "CATCH ", "CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	t.setString( "CATCH ", "CATCH ");	  n.setString(   "CATCH   ",    t.getMessage());    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
186	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "match ");  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "match ");  n.setString( "catch ");	          n.setString(       "catch       ");    n.setString(       "catch       ");    	compilable	  [FE]  RuntimeException  	62	12	replace
187	[BUG]  [BUGGY]  n.setString( "match ");  n.setString( "catch ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "match ");  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "match ");  n.setString( "catch ");	          n.setString(       "catch       ");    n.setString(       "catch       ");    	compilable	  [FE]  RuntimeException  	62	12	replace
188	[BUG]  [BUGGY]  n.setString( "catch ",  n.getString());  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch ",  n.getString());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  n.getString());	          n.setString(       "catch       ");    n.setString(       "catch       ");    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	62	None	replace
189	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(t,  n,  parent);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.getCurrentContext(t,  n,  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentContext(t,  n,  parent);	  Context    cfg    =    Context.getCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
190	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.ACTIVE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.ACTIVE);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentContext(n,  Context.ACTIVE);	  Context    cfg    =    Context.getCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
191	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.GETPROP);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.GETPROP);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentContext(n,  Context.GETPROP);	  Context    cfg    =    Context.getCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
192	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.DISCONTINUATION);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.DISCONTINUATION);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentContext(n,  Context.DISCONTINUATION);	  Context    cfg    =    Context.getCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
193	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.GET_CATCH);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.GET_CATCH);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentContext(n,  Context.GET_CATCH);	  Context    cfg    =    Context.getCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
194	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  priorityComparator);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int,Comparator<DiGraphNode<Node,Branch>>)  [FE]        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  priorityComparator);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  astPositionCounter,  priorityComparator);	  NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int,Comparator<DiGraphNode<Node,Branch>>)	92	None	replace
195	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  exceptionHandler);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int,Deque<Node>)  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  astPositionCounter,  exceptionHandler);	  NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int,Deque<Node>)	92	None	replace
196	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  priorityCounter);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int,int)  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  priorityCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  astPositionCounter,  priorityCounter);	  NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int,int)	92	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(parent);  handleCatch(parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(parent);    handleCatch(parent);	  	compilable	  [FE]  AssertionFailedError  	77	3	add
198	[BUG]  [BUGGY]  handleCatch(parent);  handleCatch(parent);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(parent);  handleCatch(parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(parent);    handleCatch(parent);	  	compilable	  [FE]  AssertionFailedError  	77	3	add
199	[BUG]  [BUGGY]  handleCatch(parent);  HandleCatch(parent);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(parent);  HandleCatch(parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(parent);    HandleCatch(parent);	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
200	[BUG]  [BUGGY]  handleCatch(parent);  handleChild(parent);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(parent);  handleChild(parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(parent);    handleChild(parent);	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
201	[BUG]  [BUGGY]  handleCatch(parent);  handleCatch(parent);  return;  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(parent);  handleCatch(parent);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(parent);    handleCatch(parent);  return;	  	non-compiled	[CE]  unreachable  statement	77	None	add
202	[BUG]  [BUGGY]  handleCatch(parent);  handleSatch(parent);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(parent);  handleSatch(parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(parent);    handleSatch(parent);	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
203	[BUG]  [BUGGY]  handleCatchStatement(n,  parent.getFirstChild());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  parent.getFirstChild());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  parent.getFirstChild());	  handleCatchStatement(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
204	[BUG]  [BUGGY]  handleCatchStatement(n,  t.getFirstChild());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  t.getFirstChild());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  t.getFirstChild());	  handleCatchStatement(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
205	[BUG]  [BUGGY]  handleCatchStatement(n,  n.getFirstChild());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  n.getFirstChild());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  n.getFirstChild());	  handleCatchStatement(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
206	[BUG]  [BUGGY]  handleCatchStatement(n.getFirstChild(),  n);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n.getFirstChild(),  n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n.getFirstChild(),  n);	  handleCatchStatement(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
207	[BUG]  [BUGGY]  Context  cfg  =  t.n.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.n.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.n.getCurrentScope();	  Context    cfg    =    parent.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
208	[BUG]  [BUGGY]  Context  cfg  =  t,  parent.getCurrentScope();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t,  parent.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t,  parent.getCurrentScope();	  Context    cfg    =    parent.getCurrentScope();    	non-compiled	[CE]  ';'  expected	10	None	replace
209	[BUG]  [BUGGY]  handleCategory(n,  parent);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCategory(n,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCategory(n,  parent);	  handleCategory(n);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
210	[BUG]  [BUGGY]  handleCategory(parent);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCategory(parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCategory(parent);	  handleCategory(n);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
211	[BUG]  [BUGGY]  handleCategory(t,  n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCategory(t,  n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCategory(t,  n);	  handleCategory(n);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleCatch(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleExpr(n);    handleCatch(n);	  	compilable	  [FE]  AssertionFailedError  	45	7	add
213	[BUG]  [BUGGY]  handleExpr(n);  handleCatch(n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleCatch(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);    handleCatch(n);	  	compilable	  [FE]  AssertionFailedError  	45	7	add
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleExpr(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleExpr(n);    handleExpr(n);	  	compilable	  [FE]  AssertionFailedError  	45	7	add
215	[BUG]  [BUGGY]  handleExpr(n);  handleExpr(n);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleExpr(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);    handleExpr(n);	  	compilable	  [FE]  AssertionFailedError  	45	7	add
216	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleFunction(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleExpr(n);    handleFunction(n);	  	compilable	  [FE]  RuntimeException  	45	12	add
217	[BUG]  [BUGGY]  handleExpr(n);  handleFunction(n);  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleFunction(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);    handleFunction(n);	  	compilable	  [FE]  RuntimeException  	45	12	add
218	[BUG]  [BUGGY]  handleExpr(n);  handleCATCH(n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleCATCH(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);    handleCATCH(n);	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
219	[BUG]  [BUGGY]  handleExpr(n);  handleCatch(n);  return;  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleCatch(n);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);    handleCatch(n);  return;	  	non-compiled	[CE]  unreachable  statement	45	None	add
220	[BUG]  [BUGGY]  handleExpr(n);  handleEmbedded(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleEmbedded(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);    handleEmbedded(n);	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
221	[BUG]  [BUGGY]  handleCatchBy(n);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchBy(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchBy(n);	  handleFunction(n);    handleEmbeddedBy(n);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
222	[BUG]  [BUGGY]  handleFunctionBy(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunctionBy(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunctionBy(n);	  handleFunction(n);    handleEmbeddedBy(n);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
223	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.removeChild(parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.removeChild(parent);	  handleFunction(n);    handleFunction(n);    	compilable	  [FE]  RuntimeException  	21	12	replace
224	[BUG]  [BUGGY]  n.removeChild(parent);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.removeChild(parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.removeChild(parent);	  handleFunction(n);    handleFunction(n);    	compilable	  [FE]  RuntimeException  	21	12	replace
225	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.removeChild(parent);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.removeChild(parent);  handleCatch(n);	  handleFunction(n);    handleFunction(n);    	compilable	  [FE]  RuntimeException  	21	12	replace
226	[BUG]  [BUGGY]  n.removeChild(parent);  handleCatch(n);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.removeChild(parent);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.removeChild(parent);  handleCatch(n);	  handleFunction(n);    handleFunction(n);    	compilable	  [FE]  RuntimeException  	21	12	replace
227	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "match   ");  n.setString(   "match   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString(   "match   ");    n.setString(   "match   ");	  	compilable	  [FE]  RuntimeException  	73	12	add
228	[BUG]  [BUGGY]  n.setString(   "match   ");  n.setString(   "match   ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "match   ");  n.setString(   "match   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "match   ");    n.setString(   "match   ");	  	compilable	  [FE]  RuntimeException  	73	12	add
229	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "match   ");  n.setString( ",match   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString(   "match   ");    n.setString( ",match   ");	  	compilable	  [FE]  RuntimeException  	73	12	add
230	[BUG]  [BUGGY]  n.setString(   "match   ");  n.setString( ",match   ");  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "match   ");  n.setString( ",match   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "match   ");    n.setString( ",match   ");	  	compilable	  [FE]  RuntimeException  	73	12	add
231	[BUG]  [BUGGY]  n.setString(   "match   ");  n.setString(   "match "));  [CE]  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "match   ");  n.setString(   "match "));  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "match   ");    n.setString(   "match "));	  	non-compiled	[CE]  	73	None	add
232	[BUG]  [BUGGY]  handleEmbeddedBy(n,  parent);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmbeddedBy(n,  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedBy(n,  parent);	  handleEmbeddedBy(n);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
233	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "CATCH     ");    n.setString(   ",CATCH     ");  n.setString(   "CATCH   ");  n.setString( ",CATCH   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	                n.setString(       "CATCH       ");        n.setString(   ",CATCH       ");    n.setString(   "CATCH   ");  n.setString( ",CATCH   ");	  	compilable	  [FE]  RuntimeException  	42	12	add
234	[BUG]  [BUGGY]          n.setString(     "CATCH     ");    n.setString(   ",CATCH     ");  n.setString(   "CATCH   ");  n.setString( ",CATCH   ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "CATCH     ");    n.setString(   ",CATCH     ");  n.setString(   "CATCH   ");  n.setString( ",CATCH   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                n.setString(       "CATCH       ");        n.setString(   ",CATCH       ");    n.setString(   "CATCH   ");  n.setString( ",CATCH   ");	  	compilable	  [FE]  RuntimeException  	42	12	add
235	[BUG]  [BUGGY]  handleField(n);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleField(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleField(n);	  handleFunction(n);    handleField(n);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
236	[BUG]  [BUGGY]  n.setString( "CATCH ");  n.setString( "catch "));  [CE]  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH ");  n.setString( "catch "));  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ");  n.setString( "catch "));	          n.setString(       "catch       ");    n.setString(       "catch   "));    	non-compiled	[CE]  	63	None	replace
237	[BUG]  [BUGGY]  Context.checkState(parent.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  Context  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(parent.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  Context	12	None	replace
238	[BUG]  [BUGGY]  Context.checkState(n.getType()!=  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  Context  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()!=  Token.EXPR_RESULT);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()!=  Token.EXPR_RESULT);	  Context.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  Context	12	None	replace
239	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  Context  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  Context	12	None	replace
240	[BUG]  [BUGGY]  Context.checkState(n,  parent.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  Context  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n,  parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n,  parent.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  Context	12	None	replace
241	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  AstControlFlowGraph  <  Node>());  [CE]  type  AstControlFlowGraph  does  not  take  parameters  [FE]        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  AstControlFlowGraph  <  Node>());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  AstControlFlowGraph  <  Node>());	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph    <    Node>());    	non-compiled	[CE]  type  AstControlFlowGraph  does  not  take  parameters	82	None	replace
242	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  handleCatch(n));  [CE]  'void'  type  not  allowed  here  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  handleCatch(n));  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  handleCatch(n));	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph    <    Node>());    	non-compiled	[CE]  'void'  type  not  allowed  here	82	None	replace
243	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  handleCatch(n);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  handleCatch(n);	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph    <    Node>());    	non-compiled	[CE]  ')'  expected	82	None	replace
244	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  handleCatch(n),  new  AstControlFlowGraph  <  Node>());  [CE]  'void'  type  not  allowed  here  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  handleCatch(n),  new  AstControlFlowGraph  <  Node>());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  handleCatch(n),  new  AstControlFlowGraph  <  Node>());	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph    <    Node>());    	non-compiled	[CE]  'void'  type  not  allowed  here	82	None	replace
245	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph  <  Node>(),  parent);  [CE]  type  AstControlFlowGraph  does  not  take  parameters  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph  <  Node>(),  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph  <  Node>(),  parent);	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph    <    Node>());    	non-compiled	[CE]  type  AstControlFlowGraph  does  not  take  parameters	82	None	replace
246	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);        handleFunction(n);    handleCatch(n);	  	compilable	  [FE]  RuntimeException  	20	12	add
247	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleCatch(n);	  	compilable	  [FE]  RuntimeException  	20	12	add
248	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleFunction(n);  handleFunction(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);        handleFunction(n);    handleFunction(n);  handleFunction(n);	  	compilable	  [FE]  RuntimeException  	20	12	add
249	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleFunction(n);  handleFunction(n);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleFunction(n);  handleFunction(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleFunction(n);  handleFunction(n);	  	compilable	  [FE]  RuntimeException  	20	12	add
250	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleCATCH(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCATCH(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleCATCH(n);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
251	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  n.removeChild(parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);        handleFunction(n);    handleCatch(n);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	20	12	add
252	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  n.removeChild(parent);  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  n.removeChild(parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleCatch(n);  n.removeChild(parent);	  	compilable	  [FE]  RuntimeException  	20	12	add
253	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleFunction(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);        handleFunction(n);    handleFunction(n);  handleCatch(n);	  	compilable	  [FE]  RuntimeException  	20	12	add
254	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleFunction(n);  handleCatch(n);  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleFunction(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleFunction(n);  handleCatch(n);	  	compilable	  [FE]  RuntimeException  	20	12	add
255	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  n  =  parent.getFirstChild();  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);        handleFunction(n);    handleCatch(n);  n  =  parent.getFirstChild();	  	compilable	  [FE]  RuntimeException  	20	12	add
256	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  n  =  parent.getFirstChild();  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  n  =  parent.getFirstChild();  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleCatch(n);  n  =  parent.getFirstChild();	  	compilable	  [FE]  RuntimeException  	20	12	add
257	[BUG]  [BUGGY]  handleChildren(t,  n,  parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildren(t,  n,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(t,  n,  parent);	  handleChildren(t,    n);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
258	[BUG]  [BUGGY]  handleCatch(t,  n);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n);	  handleChildren(t,    n);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	3	None	replace
259	[BUG]  [BUGGY]  handleChildren(n,  t);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildren(n,  t);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n,  t);	  handleChildren(t,    n);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
260	[BUG]  [BUGGY]  handleChildren(t,  n,  root);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildren(t,  n,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(t,  n,  root);	  handleChildren(t,    n);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
261	[BUG]  [BUGGY]  handleEmbeddedBlock(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmbeddedBlock(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedBlock(n);	  handleFunction(n);    handleEmbeddedBlock(n);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
262	[BUG]  [BUGGY]  handleCatchBlock(n);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchBlock(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchBlock(n);	  handleFunction(n);    handleEmbeddedBlock(n);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
263	[BUG]  [BUGGY]  n.setString(t.getSourceName(),   "CATCH ");  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(t.getSourceName(),   "CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(t.getSourceName(),   "CATCH ");	  n.setString(   "CATCH   ",    t.getSourceName());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	15	None	replace
264	[BUG]  [BUGGY]  n.setString( "CATCH "  +  name,  t.getSourceName());  [CE]  cannot  find  symbol  name  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH "  +  name,  t.getSourceName());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH "  +  name,  t.getSourceName());	  n.setString(   "CATCH   ",    t.getSourceName());    	non-compiled	[CE]  cannot  find  symbol  name	15	None	replace
265	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH "  +  t.getSourceName());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "CATCH "  +  t.getSourceName());	  n.setString(   "CATCH   ",    t.getSourceName());    	compilable	  [FE]  RuntimeException  	15	12	replace
266	[BUG]  [BUGGY]  n.setString( "CATCH "  +  t.getSourceName());  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH "  +  t.getSourceName());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH "  +  t.getSourceName());	  n.setString(   "CATCH   ",    t.getSourceName());    	compilable	  [FE]  RuntimeException  	15	12	replace
267	[BUG]  [BUGGY]  n.setString(t.getSourceName(),  n);  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(t.getSourceName(),  n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(t.getSourceName(),  n);	  n.setString(   "CATCH   ",    t.getSourceName());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	15	None	replace
268	[BUG]  [BUGGY]  handleFall(n);  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFall(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFall(n);	  handleFunction(n);    handleCatch(n);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
269	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);        handleCatch(n);    handleFunction(n);  handleCatch(n);	  	compilable	  [FE]  RuntimeException  	18	12	add
270	[BUG]  [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleCatch(n);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleCatch(n);    handleFunction(n);  handleCatch(n);	  	compilable	  [FE]  RuntimeException  	18	12	add
271	[BUG]  [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleChildren(n);  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleChildren(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleCatch(n);    handleFunction(n);  handleChildren(n);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
272	[BUG]  [BUGGY]  handleFunction(n);    handleCatch(n);  handleStatement(n);  handleCatch(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleStatement(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleCatch(n);    handleStatement(n);  handleCatch(n);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
273	[BUG]  [BUGGY]  handleFunction(n);    handleCatch(n);  handleField(n);  handleField(n);  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleField(n);  handleField(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleCatch(n);    handleField(n);  handleField(n);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
274	[BUG]  [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleSatch(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleSatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleCatch(n);    handleFunction(n);  handleSatch(n);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
275	[BUG]  [BUGGY]  handleFunction(n);    handleCatch(n);  handleMatch(n);  handleCatch(n);  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleMatch(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleCatch(n);    handleMatch(n);  handleCatch(n);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
276	[BUG]  [BUGGY]  n.setString(, "CATCH ");  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(, "CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(, "CATCH ");	          n.setString(       "CATCH       ");    n.setString(,   "CATCH       ");    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
277	[BUG]  [BUGGY]  n.setString( ",   "CATCH ");  [CE]  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( ",   "CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( ",   "CATCH ");	          n.setString(       "CATCH       ");    n.setString(,   "CATCH       ");    	non-compiled	[CE]  	41	None	replace
278	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  root);  return;  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Node)  [FE]        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  root);  return;  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  root);  return;	          NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Node)	47	None	replace
279	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  parent);  return;  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Node)  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  parent);  return;  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  root,  parent);  return;	          NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Node)	47	None	replace
280	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  return;  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,int)  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  return;  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  return;	          NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,int)	47	None	replace
281	[BUG]  [BUGGY]  handleCatch(t,  n,  root,  cfg);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  root,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  root,  cfg);	  handleCatch(t,    n,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	7	None	replace
282	[BUG]  [BUGGY]  handleCatch(n,  t,  cfg);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  t,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  t,  cfg);	  handleCatch(t,    n,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	7	None	replace
283	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "catch ");  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	                n.setString(       "catch       ");        n.setString(       "catch       ");    n.setString( "catch ");  n.setString( "catch ");	  	compilable	  [FE]  RuntimeException  	61	12	add
284	[BUG]  [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "catch ");  n.setString( "catch ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "catch ");  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                n.setString(       "catch       ");        n.setString(       "catch       ");    n.setString( "catch ");  n.setString( "catch ");	  	compilable	  [FE]  RuntimeException  	61	12	add
285	[BUG]  [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "catch ",  n.getString());  n.setString( "catch ");  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "catch ",  n.getString());  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                n.setString(       "catch       ");        n.setString(       "catch       ");    n.setString( "catch ",  n.getString());  n.setString( "catch ");	  	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	61	None	add
286	[BUG]  [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "catch ".);  n.setString( "catch ");  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "catch ".);  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                n.setString(       "catch       ");        n.setString(       "catch       ");    n.setString( "catch ".);  n.setString( "catch ");	  	non-compiled	[CE]  <identifier>  expected	61	None	add
287	[BUG]  [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "catch ",  n.setString( "catch ");  [CE]  [FE]          RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "catch ",  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                n.setString(       "catch       ");        n.setString(       "catch       ");    n.setString( "catch ",  n.setString( "catch ");	  	non-compiled	[CE]  	61	None	add
288	[BUG]  [BUGGY]  handleCatch(n,  n,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  n,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  n,  exceptionHandler);	  handleCatch(n,    parent,    exceptionHandler);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	79	None	replace
289	[BUG]  [BUGGY]  handleCatch(n,  n,  parent,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  n,  parent,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  n,  parent,  exceptionHandler);	  handleCatch(n,    parent,    exceptionHandler);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	79	None	replace
290	[BUG]  [BUGGY]  handleCatch(n,  parent,  astPositionCounter,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  astPositionCounter,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  astPositionCounter,  exceptionHandler);	  handleCatch(n,    parent,    exceptionHandler);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	79	None	replace
291	[BUG]  [BUGGY]  handleCatch(n,  cfg,  parent,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  parent,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  parent,  exceptionHandler);	  handleCatch(n,    parent,    exceptionHandler);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	79	None	replace
292	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  AstControlFlowGraph());  [CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  AstControlFlowGraph());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  AstControlFlowGraph());	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;	83	None	replace
293	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  handleCatch(n,  new  AstControlFlowGraph());  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  handleCatch(n,  new  AstControlFlowGraph());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  handleCatch(n,  new  AstControlFlowGraph());	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  ')'  expected	83	None	replace
294	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  new  AstControlFlowGraph());  [CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  new  AstControlFlowGraph());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  astPositionCounter,  new  AstControlFlowGraph());	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;	83	None	replace
295	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  new  AstControlFlowGraph());  [CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  new  AstControlFlowGraph());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  root,  new  AstControlFlowGraph());	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;	83	None	replace
296	[BUG]  [BUGGY]  handleChildWith(n,  parent);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildWith(n,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildWith(n,  parent);	  handleChildWith(n);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
297	[BUG]  [BUGGY]  handleCatchWith(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchWith(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchWith(n);	  handleChildWith(n);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
298	[BUG]  [BUGGY]  handleChildWith(n,  cfg);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildWith(n,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildWith(n,  cfg);	  handleChildWith(n);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
299	[BUG]  [BUGGY]  handleChildAfter(n,  parent);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildAfter(n,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildAfter(n,  parent);	  handleChildAfter(n);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
300	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentContext(context);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentContext(context);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentContext(context);	  Context    cfg    =    Context.getCurrentContext(t);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
301	[BUG]  [BUGGY]  handleChildCount(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildCount(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildCount(n);	  handleCount(n);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
302	[BUG]  [BUGGY]  handleCount(n,  parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCount(n,  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCount(n,  parent);	  handleCount(n);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
303	[BUG]  [BUGGY]  handleStandardFunction(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleStandardFunction(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleStandardFunction(n);	  handleFunction(n);    handleStandardFunction(n);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
304	[BUG]  [BUGGY]  handleCatchFunction(n);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchFunction(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchFunction(n);	  handleFunction(n);    handleStandardFunction(n);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
305	[BUG]  [BUGGY]  handleCatchStatement(n,  parent,  t);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  parent,  t);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  parent,  t);	  handleCatchStatement(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
306	[BUG]  [BUGGY]  handleCatchStatement(n,  parent,  cfg);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  parent,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  parent,  cfg);	  handleCatchStatement(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
307	[BUG]  [BUGGY]  handleCatchStatement(n,  parent,  astPositionCounter);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  parent,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  parent,  astPositionCounter);	  handleCatchStatement(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
308	[BUG]  [BUGGY]  handleCatchStatement(n,  parent,  nodePriorities);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  parent,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  parent,  nodePriorities);	  handleCatchStatement(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
309	[BUG]  [BUGGY]  handleFunction(t,  n,  parent);  [CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(t,  n,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(t,  n,  parent);	  handleFunction(n,    parent);    	non-compiled	[CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	26	None	replace
310	[BUG]  [BUGGY]  handleFunction(n,  parent,  cfg);  [CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n,  parent,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n,  parent,  cfg);	  handleFunction(n,    parent);    	non-compiled	[CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	26	None	replace
311	[BUG]  [BUGGY]  handleFunction(n,  cfg,  parent);  [CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n,  cfg,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n,  cfg,  parent);	  handleFunction(n,    parent);    	non-compiled	[CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	26	None	replace
312	[BUG]  [BUGGY]  handleFunction(n,  parent,  astPositionCounter);  [CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n,  parent,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n,  parent,  astPositionCounter);	  handleFunction(n,    parent);    	non-compiled	[CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	26	None	replace
313	[BUG]  [BUGGY]  handleFunction(n,  parent,  t);  [CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n,  parent,  t);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n,  parent,  t);	  handleFunction(n,    parent);    	non-compiled	[CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	26	None	replace
314	[BUG]  [BUGGY]  handleCatch(n,  cfg,  parent,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  parent,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  parent,  astPositionCounter);	  handleCatch(n,    cfg,    parent);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	4	None	replace
315	[BUG]  [BUGGY]  handleCatch(n,  cfg,  entry,  parent);  [CE]  cannot  find  symbol  entry  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  entry,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  entry,  parent);	  handleCatch(n,    cfg,    parent);    	non-compiled	[CE]  cannot  find  symbol  entry	4	None	replace
316	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentScope(t,  n,  parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.getCurrentScope(t,  n,  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentScope(t,  n,  parent);	  Context    cfg    =    Context.getCurrentScope(t,    n);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
317	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentScope(n,  Context.ACTIVE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentScope(n,  Context.ACTIVE);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentScope(n,  Context.ACTIVE);	  Context    cfg    =    Context.getCurrentScope(t,    n);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
318	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentScope(n,  Context.DISCONTINUATION);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentScope(n,  Context.DISCONTINUATION);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentScope(n,  Context.DISCONTINUATION);	  Context    cfg    =    Context.getCurrentScope(t,    n);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
319	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentScope(n,  Context.GETPROP);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentScope(n,  Context.GETPROP);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentScope(n,  Context.GETPROP);	  Context    cfg    =    Context.getCurrentScope(t,    n);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
320	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentScope(n,  Context.ACTIVITY);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentScope(n,  Context.ACTIVITY);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentScope(n,  Context.ACTIVITY);	  Context    cfg    =    Context.getCurrentScope(t,    n);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
321	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  astPositionCounter);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,ControlFlowAnalysis,int)  [FE]    StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  this,  astPositionCounter);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,ControlFlowAnalysis,int)	96	None	replace
322	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  nodePriorities);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,ControlFlowAnalysis,Map<DiGraphNode<Node,Branch>,Integer>)  [FE]      StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  this,  nodePriorities);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,ControlFlowAnalysis,Map<DiGraphNode<Node,Branch>,Integer>)	96	None	replace
323	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,ControlFlowAnalysis,Node)  [FE]        StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  this,  parent);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,ControlFlowAnalysis,Node)	96	None	replace
324	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	NodeTraversal.traverse(compiler,  n,  null);	          NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	96	12	replace
325	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [FE]  RuntimeException  [FE]          StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  null);	          NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	96	12	replace
326	[BUG]  [BUGGY]  handleCatch(n,  cfg,  root,  parent);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  root,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  root,  parent);	  handleCatch(n,    cfg,    root);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	5	None	replace
327	[BUG]  [BUGGY]  handleCatch(n,  cfg,  root,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  root,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  root,  astPositionCounter);	  handleCatch(n,    cfg,    root);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	5	None	replace
328	[BUG]  [BUGGY]  handleCatch(n,  cfg,  root,  value);  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  root,  value);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  root,  value);	  handleCatch(n,    cfg,    root);    	non-compiled	[CE]  cannot  find  symbol  value	5	None	replace
329	[BUG]  [BUGGY]  handleCatch(n,  parent,  cfg,  root);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  cfg,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  cfg,  root);	  handleCatch(n,    cfg,    root);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	5	None	replace
330	[BUG]  [BUGGY]  handleCatch(t,  n,  cfg,  root);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  cfg,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  cfg,  root);	  handleCatch(n,    cfg,    root);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	5	None	replace
331	[BUG]  [BUGGY]  n.setString( "catch ".equals(Token.CATCH));  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch ".equals(Token.CATCH));  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ".equals(Token.CATCH));	  n.setString(   "catch:   ");    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	50	None	replace
332	[BUG]  [BUGGY]  handleCategoryFunction(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCategoryFunction(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCategoryFunction(n);	  handleCategory(n);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
333	[BUG]  [BUGGY]  Context  cfg  =  _context.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  _context.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  _context.getCurrentScope();	  Context    cfg    =    context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
334	[BUG]  [BUGGY]  handleCatalog(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatalog(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatalog(n);	  handleCat(n);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
335	[BUG]  [BUGGY]  n.setString(   "catch:   ");  n.setString(   "catch: ",);  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "catch:   ");  n.setString(   "catch: ",);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "catch:   ");    n.setString(   "catch: ",);	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
336	[BUG]  [BUGGY]  Context  cfg  =  n,  parent.getCurrentScope();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  n,  parent.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  n,  parent.getCurrentScope();	  Context    cfg    =    parent.getCurrentScope();    	non-compiled	[CE]  ';'  expected	10	None	replace
337	[BUG]  [BUGGY]  Context  cfg  =  node.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  node.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  node.getCurrentScope();	  Context    cfg    =    parent.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
338	[BUG]  [BUGGY]  n.setString( "match ".equals(parent.getString()));  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "match ".equals(parent.getString()));  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "match ".equals(parent.getString()));	  n.setString(   "match   ");    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	74	None	replace
339	[BUG]  [BUGGY]  n.setString( "match ".equals(getCatchName()));  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "match ".equals(getCatchName()));  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "match ".equals(getCatchName()));	  n.setString(   "match   ");    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
340	[BUG]  [BUGGY]  handleCatchStatement(n,  cfg.getFirstChild());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  cfg.getFirstChild());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  cfg.getFirstChild());	  handleCatchStatement(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
341	[BUG]  [BUGGY]  Context  cfg  =  t.node.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.node.getCurrentContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.node.getCurrentContext();	  Context    cfg    =    t.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
342	[BUG]  [BUGGY]  HandleCatch(n,  handleCatch(n);  return;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  handleCatch(n);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  handleCatch(n);  return;	  HandleCatch(n,    parent);    return;    	non-compiled	[CE]  ')'  expected	30	None	replace
343	[BUG]  [BUGGY]  HandleCatch(n,  parent.getParent());  return;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  parent.getParent());  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  parent.getParent());  return;	  HandleCatch(n,    parent);    return;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
344	[BUG]  [BUGGY]  n.setString(   "CATCH:   ");  n.setString( "CATCH: ",);  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "CATCH:   ");  n.setString( "CATCH: ",);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "CATCH:   ");    n.setString( "CATCH: ",);	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
345	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  n);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  root,  n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  root,  n);	  NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	13	None	replace
346	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH,  parent);  return;  [CE]  cannot  find  symbol  Context  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH,  parent);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.CATCH,  parent);  return;	  Context.checkState(n.getType()    ==    Token.CATCH);    return;    	non-compiled	[CE]  cannot  find  symbol  Context	31	None	replace
347	[BUG]  [BUGGY]  handleFunction(n,  parent,  nodePriorities);  [CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n,  parent,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n,  parent,  nodePriorities);	  handleFunction(n,    parent);    	non-compiled	[CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	26	None	replace
348	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  root);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,ControlFlowAnalysis,Node)  [FE]    StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  this,  root);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,ControlFlowAnalysis,Node)	96	None	replace
349	[BUG]  [BUGGY]  handleCatch(t,  n,  parent,  value);  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  parent,  value);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  parent,  value);	  handleCatch(t,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  value	100	None	replace
350	[BUG]  [BUGGY]  handleCatch(n,  root,  cfg);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  root,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  root,  cfg);	  handleCatch(n,    cfg,    value);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	76	None	replace
351	[BUG]  [BUGGY]  handleCatch(n,  root,  value);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  root,  value);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  root,  value);	  handleCatch(n,    cfg,    value);    	non-compiled	[CE]  cannot  find  symbol  value	76	None	replace
352	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities,  root);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Map<DiGraphNode<Node,Branch>,Integer>,Node)  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  nodePriorities,  root);	  NodeTraversal.traverse(compiler,    n,    nodePriorities);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Map<DiGraphNode<Node,Branch>,Integer>,Node)	84	None	replace
353	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  handleFunction(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);        handleFunction(n);    handleCatch(n);  handleFunction(n);	  	compilable	  [FE]  RuntimeException  	20	12	add
354	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  handleFunction(n);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  handleFunction(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleCatch(n);  handleFunction(n);	  	compilable	  [FE]  RuntimeException  	20	12	add
355	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);        handleFunction(n);    handleCatch(n);  handleCatch(n);	  	compilable	  [FE]  RuntimeException  	20	12	add
356	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  handleCatch(n);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleCatch(n);  handleCatch(n);	  	compilable	  [FE]  RuntimeException  	20	12	add
357	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleEmbeddedObject(n);  handleEmbeddedObject(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleEmbeddedObject(n);  handleEmbeddedObject(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleEmbeddedObject(n);  handleEmbeddedObject(n);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
358	[BUG]  [BUGGY]  Context  cfg  =  Context.currentContext().createCurrentContext(t,  n);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.currentContext().createCurrentContext(t,  n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.currentContext().createCurrentContext(t,  n);	  Context    cfg    =    Context.createCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
359	[BUG]  [BUGGY]  handleChildBeCatch(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildBeCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildBeCatch(n);	  handleShouldBeCatch(n);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
360	[BUG]  [BUGGY]  n.setString( "catch "  +  name,  t.getSourceName());  [CE]  cannot  find  symbol  name  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch "  +  name,  t.getSourceName());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch "  +  name,  t.getSourceName());	  n.setString(   "catch   ",    t.getSourceName());    	non-compiled	[CE]  cannot  find  symbol  name	48	None	replace
361	[BUG]  [BUGGY]  handleCatchStatement(n,  parent,  exceptionHandler);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  parent,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  parent,  exceptionHandler);	  handleCatchStatement(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
362	[BUG]  [BUGGY]  n.setSourceName( "catch ");  n.setString( "catch ");  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setSourceName( "catch ");  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setSourceName( "catch ");  n.setString( "catch ");	          n.setString(       "catch       ");    n.setString(       "catch       ");    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
363	[BUG]  [BUGGY]  n.setSourceName( "catch ");  n.setSourceName( "catch ");  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setSourceName( "catch ");  n.setSourceName( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setSourceName( "catch ");  n.setSourceName( "catch ");	          n.setString(       "catch       ");    n.setString(       "catch       ");    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
364	[BUG]  [BUGGY]  HandleCatch(n,  handleCatch(n));  [CE]  'void'  type  not  allowed  here  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  handleCatch(n));  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  handleCatch(n));	  HandleCatch(n);    	non-compiled	[CE]  'void'  type  not  allowed  here	89	None	replace
365	[BUG]  [BUGGY]  handleCatch(n,  parent,  exceptionHandler,  priorityCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  exceptionHandler,  priorityCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  exceptionHandler,  priorityCounter);	  handleCatch(n,    parent,    exceptionHandler);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	79	None	replace
366	[BUG]  [BUGGY]  handleCatch(n,  parent,  exceptionHandler,  name);  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  exceptionHandler,  name);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  exceptionHandler,  name);	  handleCatch(n,    parent,    exceptionHandler);    	non-compiled	[CE]  cannot  find  symbol  name	79	None	replace
367	[BUG]  [BUGGY]  handleKey(n);  n  =  parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleKey(n);  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleKey(n);  n  =  parent.getFirstChild();	  handleCatch(n);    n    =    parent.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
368	[BUG]  [BUGGY]  Context  cfg  =  _tvContext.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  _tvContext.getCurrentContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  _tvContext.getCurrentContext();	  Context    cfg    =    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
369	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT,  handleCatch);  [CE]  cannot  find  symbol  handleCatch  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT,  handleCatch);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.EXPR_RESULT,  handleCatch);	  Context.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  handleCatch	12	None	replace
370	[BUG]  [BUGGY]  handleAccuracy(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleAccuracy(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleAccuracy(n);	  handleFunction(n);    handleEmbeddedObject(n);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
371	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AstControlFlowGraph());  [CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AstControlFlowGraph());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  this,  new  AstControlFlowGraph());	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;	83	None	replace
372	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  handleCatch(n,  new  AstControlFlowGraph()));  [CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  handleCatch(n,  new  AstControlFlowGraph()));  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  handleCatch(n,  new  AstControlFlowGraph()));	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;	83	None	replace
373	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(t,  parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.getCurrentContext(t,  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentContext(t,  parent);	  Context    cfg    =    Context.getCurrentContext(t);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
374	[BUG]  [BUGGY]  handleCatch(n,  parent,  priorityCounter,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  priorityCounter,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  priorityCounter,  astPositionCounter);	  handleCatch(n,    parent,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	33	None	replace
375	[BUG]  [BUGGY]  handleCatch(n,  parent,  priorityCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  priorityCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  priorityCounter);	  handleCatch(n,    parent,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	33	None	replace
376	[BUG]  [BUGGY]  handleCatch(n,  parent,  priorityCounter,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  priorityCounter,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  priorityCounter,  exceptionHandler);	  handleCatch(n,    parent,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	33	None	replace
377	[BUG]  [BUGGY]  handleChildWithCatch(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildWithCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildWithCatch(n);	  handleChildrenWithCatch(n);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
378	[BUG]  [BUGGY]  handleChildrenWithCATCH(n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildrenWithCATCH(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildrenWithCATCH(n);	  handleChildrenWithCatch(n);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
379	[BUG]  [BUGGY]  Context  cfg  =  Context.current().getCurrentContext(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.current().getCurrentContext(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.current().getCurrentContext(n);	  Context    cfg    =    Context.getCurrentContext(n);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
380	[BUG]  [BUGGY]  handleEmbeddedByLabel(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleEmbeddedByLabel(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleEmbeddedByLabel(n);	  handleFunction(n);    handleEmbeddedByName(n);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
381	[BUG]  [BUGGY]  handleCatch(n,  parent,  t,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  t,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  t,  exceptionHandler);	  handleCatch(n,    parent,    t);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	32	None	replace
382	[BUG]  [BUGGY]  Context  cfg  =  t.currentScope.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.currentScope.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.currentScope.getCurrentScope();	  Context    cfg    =    t.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
383	[BUG]  [BUGGY]  Context  cfg  =  t.node.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.node.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.node.getCurrentScope();	  Context    cfg    =    t.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
384	[BUG]  [BUGGY]  handleExpr(n);  handleEmbeddedObject(n);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleEmbeddedObject(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);    handleEmbeddedObject(n);	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
385	[BUG]  [BUGGY]  handleExpr(n);  handleKey(n);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleKey(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);    handleKey(n);	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
386	[BUG]  [BUGGY]  n.setString(1,   "CATCH ");  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(1,   "CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(1,   "CATCH ");	          n.setString(       "CATCH       ");    n.setString(,   "CATCH       ");    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	41	None	replace
387	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleChild(n);  n  =  parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleChild(n);  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getFirstChild();    handleChild(n);  n  =  parent.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
388	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleAccuracy(n);  n  =  parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handleAccuracy(n);  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getFirstChild();    handleAccuracy(n);  n  =  parent.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
389	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  return;  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)  [FE]        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  return;  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  root);  return;	          NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node)	47	None	replace
390	[BUG]  [BUGGY]  handleCatch(n,  cfg,  nodePriorities,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  nodePriorities,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  nodePriorities,  astPositionCounter);	  handleCatch(n,    cfg,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	102	None	replace
391	[BUG]  [BUGGY]  handleCatch(n,  cfg,  key,  astPositionCounter);  [CE]  cannot  find  symbol  key  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  key,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  key,  astPositionCounter);	  handleCatch(n,    cfg,    astPositionCounter);    	non-compiled	[CE]  cannot  find  symbol  key	102	None	replace
392	[BUG]  [BUGGY]  handleCatch(n,  cfg,  exceptionHandler,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  exceptionHandler,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  exceptionHandler,  astPositionCounter);	  handleCatch(n,    cfg,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	102	None	replace
393	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH,  parent);  [CE]  cannot  find  symbol  Context  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH,  parent);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.CATCH,  parent);	  Context.checkState(n.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  Context	14	None	replace
394	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH,  t);  [CE]  cannot  find  symbol  Context  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH,  t);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.CATCH,  t);	  Context.checkState(n.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  Context	14	None	replace
395	[BUG]  [BUGGY]  n.setString( "CATCH ",  t.getSourceName(),  parent);  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH ",  t.getSourceName(),  parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ",  t.getSourceName(),  parent);	  n.setString(   "CATCH   ",    t.getSourceName());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	15	None	replace
396	[BUG]  [BUGGY]  n.setString( "catch "  + ",  t.getModule());  [CE]  unclosed  string  literal  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch "  + ",  t.getModule());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch "  + ",  t.getModule());	  n.setString(   "catch   ",    t.getModule());    	non-compiled	[CE]  unclosed  string  literal	75	None	replace
397	[BUG]  [BUGGY]  Context  cfg  =  node.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  node.getCurrentContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  node.getCurrentContext();	  Context    cfg    =    parent.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
398	[BUG]  [BUGGY]  Context  cfg  =  n,  parent.getCurrentContext();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  n,  parent.getCurrentContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  n,  parent.getCurrentContext();	  Context    cfg    =    parent.getCurrentContext();    	non-compiled	[CE]  ';'  expected	66	None	replace
399	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  new  AstControlFlowGraph  <  Node>());  [CE]  type  AstControlFlowGraph  does  not  take  parameters  [FE]        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  new  AstControlFlowGraph  <  Node>());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  root,  new  AstControlFlowGraph  <  Node>());	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph    <    Node>());    	non-compiled	[CE]  type  AstControlFlowGraph  does  not  take  parameters	82	None	replace
400	[BUG]  [BUGGY]  handleCatch(n,  cfg,  root,  nodePriorities);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  root,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  root,  nodePriorities);	  handleCatch(n,    cfg,    root);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	5	None	replace
401	[BUG]  [BUGGY]  handleCatch(n,  cfg,  root,  name);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  root,  name);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  root,  name);	  handleCatch(n,    cfg,    root);    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
402	[BUG]  [BUGGY]  handleCatch(n,  parent,  nodePriorities,  priorities);  [CE]  cannot  find  symbol  priorities  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  nodePriorities,  priorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  nodePriorities,  priorities);	  handleCatch(n,    parent,    nodePriorities);    	non-compiled	[CE]  cannot  find  symbol  priorities	34	None	replace
403	[BUG]  [BUGGY]  handleCatch(n,  parent,  nodePriorities,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  nodePriorities,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  nodePriorities,  exceptionHandler);	  handleCatch(n,    parent,    nodePriorities);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	34	None	replace
404	[BUG]  [BUGGY]  handleCatch(n,  parent,  nodePriorities,  value);  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  nodePriorities,  value);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  nodePriorities,  value);	  handleCatch(n,    parent,    nodePriorities);    	non-compiled	[CE]  cannot  find  symbol  value	34	None	replace
405	[BUG]  [BUGGY]  n.setString( "catch "));  [CE]  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch "));  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch "));	          n.setString(       "catch       ");    n.setString(       "catch   "));    	non-compiled	[CE]  	63	None	replace
406	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleAccuracy(n);  n  =  parent.getParent();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleAccuracy(n);  n  =  parent.getParent();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getParent();    handleAccuracy(n);  n  =  parent.getParent();	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
407	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleChild(n);  n  =  parent.getParent();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handleChild(n);  n  =  parent.getParent();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getParent();    handleChild(n);  n  =  parent.getParent();	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
408	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(n,  t);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.getCurrentContext(n,  t);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentContext(n,  t);	  Context    cfg    =    Context.getCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
409	[BUG]  [BUGGY]  Context  cfg  =  ContextUtil.getCurrentContext(t,  n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  ContextUtil.getCurrentContext(t,  n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  ContextUtil.getCurrentContext(t,  n);	  Context    cfg    =    Context.getCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
410	[BUG]  [BUGGY]          n.setString(     "CATCH     ");    n.setString(   "CATCH     ");  n.setString( "CATCH ".);  n.setString( "CATCH ");  [CE]  <identifier>  expected  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "CATCH     ");    n.setString(   "CATCH     ");  n.setString( "CATCH ".);  n.setString( "CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                n.setString(       "CATCH       ");        n.setString(   "CATCH       ");    n.setString( "CATCH ".);  n.setString( "CATCH ");	  	non-compiled	[CE]  <identifier>  expected	39	None	add
411	[BUG]  [BUGGY]  Context  cfg  =  ContextUtil.getCurrentScope(n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  ContextUtil.getCurrentScope(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  ContextUtil.getCurrentScope(n);	  Context    cfg    =    Context.getCurrentScope(n);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
412	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentScope(n,  Context);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentScope(n,  Context);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentScope(n,  Context);	  Context    cfg    =    Context.getCurrentScope(t,    n);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
413	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentScope(n,  t);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.getCurrentScope(n,  t);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.getCurrentScope(n,  t);	  Context    cfg    =    Context.getCurrentScope(t,    n);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
414	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "match ");  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	                n.setString(       "catch       ");        n.setString(       "catch       ");    n.setString( "match ");  n.setString( "catch ");	  	compilable	  [FE]  RuntimeException  	61	12	add
415	[BUG]  [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "match ");  n.setString( "catch ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "match ");  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                n.setString(       "catch       ");        n.setString(       "catch       ");    n.setString( "match ");  n.setString( "catch ");	  	compilable	  [FE]  RuntimeException  	61	12	add
416	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "atch ");  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	                n.setString(       "catch       ");        n.setString(       "catch       ");    n.setString( "atch ");  n.setString( "catch ");	  	compilable	  [FE]  RuntimeException  	61	12	add
417	[BUG]  [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "atch ");  n.setString( "catch ");  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "catch     ");    n.setString(     "catch     ");  n.setString( "atch ");  n.setString( "catch ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                n.setString(       "catch       ");        n.setString(       "catch       ");    n.setString( "atch ");  n.setString( "catch ");	  	compilable	  [FE]  RuntimeException  	61	12	add
418	[BUG]  [BUGGY]  handleCatch(t,  n,  parents,  cfg);  [CE]  cannot  find  symbol  parents  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  parents,  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  parents,  cfg);	  handleCatch(t,    n,    cfg);    	non-compiled	[CE]  cannot  find  symbol  parents	7	None	replace
419	[BUG]  [BUGGY]  handleChildren(n,  parent.cloneTree());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildren(n,  parent.cloneTree());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n,  parent.cloneTree());	  handleChildren(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
420	[BUG]  [BUGGY]  handleChildren(n,  root);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildren(n,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n,  root);	  handleChildren(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
421	[BUG]  [BUGGY]  handleCategory(parent);  return;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCategory(parent);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCategory(parent);  return;	  handleCategory(n);    return;    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
422	[BUG]  [BUGGY]  handleFollow(n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFollow(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFollow(n);	  handleFallThrough(n);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
423	[BUG]  [BUGGY]  handleCATCHBy(n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCATCHBy(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCATCHBy(n);	  handleEmbeddedBy(n);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
424	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "match   ");  n.setString(   "matches   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString(   "match   ");    n.setString(   "matches   ");	  	compilable	  [FE]  RuntimeException  	73	12	add
425	[BUG]  [BUGGY]  n.setString(   "match   ");  n.setString(   "matches   ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString(   "match   ");  n.setString(   "matches   ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString(   "match   ");    n.setString(   "matches   ");	  	compilable	  [FE]  RuntimeException  	73	12	add
426	[BUG]  [BUGGY]  handleCatch(n,  parent,  cfg,  nodePriorities);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  cfg,  nodePriorities);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  cfg,  nodePriorities);	  handleCatch(n,    parent,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	6	None	replace
427	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  nodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  nodeTraversal  [FE]    StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  nodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                NodeTraversal.traverse(compiler,    n,    this);    nodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  nodeTraversal	95	None	add
428	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  that);  [CE]  cannot  find  symbol  that  [FE]      StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  that);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  that);	  	non-compiled	[CE]  cannot  find  symbol  that	95	None	add
429	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  return;  [CE]  unreachable  statement  [FE]        StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  return;  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);  return;	  	non-compiled	[CE]  unreachable  statement	95	None	add
430	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  priorityComparator,  astPositionCounter);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Comparator<DiGraphNode<Node,Branch>>,int)  [FE]        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  priorityComparator,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  priorityComparator,  astPositionCounter);	  NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Comparator<DiGraphNode<Node,Branch>>,int)	92	None	replace
431	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  astPositionCounter);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,int)  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  root,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  root,  astPositionCounter);	  NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,int)	92	None	replace
432	[BUG]  [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleMatch(n);  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleMatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleCatch(n);    handleFunction(n);  handleMatch(n);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
433	[BUG]  [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleAccuracy(n);  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleAccuracy(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleCatch(n);    handleFunction(n);  handleAccuracy(n);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
434	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleThrow(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);        handleCatch(n);    handleFunction(n);  handleThrow(n);	  	compilable	  [FE]  RuntimeException  	18	12	add
435	[BUG]  [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleThrow(n);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  handleFunction(n);  handleThrow(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleCatch(n);    handleFunction(n);  handleThrow(n);	  	compilable	  [FE]  RuntimeException  	18	12	add
436	[BUG]  [BUGGY]          n.setString(     "CATCH     ");    n.setString(   "CATCH     ");  n.setString( "CATCH ",  n.getString());  n.setString( "CATCH ");  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          n.setString(     "CATCH     ");    n.setString(   "CATCH     ");  n.setString( "CATCH ",  n.getString());  n.setString( "CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                n.setString(       "CATCH       ");        n.setString(   "CATCH       ");    n.setString( "CATCH ",  n.getString());  n.setString( "CATCH ");	  	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	39	None	add
437	[BUG]  [BUGGY]  handleFunction(n,  parent,  exceptionHandler);  [CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n,  parent,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n,  parent,  exceptionHandler);	  handleFunction(n,    parent);    	non-compiled	[CE]  method  handleFunction  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	26	None	replace
438	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities,  priorityCounter);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Map<DiGraphNode<Node,Branch>,Integer>,int)  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities,  priorityCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  nodePriorities,  priorityCounter);	  NodeTraversal.traverse(compiler,    n,    nodePriorities);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Map<DiGraphNode<Node,Branch>,Integer>,int)	84	None	replace
439	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "[CATCH] ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n.setString( "[CATCH] ");	          n.setString(       "CATCH       ");    n.setString(   ",CATCH       ");    	compilable	  [FE]  RuntimeException  	43	12	replace
440	[BUG]  [BUGGY]  n.setString( "[CATCH] ");  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "[CATCH] ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "[CATCH] ");	          n.setString(       "CATCH       ");    n.setString(   ",CATCH       ");    	compilable	  [FE]  RuntimeException  	43	12	replace
441	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentScopeRoot();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentScopeRoot();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentScopeRoot();	  Context    cfg    =    t.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
442	[BUG]  [BUGGY]  handleCatch(n,  parent,  nodePriorities,  preferenceHandler);  [CE]  cannot  find  symbol  preferenceHandler  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  nodePriorities,  preferenceHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  nodePriorities,  preferenceHandler);	  handleCatch(n,    parent,    nodePriorities);    	non-compiled	[CE]  cannot  find  symbol  preferenceHandler	34	None	replace
443	[BUG]  [BUGGY]  n.setString( "catch ",  t.getModule(),  PROPERTY);  [CE]  cannot  find  symbol  PROPERTY  [FE]          RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch ",  t.getModule(),  PROPERTY);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  t.getModule(),  PROPERTY);	  n.setString(   "catch   ",    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	75	None	replace
444	[BUG]  [BUGGY]  n.setString( "catch "  +  Token.CATCH,  t.getModule());  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch "  +  Token.CATCH,  t.getModule());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch "  +  Token.CATCH,  t.getModule());	  n.setString(   "catch   ",    t.getModule());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	75	None	replace
445	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH  ||  parent.getType()  ==  Token.CATCH);  return;  [CE]  cannot  find  symbol  Context  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context.checkState(n.getType()  ==  Token.CATCH  ||  parent.getType()  ==  Token.CATCH);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context.checkState(n.getType()  ==  Token.CATCH  ||  parent.getType()  ==  Token.CATCH);  return;	  Context.checkState(n.getType()    ==    Token.CATCH);    return;    	non-compiled	[CE]  cannot  find  symbol  Context	31	None	replace
446	[BUG]  [BUGGY]  handleCatchStatement(n,  parent.getParent());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(n,  parent.getParent());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n,  parent.getParent());	  handleCatchStatement(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
447	[BUG]  [BUGGY]  HandleCatch(n,  parent.getFirstChild());  return;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(n,  parent.getFirstChild());  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(n,  parent.getFirstChild());  return;	  HandleCatch(n,    parent);    return;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
448	[BUG]  [BUGGY]  HandleCatch(t,  n);  return;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(t,  n);  return;  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(t,  n);  return;	  HandleCatch(n,    parent);    return;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
449	[BUG]  [BUGGY]  handleStream(n);  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleStream(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleStream(n);	  handleFunction(n);    handleCatch(n);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
450	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph  <  Node>(),  this);  [CE]  type  AstControlFlowGraph  does  not  take  parameters  [FE]        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph  <  Node>(),  this);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph  <  Node>(),  this);	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph    <    Node>());    	non-compiled	[CE]  type  AstControlFlowGraph  does  not  take  parameters	82	None	replace
451	[BUG]  [BUGGY]  handleChildrenWithCase(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildrenWithCase(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildrenWithCase(n);	  handleChildrenWithCatch(n);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
452	[BUG]  [BUGGY]  handleCatch(n,  parent,  exceptionHandler,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  exceptionHandler,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  exceptionHandler,  astPositionCounter);	  handleCatch(n,    parent,    exceptionHandler);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	79	None	replace
453	[BUG]  [BUGGY]  handleCatch(t,  n,  parent,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  parent,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  parent,  exceptionHandler);	  handleCatch(n,    parent,    exceptionHandler);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	79	None	replace
454	[BUG]  [BUGGY]  handleCatch(n,  parent,  exceptionHandler,  throwable);  [CE]  cannot  find  symbol  throwable  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  exceptionHandler,  throwable);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  exceptionHandler,  throwable);	  handleCatch(n,    parent,    exceptionHandler);    	non-compiled	[CE]  cannot  find  symbol  throwable	79	None	replace
455	[BUG]  [BUGGY]  Context  cfg  =  _tvContext.getCurrentScope();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  _tvContext.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  _tvContext.getCurrentScope();	  Context    cfg    =    context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
456	[BUG]  [BUGGY]  Context  cfg  =  t,  context.getCurrentScope();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t,  context.getCurrentScope();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t,  context.getCurrentScope();	  Context    cfg    =    context.getCurrentScope();    	non-compiled	[CE]  ';'  expected	9	None	replace
457	[BUG]  [BUGGY]  handleCatch(n,  parent,  t,  n);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  t,  n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  t,  n);	  handleCatch(n,    parent,    t);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	32	None	replace
458	[BUG]  [BUGGY]  handleCatch(n,  parent,  t,  root);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  t,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  t,  root);	  handleCatch(n,    parent,    t);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	32	None	replace
459	[BUG]  [BUGGY]  handleCatch(cfg,  n,  t);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(cfg,  n,  t);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(cfg,  n,  t);	  handleCatch(t,    n,    cfg);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	7	None	replace
460	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  AstTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  AstTraversal  [FE]    StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  AstTraversal.traverse(compiler,  n,  this);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	                NodeTraversal.traverse(compiler,    n,    this);    AstTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  cannot  find  symbol  AstTraversal	95	None	add
461	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handlesCatch(n);  n  =  parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  handlesCatch(n);  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getFirstChild();    handlesCatch(n);  n  =  parent.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
462	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleCatch(n);    n    =    parent.getFirstChild();    n  =  parent.getFirstChild();	  	compilable	  [FE]  AssertionFailedError  	59	3	add
463	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  n  =  parent.getFirstChild();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getFirstChild();  n  =  parent.getFirstChild();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getFirstChild();    n  =  parent.getFirstChild();	  	compilable	  [FE]  AssertionFailedError  	59	3	add
464	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n  =  parent.getFirstChild();  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n  =  parent.getFirstChild();	  handleFunction(n);    handleFunction(n);    	compilable	  [FE]  AssertionFailedError  	21	8	replace
465	[BUG]  [BUGGY]  n  =  parent.getFirstChild();  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n  =  parent.getFirstChild();  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n  =  parent.getFirstChild();	  handleFunction(n);    handleFunction(n);    	compilable	  [FE]  AssertionFailedError  	21	8	replace
466	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n  =  parent.getLastChild();  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n  =  parent.getLastChild();	  handleFunction(n);    handleFunction(n);    	compilable	  [FE]  AssertionFailedError  	21	8	replace
467	[BUG]  [BUGGY]  n  =  parent.getLastChild();  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n  =  parent.getLastChild();  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n  =  parent.getLastChild();	  handleFunction(n);    handleFunction(n);    	compilable	  [FE]  AssertionFailedError  	21	8	replace
468	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n  =  parent.getParent();  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	n  =  parent.getParent();	  handleFunction(n);    handleFunction(n);    	compilable	  [FE]  AssertionFailedError  	21	8	replace
469	[BUG]  [BUGGY]  n  =  parent.getParent();  [FE]  AssertionFailedError  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n  =  parent.getParent();  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n  =  parent.getParent();	  handleFunction(n);    handleFunction(n);    	compilable	  [FE]  AssertionFailedError  	21	8	replace
470	[BUG]  [BUGGY]  handleChildren(n,  parent.getParent());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleChildren(n,  parent.getParent());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n,  parent.getParent());	  handleChildren(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
471	[BUG]  [BUGGY]  n.setString( "CATCH ",  t.getSourceName(),  cfg);  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH ",  t.getSourceName(),  cfg);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ",  t.getSourceName(),  cfg);	  n.setString(   "CATCH   ",    t.getSourceName());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	15	None	replace
472	[BUG]  [BUGGY]  handleCatch(n,  parent,  key);  [CE]  cannot  find  symbol  key  [FE]              AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  parent,  key);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent,  key);	  handleCatch(n,    parent,    type);    	non-compiled	[CE]  cannot  find  symbol  key	101	None	replace
473	[BUG]  [BUGGY]  n.setString( "CATCH ", "CATCH ");  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH ", "CATCH ");  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ", "CATCH ");	  n.setString(   "CATCH   ",    t.getMessage());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	107	None	replace
474	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.ACTIVITY);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.ACTIVITY);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentContext(n,  Context.ACTIVITY);	  Context    cfg    =    Context.getCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
475	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.DISCONTINUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentContext(n,  Context.DISCONTINUE);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentContext(n,  Context.DISCONTINUE);	  Context    cfg    =    Context.getCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
476	[BUG]  [BUGGY]  n.setString( "CATCH ",  t.getModule(),  PROPERTY);  [CE]  cannot  find  symbol  PROPERTY  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH ",  t.getModule(),  PROPERTY);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ",  t.getModule(),  PROPERTY);	  n.setString(   "CATCH   ",    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	85	None	replace
477	[BUG]  [BUGGY]  HandleCatch(t,  n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  HandleCatch(t,  n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	HandleCatch(t,  n);	  HandleCatch(n);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
478	[BUG]  [BUGGY]  handleCatch(n,  cfg,  root,  exceptionHandler);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  root,  exceptionHandler);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  root,  exceptionHandler);	  handleCatch(n,    cfg,    root);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	5	None	replace
479	[BUG]  [BUGGY]  handleCatch(t,  n,  root);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  root);	  handleCatch(n,    cfg,    root);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	5	None	replace
480	[BUG]  [BUGGY]  handleCatch(n,  cfg,  root,  caseToken.CATCH);  [CE]  cannot  find  symbol  caseToken  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  root,  caseToken.CATCH);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  root,  caseToken.CATCH);	  handleCatch(n,    cfg,    root);    	non-compiled	[CE]  cannot  find  symbol  caseToken	5	None	replace
481	[BUG]  [BUGGY]  Context  cfg  =  Context.createCurrentContext(t,  n,  this);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.createCurrentContext(t,  n,  this);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.createCurrentContext(t,  n,  this);	  Context    cfg    =    Context.createCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
482	[BUG]  [BUGGY]  Context  cfg  =  Context.createCurrentContext(t,  n,  root);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  Context.createCurrentContext(t,  n,  root);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  Context.createCurrentContext(t,  n,  root);	  Context    cfg    =    Context.createCurrentContext(t,    n);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
483	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  cfg);  [CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  cfg);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  cfg);	  NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  constructor  AstControlFlowGraph  in  class  AstControlFlowGraph  cannot  be  applied  to  given  types;	83	None	replace
484	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  finallyMap);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,ControlFlowAnalysis,Multimap<Node,Node>)  [FE]    StackOverflowError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  finallyMap);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  this,  finallyMap);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,ControlFlowAnalysis,Multimap<Node,Node>)	96	None	replace
485	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentContext(Context.STANDARD);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentContext(Context.STANDARD);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentContext(Context.STANDARD);	  Context    cfg    =    Context.getCurrentContext(t);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
486	[BUG]  [BUGGY]  Context  cfg  =  t.getCurrentContext(n);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.getCurrentContext(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.getCurrentContext(n);	  Context    cfg    =    Context.getCurrentContext(t);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
487	[BUG]  [BUGGY]  Context  cfg  =  context.getCurrentContext(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  context.getCurrentContext(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  context.getCurrentContext(n);	  Context    cfg    =    Context.getCurrentContext(n);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
488	[BUG]  [BUGGY]  n.setString( "catch ",  t.getSourceName(),  t.getSourceName());  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "catch ",  t.getSourceName(),  t.getSourceName());  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "catch ",  t.getSourceName(),  t.getSourceName());	  n.setString(   "catch   ",    t.getSourceName());    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	48	None	replace
489	[BUG]  [BUGGY]  handleScript(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleScript(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleScript(n);	  handleFunction(n);    handleEmbeddedObject(n);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
490	[BUG]  [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handlesCatch(n);  n  =  parent.getParent();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n);  n  =  parent.getParent();  handlesCatch(n);  n  =  parent.getParent();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n);    n    =    parent.getParent();    handlesCatch(n);  n  =  parent.getParent();	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
491	[BUG]  [BUGGY]  handleExpr(n);  handleObject(n);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleObject(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);    handleObject(n);	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
492	[BUG]  [BUGGY]  handleExpr(n);  handleScript(n);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleExpr(n);  handleScript(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleExpr(n);    handleScript(n);	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
493	[BUG]  [BUGGY]  n.setString( "CATCH ".equals(getCatchName()));  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  n.setString( "CATCH ".equals(getCatchName()));  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	n.setString( "CATCH ".equals(getCatchName()));	  n.setString(   "catch   ".equals(getCatchName()));    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
494	[BUG]  [BUGGY]  handleCatchStatement(t,  n.getFirstChild());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatchStatement(t,  n.getFirstChild());  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(t,  n.getFirstChild());	  handleCatchStatement(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
495	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.astPositionCounter);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int)  [FE]        AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  this.astPositionCounter);	  NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,int)	92	None	replace
496	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  first);  [CE]  cannot  find  symbol  first  [FE]          AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  first);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	NodeTraversal.traverse(compiler,  n,  astPositionCounter,  first);	  NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  cannot  find  symbol  first	92	None	replace
497	[BUG]  [BUGGY]  handleCatch(t,  n,  astPositionCounter);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(t,  n,  astPositionCounter);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(t,  n,  astPositionCounter);	  handleCatch(n,    cfg,    astPositionCounter);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	102	None	replace
498	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleCategory(n);  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCategory(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleCategory(n);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
499	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleFunction(n);  handleChildren(n);  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleFunction(n);  handleChildren(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleFunction(n);  handleChildren(n);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
500	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  n  =  parent.getParent();  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);        handleFunction(n);    handleCatch(n);  n  =  parent.getParent();	  	compilable	  [FE]  RuntimeException  	20	12	add
501	[BUG]  [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  n  =  parent.getParent();  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleFunction(n);  handleCatch(n);  n  =  parent.getParent();  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleFunction(n);    handleCatch(n);  n  =  parent.getParent();	  	compilable	  [FE]  RuntimeException  	20	12	add
502	[BUG]  [BUGGY]  handleFeature(n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFeature(n);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFeature(n);	  handleCount(n);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
503	[BUG]  [BUGGY]  handleCatch(parent);  handlesCatch(parent);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(parent);  handlesCatch(parent);  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(parent);    handlesCatch(parent);	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
504	[BUG]  [BUGGY]  handleCatch(n,  cfg,  parent,  root);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleCatch(n,  cfg,  parent,  root);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg,  parent,  root);	  handleCatch(n,    cfg,    parent);    	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	4	None	replace
505	[BUG]  [BUGGY]  Context  cfg  =  t.constructCurrentContext();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  Context  cfg  =  t.constructCurrentContext();  [BUGGY]      handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	Context  cfg  =  t.constructCurrentContext();	  Context    cfg    =    t.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
506	[BUG]  [BUGGY]  handleFunction(n);    handleCatch(n);  HandleFunction(n);  handleCatch(n);  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:      [BUGGY]  handleFunction(n);    handleCatch(n);  HandleFunction(n);  handleCatch(n);  [BUGGY]      return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);        handleCatch(n);    HandleFunction(n);  handleCatch(n);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
