bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  handleCatch(n,  parent);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]  handleCatch(n,  parent);  [BUGGY]  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  parent);	handleCatch(n);  	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	7	None	replace
2	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]  handleFunction(n);  [BUGGY]  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	handleFunction(n);	handleCatch(n);  	compilable	  [FE]  RuntimeException  	7	12	replace
3	[BUG]  [BUGGY]  handleFunction(n);  [FE]  RuntimeException  [FE]      AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]  handleFunction(n);  [BUGGY]  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleFunction(n);	handleCatch(n);  	compilable	  [FE]  RuntimeException  	7	12	replace
4	[BUG]  [BUGGY]  handleCatch(n,  cfg);  [CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]  handleCatch(n,  cfg);  [BUGGY]  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatch(n,  cfg);	handleCatch(n);  	non-compiled	[CE]  method  handleCatch  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	7	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    [BUGGY]  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	  	handleCatch(n);  	compilable	  [FE]  AssertionFailedError  	7	8	replace
6	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    [BUGGY]  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	  	handleCatch(n);  	compilable	  [FE]  AssertionFailedError  	7	8	replace
7	[BUG]  [BUGGY]    handleCatch(n);  return;  [CE]  unreachable  statement  [FE]    AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    handleCatch(n);  return;  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    handleCatch(n);  return;		non-compiled	[CE]  unreachable  statement	8	None	add
8	[BUG]  [BUGGY]    handleCatch(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  [CE]  duplicate  case  label  [FE]      AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    handleCatch(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    handleCatch(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);		non-compiled	[CE]  duplicate  case  label	8	None	add
9	[BUG]  [BUGGY]    Context  cfg  =  Context.getCurrentContext();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    Context  cfg  =  Context.getCurrentContext();  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    Context  cfg  =  Context.getCurrentContext();		non-compiled	[CE]  cannot  find  symbol	8	None	add
10	[BUG]  [BUGGY]    Context  cfg  =  Context.getCurrentScope();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    Context  cfg  =  Context.getCurrentScope();  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    Context  cfg  =  Context.getCurrentScope();		non-compiled	[CE]  cannot  find  symbol	8	None	add
11	[BUG]  [BUGGY]    handleCatch(n);  return;  case  Token.EXPR_RESULT:  handleExpression(n);  [CE]  duplicate  case  label  [FE]            AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    handleCatch(n);  return;  case  Token.EXPR_RESULT:  handleExpression(n);  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    handleCatch(n);  return;  case  Token.EXPR_RESULT:  handleExpression(n);		non-compiled	[CE]  duplicate  case  label	8	None	add
12	[BUG]  [BUGGY]    handleCATCH(n);  return;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    handleCATCH(n);  return;  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    handleCATCH(n);  return;		non-compiled	[CE]  cannot  find  symbol	8	None	add
13	[BUG]  [BUGGY]    handleCATCH(n);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    handleCATCH(n);  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    handleCATCH(n);		non-compiled	[CE]  cannot  find  symbol	8	None	add
14	[BUG]  [BUGGY]    handleFunction(n);  return;  [CE]  unreachable  statement  [FE]        AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    handleFunction(n);  return;  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    handleFunction(n);  return;		non-compiled	[CE]  unreachable  statement	8	None	add
15	[BUG]  [BUGGY]    handleKey(n);  return;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    handleKey(n);  return;  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    handleKey(n);  return;		non-compiled	[CE]  cannot  find  symbol	8	None	add
16	[BUG]  [BUGGY]  handleChild(n);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]  handleChild(n);  [BUGGY]  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChild(n);	handleCatch(n);  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
17	[BUG]  [BUGGY]  handleCatchStatement(n);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]  handleCatchStatement(n);  [BUGGY]  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleCatchStatement(n);	handleCatch(n);  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
18	[BUG]  [BUGGY]  handleChildren(n);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]  handleChildren(n);  [BUGGY]  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	handleChildren(n);	handleCatch(n);  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
19	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    n.setString( "catch ");  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	    n.setString( "catch ");		compilable	  [FE]  RuntimeException  	8	12	add
20	[BUG]  [BUGGY]    n.setString( "catch ");  [FE]  RuntimeException  [FE]    AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    n.setString( "catch ");  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    n.setString( "catch ");		compilable	  [FE]  RuntimeException  	8	12	add
21	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    n.setString( "CATCH ");  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	add	    n.setString( "CATCH ");		compilable	  [FE]  RuntimeException  	8	12	add
22	[BUG]  [BUGGY]    n.setString( "CATCH ");  [FE]  RuntimeException  [FE]      AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    n.setString( "CATCH ");  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    n.setString( "CATCH ");		compilable	  [FE]  RuntimeException  	8	12	add
23	[BUG]  [BUGGY]    handleFallThrough(n);  return;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    handleFallThrough(n);  return;  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    handleFallThrough(n);  return;		non-compiled	[CE]  cannot  find  symbol	8	None	add
24	[BUG]  [BUGGY]    HandleCatch(n);  return;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);  return;  case  Token.CATCH:  [BUGGY]    HandleCatch(n);  return;  [BUGGY]  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  handleReturn(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	331	331	3	replace	    HandleCatch(n);  return;		non-compiled	[CE]  cannot  find  symbol	8	None	add
