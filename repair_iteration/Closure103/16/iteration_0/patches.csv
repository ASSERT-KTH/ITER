bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	    NodeTraversal.traverse(compiler,  n,  parent);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
2	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  [BUGGY]  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	    NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
3	[BUG]  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	    Preconditions.checkState(exceptionHandler.peek()  ==  parent);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
4	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  astPositionCounter);  [BUGGY]  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	    NodeTraversal.traverse(compiler,  n,  astPositionCounter);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
5	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  this);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	    NodeTraversal.traverse(compiler,  n,  this);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
6	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  astPositionCounter,  parent);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  astPositionCounter,  parent);  [BUGGY]  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	    NodeTraversal.traverse(compiler,  n,  astPositionCounter,  parent);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
7	[BUG]  [BUGGY]  exceptionHandler.push(n);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]  exceptionHandler.push(n);  [BUGGY]  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	exceptionHandler.push(n);	exceptionHandler.pop();  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
8	[BUG]  [BUGGY]  exceptionHandler.peek();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]  exceptionHandler.peek();  [BUGGY]  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	exceptionHandler.peek();	exceptionHandler.pop();  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
9	[BUG]  [BUGGY]  exceptionHandler.push(new  Integer(n.getFirstChild().getNext()));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]  exceptionHandler.push(new  Integer(n.getFirstChild().getNext()));  [BUGGY]  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	exceptionHandler.push(new  Integer(n.getFirstChild().getNext()));	exceptionHandler.pop();  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
10	[BUG]  [BUGGY]  exceptionHandler.push(new  Node(Token.TRY,  n));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]  exceptionHandler.push(new  Node(Token.TRY,  n));  [BUGGY]  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	exceptionHandler.push(new  Node(Token.TRY,  n));	exceptionHandler.pop();  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
11	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]    NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph());  [BUGGY]  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	    NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph());		non-compiled	[CE]  illegal  start  of  expression	32	None	add
12	[BUG]  [BUGGY]  exceptionHandler.push(new  Node(Token.TRY));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]  exceptionHandler.push(new  Node(Token.TRY));  [BUGGY]  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	exceptionHandler.push(new  Node(Token.TRY));	exceptionHandler.pop();  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
13	[BUG]  [BUGGY]  exceptionHandler.push(new  Node(Token.TRY,  parent));  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]  exceptionHandler.push(new  Node(Token.TRY,  parent));  [BUGGY]  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	exceptionHandler.push(new  Node(Token.TRY,  parent));	exceptionHandler.pop();  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
14	[BUG]  [BUGGY]  exceptionHandler.push(new  Node(Token.TRY,  n,  parent));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]  exceptionHandler.push(new  Node(Token.TRY,  n,  parent));  [BUGGY]  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	exceptionHandler.push(new  Node(Token.TRY,  n,  parent));	exceptionHandler.pop();  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
15	[BUG]  [BUGGY]    Node  entry  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]    Node  entry  =  n.getFirstChild();  [BUGGY]  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	    Node  entry  =  n.getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	32	None	add
16	[BUG]  [BUGGY]    Node  entry  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  [BUGGY]    Node  entry  =  n.getLastChild();  [BUGGY]  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	283	283	3	replace	    Node  entry  =  n.getLastChild();		non-compiled	[CE]  illegal  start  of  expression	32	None	add
