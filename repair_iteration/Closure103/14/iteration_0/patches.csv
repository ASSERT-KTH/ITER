bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]    Node  parent  =  n.getFirstChild();  [BUGGY]  if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	    Node  parent  =  n.getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
2	[BUG]  [BUGGY]    Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]    Node  parent  =  n.getParent();  [BUGGY]  if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	    Node  parent  =  n.getParent();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
3	[BUG]  [BUGGY]    Node  n  =  parent.getFirstChild();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]    Node  n  =  parent.getFirstChild();  [BUGGY]  if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	    Node  n  =  parent.getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
4	[BUG]  [BUGGY]    Node  parent  =  n.getNext();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]    Node  parent  =  n.getNext();  [BUGGY]  if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	    Node  parent  =  n.getNext();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
5	[BUG]  [BUGGY]    Node  n  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]    Node  n  =  n.getFirstChild();  [BUGGY]  if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	    Node  n  =  n.getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
6	[BUG]  [BUGGY]    Node  n  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]    Node  n  =  node.getFirstChild();  [BUGGY]  if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	    Node  n  =  node.getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
7	[BUG]  [BUGGY]  if(parent.getFirstChild().getType()  ==  Token.TRY  &&  n  ==  parent.getFirstChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]  if(parent.getFirstChild().getType()  ==  Token.TRY  &&  n  ==  parent.getFirstChild().getNext())  {  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	if(parent.getFirstChild().getType()  ==  Token.TRY  &&  n  ==  parent.getFirstChild().getNext())  {	if  (n  ==  parent.getFirstChild().getNext())  {  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
8	[BUG]  [BUGGY]  if(n!=  parent.getFirstChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]  if(n!=  parent.getFirstChild().getNext())  {  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	if(n!=  parent.getFirstChild().getNext())  {	if  (n  ==  parent.getFirstChild().getNext())  {  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]  if(n  ==  parent.getFirstChild().getNext()  ||  n  ==  parent.getFirstChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]  if(n  ==  parent.getFirstChild().getNext()  ||  n  ==  parent.getFirstChild().getNext())  {  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	if(n  ==  parent.getFirstChild().getNext()  ||  n  ==  parent.getFirstChild().getNext())  {	if  (n  ==  parent.getFirstChild().getNext())  {  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]  if(exceptionHandler!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]  if(exceptionHandler!=  null)  {  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	if(exceptionHandler!=  null)  {	if  (n  ==  parent.getFirstChild().getNext())  {  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
11	[BUG]  [BUGGY]  if(parent.getFirstChild()!=  null  ||  n  ==  parent.getFirstChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]  if(parent.getFirstChild()!=  null  ||  n  ==  parent.getFirstChild().getNext())  {  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	if(parent.getFirstChild()!=  null  ||  n  ==  parent.getFirstChild().getNext())  {	if  (n  ==  parent.getFirstChild().getNext())  {  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
12	[BUG]  [BUGGY]  if(n  ==  parent.getFirstChild().getNext()  ||  n  ==  parent.getLastChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]  if(n  ==  parent.getFirstChild().getNext()  ||  n  ==  parent.getLastChild().getNext())  {  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	if(n  ==  parent.getFirstChild().getNext()  ||  n  ==  parent.getLastChild().getNext())  {	if  (n  ==  parent.getFirstChild().getNext())  {  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
13	[BUG]  [BUGGY]    Node  n  =  getFirstChild();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]    Node  n  =  getFirstChild();  [BUGGY]  if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	    Node  n  =  getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
14	[BUG]  [BUGGY]    Node  n  =  n.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]    Node  n  =  n.getFirstChild().getNext();  [BUGGY]  if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	    Node  n  =  n.getFirstChild().getNext();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
15	[BUG]  [BUGGY]    Node  entry  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]    Node  entry  =  n.getFirstChild();  [BUGGY]  if  (n  ==  parent.getFirstChild().getNext())  {  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	    Node  entry  =  n.getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
16	[BUG]  [BUGGY]  if(exceptionHandler.peek()  ==  parent.getFirstChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]  if(exceptionHandler.peek()  ==  parent.getFirstChild().getNext())  {  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	if(exceptionHandler.peek()  ==  parent.getFirstChild().getNext())  {	if  (n  ==  parent.getFirstChild().getNext())  {  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
17	[BUG]  [BUGGY]  if(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  case  Token.RETURN:  case  Token.THROW:  return  false;  case  Token.TRY:        [BUGGY]  if(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	281	281	3	replace	if(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();	if  (n  ==  parent.getFirstChild().getNext())  {  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
