bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  body  =  node.getLastChild(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getLastChild(),  astPositionCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getLastChild(),  astPositionCounter);	  Node    body    =    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  Node  body  =  node.getLastChild(),  Branch.UNCOND);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getLastChild(),  Branch.UNCOND);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getLastChild(),  Branch.UNCOND);	  Node    body    =    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.removeFirstChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.removeFirstChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.removeFirstChild());	  createEdge(node,    Branch.UNCOND,    node.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph(),  finallyMap);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph(),  finallyMap);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph(),  finallyMap);	  NodeTraversal.traverse(compiler,    node,    new    ControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph(),  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph(),  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    new    ControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  ControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  ControlFlowGraph());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  new  ControlFlowGraph());	  NodeTraversal.traverse(compiler,    node,    new    ControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
7	[BUG]  [BUGGY]  NodeUtil.removeChild(node,  last);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(node,  last);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(node,  last);	  NodeUtil.removeChild(last,    node);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
8	[BUG]  [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
9	[BUG]  [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.UNCOND,  node.getLastChild());  return;	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
12	[BUG]  [BUGGY]  Context.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Context.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Context.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
13	[BUG]  [BUGGY]  Context.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Context.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Context.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(node.getFirstChild()  ==  node)  {  if(node.getLastChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getFirstChild()  ==  node)  {  if(node.getLastChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getFirstChild()  ==  node)  {  if(node.getLastChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  }	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
15	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild(),  astPositionCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild(),  astPositionCounter);	  cfg.createEdge(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
16	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);	  cfg.createEdge(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
17	[BUG]  [BUGGY]  Node  body  =  node.removeLastChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.removeLastChild();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.removeLastChild();	  Node    body    =    node.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
18	[BUG]  [BUGGY]  final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  cfg);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  cfg);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  cfg);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
19	[BUG]  [BUGGY]  Node  body  =  node.getNext();  finallyMap.put(body,  cfg);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getNext();  finallyMap.put(body,  cfg);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getNext();  finallyMap.put(body,  cfg);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
20	[BUG]  [BUGGY]  Node  body  =  cfg.getFirstChild();  finallyMap.put(body,  cfg);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  cfg.getFirstChild();  finallyMap.put(body,  cfg);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  cfg.getFirstChild();  finallyMap.put(body,  cfg);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
21	[BUG]  [BUGGY]  node.setType(Token.NAME)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.NAME)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.NAME)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	  if(node.getType()    ==    Token.NAME)    {    createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
22	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);	  cfg.createEdge(node,    Branch.UNCOND,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
23	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter);	  cfg.createEdge(node,    Branch.UNCOND,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
24	[BUG]  [BUGGY]  cfg.setCatch(node,  Branch.BLOCK,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.setCatch(node,  Branch.BLOCK,  node.getFirstChild());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.setCatch(node,  Branch.BLOCK,  node.getFirstChild());	  cfg.setCatch(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
25	[BUG]  [BUGGY]  cfg.setCatch(node,  Branch.BLOCK,  node.getLastChild(),  node);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.setCatch(node,  Branch.BLOCK,  node.getLastChild(),  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.setCatch(node,  Branch.BLOCK,  node.getLastChild(),  node);	  cfg.setCatch(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
26	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    node);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  this);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  this);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    node);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  cfg);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  cfg);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  cfg);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    node);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  nodePriorities);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  nodePriorities);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  nodePriorities);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    node);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  finallyMap);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  finallyMap);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  finallyMap);	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
31	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  nodePriorities);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  nodePriorities);	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
32	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  node);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  node);	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  this);	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
34	[BUG]  [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  null);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getLastChild();  finallyMap.put(body,  null);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    null);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
35	[BUG]  [BUGGY]  final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  null);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  null);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    null);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
36	[BUG]  [BUGGY]  Node  body  =  node.getNext();  finallyMap.put(body,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getNext();  finallyMap.put(body,  null);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getNext();  finallyMap.put(body,  null);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    null);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
37	[BUG]  [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.getFirstChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.handleCatch(node,  Branch.UNCOND,  node.getFirstChild());	  cfg.handleCatch(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
38	[BUG]  [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.getLastChild(),  node);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.getLastChild(),  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.handleCatch(node,  Branch.UNCOND,  node.getLastChild(),  node);	  cfg.handleCatch(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
39	[BUG]  [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.handleCatch(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);	  cfg.handleCatch(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
40	[BUG]  [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()),    body);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
41	[BUG]  [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getFirstChild()),  body);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getFirstChild()),  body);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getFirstChild()),  body);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()),    body);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
42	[BUG]  [BUGGY]  Node  body  =  node.getNext();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getNext();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getNext();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()),    body);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
43	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  cfg);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  cfg);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  cfg);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()),    body);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH,  node.getFirstChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH,  node.getFirstChild());	  Preconditions.checkState(node.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getType()  ==  Token.CATCH);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getType()  ==  Token.CATCH);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getType()  ==  Token.CATCH);	  Preconditions.checkState(node.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  &&  NodeUtil.isFunctionDeclaration(node));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  &&  NodeUtil.isFunctionDeclaration(node));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH  &&  NodeUtil.isFunctionDeclaration(node));	  Preconditions.checkState(node.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()!=  Token.CATCH);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()!=  Token.CATCH);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()!=  Token.CATCH);	  Preconditions.checkState(node.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
48	[BUG]  [BUGGY]  Node  body  =  node.getAncestor(3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getAncestor(3);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getAncestor(3);	  Node    body    =    node.getAncestor(1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  Node  body  =  node.getAncestor(4);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getAncestor(4);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getAncestor(4);	  Node    body    =    node.getAncestor(1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  finallyMap);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  finallyMap);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getLastChild(),  finallyMap);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
51	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
52	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap,  astPosition);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap,  astPosition);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap,  astPosition);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
53	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getLastChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getLastChild());	  connectToPossibleExceptionHandler(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
54	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  nodePriorities);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  nodePriorities);	  connectToPossibleExceptionHandler(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
55	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);	  connectToPossibleExceptionHandler(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
56	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  node);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  node);	  connectToPossibleExceptionHandler(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
57	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  node);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  node);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  finallyMap);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  finallyMap);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  finallyMap);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  this);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  this);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);	  cfg.createEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  this,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  this,  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  this,  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    this);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  null);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  null);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    this);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
64	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  this,  astPosition);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  this,  astPosition);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  this,  astPosition);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    this);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
65	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  createEdge(node,  Branch.UNCOND,  node.getFirstChild()));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  createEdge(node,  Branch.UNCOND,  node.getFirstChild()));  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  createEdge(node,  Branch.UNCOND,  node.getFirstChild()));	  NodeTraversal.traverse(compiler,    node,    finallyMap,    this);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()!=  Token.EXPR_RESULT);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(node.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT,  node.getFirstChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT,  node.getFirstChild());	  Preconditions.checkState(node.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(node.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT,  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT,  node.getLastChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT,  node.getLastChild());	  Preconditions.checkState(node.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
71	[BUG]  [BUGGY]  Context.checkState(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Context.checkState(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Context.checkState(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
73	[BUG]  [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getLastChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.UNCOND,  node.getLastChild());	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
74	[BUG]  [BUGGY]  Node  body  =  node.getAncestor(2)  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getAncestor(2)  +  1;  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getAncestor(2)  +  1;	  Node    body    =    node.getAncestor(2);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
75	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  cfg);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  cfg);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  cfg);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPosition);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
76	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPosition,  finallyMap);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPosition,  finallyMap);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  astPosition,  finallyMap);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPosition);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
77	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  firstChild);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  firstChild);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  firstChild);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPosition);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
78	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  new  AstControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  new  AstControlFlowGraph());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  new  AstControlFlowGraph());	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPosition);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
79	[BUG]  [BUGGY]  NodeUtil.removeChild(node,  parent);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(node,  parent);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(node,  parent);	  NodeUtil.removeChild(parent,    node);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
80	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  node,  cfg);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(parent,  node,  cfg);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(parent,  node,  cfg);	  NodeUtil.removeChild(parent,    node);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  node,  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(parent,  node,  this);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(parent,  node,  this);	  NodeUtil.removeChild(parent,    node);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  final  Node  body  =  node.getLastChild();  if(body!=  null)  {  finallyMap.put(body,  body);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  final  Node  body  =  node.getLastChild();  if(body!=  null)  {  finallyMap.put(body,  body);  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	final  Node  body  =  node.getLastChild();  if(body!=  null)  {  finallyMap.put(body,  body);  }	  Node    body    =    node.getLastChild();    if(body!=    null)    {    finallyMap.put(body,    body);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
83	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.removeFirstChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.removeFirstChild());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.BLOCK,  node.removeFirstChild());	  createEdge(node,    Branch.BLOCK,    node.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
84	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  node);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.redeclareVarsInsideBranch(node,  node);	  NodeUtil.redeclareVarsInsideBranch(node);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
85	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  astPositionCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.redeclareVarsInsideBranch(node,  astPositionCounter);	  NodeUtil.redeclareVarsInsideBranch(node);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
86	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  parent);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  parent);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.redeclareVarsInsideBranch(node,  parent);	  NodeUtil.redeclareVarsInsideBranch(node);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
87	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  cfg);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  cfg);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.redeclareVarsInsideBranch(node,  cfg);	  NodeUtil.redeclareVarsInsideBranch(node);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
88	[BUG]  [BUGGY]  NodeUtil.removeChild(cloneTree(node));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(cloneTree(node));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(cloneTree(node));	  NodeUtil.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  cfg);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(parent,  cfg);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(parent,  cfg);	  NodeUtil.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
90	[BUG]  [BUGGY]  node.setType(Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	  if(node.getType()    ==    Token.EXPR_RESULT)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
91	[BUG]  [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	  if(node.getType()    ==    Token.EXPR_RESULT)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
92	[BUG]  [BUGGY]  node.setType(Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;	  if(node.getType()    ==    Token.EXPR_RESULT)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
93	[BUG]  [BUGGY]  final  Node  body  =  node.getLastChild();  finallyMap.put(body,  cfg);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  final  Node  body  =  node.getLastChild();  finallyMap.put(body,  cfg);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	final  Node  body  =  node.getLastChild();  finallyMap.put(body,  cfg);	  Node    body    =    node.getLastChild();    finallyMap.put(body,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
94	[BUG]  [BUGGY]  Node  body  =  cfg.getLastChild();  finallyMap.put(body,  cfg);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  cfg.getLastChild();  finallyMap.put(body,  cfg);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  cfg.getLastChild();  finallyMap.put(body,  cfg);	  Node    body    =    node.getLastChild();    finallyMap.put(body,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
95	[BUG]  [BUGGY]  Node  body  =  cfg.getLastChild();  finallyMap.put(body,  node);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  cfg.getLastChild();  finallyMap.put(body,  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  cfg.getLastChild();  finallyMap.put(body,  node);	  Node    body    =    node.getLastChild();    finallyMap.put(body,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
96	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap,  node);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap,  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap,  node);	  NodeTraversal.traverse(compiler,    node,    astPositionCounter,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
97	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap,  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap,  exceptionHandler);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap,  exceptionHandler);	  NodeTraversal.traverse(compiler,    node,    astPositionCounter,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
99	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getType()  ==  Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getType()  ==  Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getType()  ==  Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
101	[BUG]  [BUGGY]  Node  node  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  node  =  node.getFirstChild();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  node  =  node.getFirstChild();	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
102	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  this);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    node);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
103	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    node);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
104	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  finallyMap);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  finallyMap);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  finallyMap);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    node);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
105	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  nodePriorities);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  nodePriorities);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  nodePriorities);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    node);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
106	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  firstChild);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  firstChild);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node,  firstChild);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    node);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
107	[BUG]  [BUGGY]  NodeUtil.clearChild(node,  node);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.clearChild(node,  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.clearChild(node,  node);	  NodeUtil.clearChild(node);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
108	[BUG]  [BUGGY]  NodeUtil.clearChild(parent,  node);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.clearChild(parent,  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.clearChild(parent,  node);	  NodeUtil.clearChild(node);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
109	[BUG]  [BUGGY]  NodeUtil.clearChild(node,  parent);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.clearChild(node,  parent);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.clearChild(node,  parent);	  NodeUtil.clearChild(node);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
110	[BUG]  [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getLastChild());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.BLOCK,  node.getLastChild());	  CreateEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
111	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  Branch.BLOCK,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  Branch.BLOCK,  node.getFirstChild());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  Branch.BLOCK,  node.getFirstChild());	  CreateEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
112	[BUG]  [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);	  CreateEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
113	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild(),  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild(),  astPositionCounter);	  createEdge(node,    Branch.BLOCK,    node.getLastChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
114	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getLastChild(),  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getLastChild(),  priorityCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getLastChild(),  priorityCounter);	  createEdge(node,    Branch.BLOCK,    node.getLastChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
115	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  node);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getLastChild(),  node);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    node);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
116	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  node);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  node);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    node);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
117	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  parent);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  parent);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  parent);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    node);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
118	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  this);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  this);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    node);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
119	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
120	[BUG]  [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
121	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.FUNCTION  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.FUNCTION  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
122	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
123	[BUG]  [BUGGY]  NodeUtil.removeChild(first,  node);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(first,  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(first,  node);	  NodeUtil.removeChild(node,    first);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
124	[BUG]  [BUGGY]  NodeUtil.removeChild(child,  first);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(child,  first);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(child,  first);	  NodeUtil.removeChild(node,    first);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
125	[BUG]  [BUGGY]  Node  body  =  node.getBody();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getBody();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getBody();	  Node    body    =    node.getNext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
126	[BUG]  [BUGGY]  Preconditions.checkState(node.getFirstChild()!=  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getFirstChild()!=  null);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getFirstChild()!=  null);	  if(node.getFirstChild()!=    null)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
127	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    this,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
128	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  node);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  node);	  NodeTraversal.traverse(compiler,    node,    this,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
129	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  finallyMap);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  finallyMap);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  finallyMap);	  NodeTraversal.traverse(compiler,    node,    this,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
130	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  astPositionCounter,  new  AstControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  astPositionCounter,  new  AstControlFlowGraph());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  astPositionCounter,  new  AstControlFlowGraph());	  NodeTraversal.traverse(compiler,    node,    this,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
131	[BUG]  [BUGGY]  Node  body  =  node.getOwnerFunction();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getOwnerFunction();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getOwnerFunction();	  Node    body    =    node.getParent();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
132	[BUG]  [BUGGY]  NodeUtil.removeChild(node,  createEdge(node));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(node,  createEdge(node));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(node,  createEdge(node));	  NodeUtil.removeChild(node,    node);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
133	[BUG]  [BUGGY]  NodeUtil.removeChild(node,  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(node,  this);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(node,  this);	  NodeUtil.removeChild(node,    node);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
134	[BUG]  [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;	  if(node.getFirstChild()!=    node)    {    createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
135	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
136	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  astPosition);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  astPosition);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  astPosition);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
137	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  deflt);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  deflt);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  deflt);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
138	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  this);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
139	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  priorityComparator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  priorityComparator);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  priorityComparator);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
140	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  exceptionHandler);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  exceptionHandler);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
141	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  exceptionHandler,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  exceptionHandler,  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  exceptionHandler,  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
142	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  this);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
143	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  priorityCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  priorityCounter);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
144	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild(),  node);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild(),  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild(),  node);	  cfg.createEdge(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
145	[BUG]  [BUGGY]  final  Node  body  =  node.getLastChild();  finallyMap.put(body,  node);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  final  Node  body  =  node.getLastChild();  finallyMap.put(body,  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	final  Node  body  =  node.getLastChild();  finallyMap.put(body,  node);	  final    Node    body    =    node.getFirstChild();    finallyMap.put(body,    node);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
146	[BUG]  [BUGGY]  finallyMap.put(body,  node);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  finallyMap.put(body,  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	finallyMap.put(body,  node);	  final    Node    body    =    node.getFirstChild();    finallyMap.put(body,    node);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
147	[BUG]  [BUGGY]  Node  body  =  node.getNext();  finallyMap.put(body,  node);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getNext();  finallyMap.put(body,  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getNext();  finallyMap.put(body,  node);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    node);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
148	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(node,  body);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(node,  body);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(node,  body);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    node);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
149	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
150	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter,  priorityComparator);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter,  priorityComparator);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter,  priorityComparator);	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
151	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  priorityCounter);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  priorityCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  priorityCounter);	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
152	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter,  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter,  priorityCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter,  priorityCounter);	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
153	[BUG]  [BUGGY]  node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
154	[BUG]  [BUGGY]  node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
155	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter,  priorityComparator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter,  priorityComparator);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter,  priorityComparator);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
156	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  priorityCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  priorityCounter);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
157	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter,  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter,  priorityCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter,  priorityCounter);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
158	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  exceptionHandler);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  exceptionHandler);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
159	[BUG]  [BUGGY]  finallyMap.put(node,  node);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  finallyMap.put(node,  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	finallyMap.put(node,  node);	  Node    body    =    node.getLastChild();    finallyMap.put(body,    node);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
160	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  astPosition);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  astPosition);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  astPosition);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
161	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
162	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  finallyMap);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  finallyMap);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  finallyMap);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
163	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  node);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  node);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
164	[BUG]  [BUGGY]  TraverseFunctions.traverse(compiler,  node,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  TraverseFunctions.traverse(compiler,  node,  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	TraverseFunctions.traverse(compiler,  node,  this);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
165	[BUG]  [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter);	  createEdge(node,    Branch.UNCOND,    node.getLastChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
166	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  priorityCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getLastChild(),  priorityCounter);	  createEdge(node,    Branch.UNCOND,    node.getLastChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
167	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  astPositionCounter,  priorityComparator);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  astPositionCounter,  priorityComparator);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getLastChild(),  astPositionCounter,  priorityComparator);	  createEdge(node,    Branch.UNCOND,    node.getLastChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
168	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    this);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
169	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  finallyMap);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  finallyMap);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  finallyMap);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    this);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
170	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  node);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  node);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    this);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
171	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  astPosition);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  astPosition);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  astPosition);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    this);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
172	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  this);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph(),  this);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    this);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
173	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  thenBlock);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  thenBlock);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  thenBlock);	  createEdge(node,    Branch.BLOCK,    node.getLastChild(),    thenBlock);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
174	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild(),  thenBlock);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild(),  thenBlock);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild(),  thenBlock);	  createEdge(node,    Branch.BLOCK,    node.getLastChild(),    thenBlock);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
175	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getLastChild(),  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getLastChild(),  value);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getLastChild(),  value);	  createEdge(node,    Branch.BLOCK,    node.getLastChild(),    thenBlock);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
176	[BUG]  [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  thenBlock);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  thenBlock);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  thenBlock);	  createEdge(node,    Branch.BLOCK,    node.getLastChild(),    thenBlock);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
177	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  astPositionCounter));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  astPositionCounter));  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  astPositionCounter));	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    finallyMap));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
178	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    finallyMap));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
179	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  this);	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    finallyMap));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
180	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  createEdge(node,  Branch.UNCOND,  finallyMap));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  createEdge(node,  Branch.UNCOND,  finallyMap));  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  createEdge(node,  Branch.UNCOND,  finallyMap));	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    finallyMap));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
181	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
182	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }	  createEdge(node,    Branch.UNCOND,    node.getFirstChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
183	[BUG]  [BUGGY]  cfg.report(node,  Branch.UNCOND,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.report(node,  Branch.UNCOND,  node.getFirstChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.report(node,  Branch.UNCOND,  node.getFirstChild());	  createEdge(node,    Branch.UNCOND,    node.getFirstChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
184	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }	  createEdge(node,    Branch.UNCOND,    node.getFirstChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
185	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  return;  }	  createEdge(node,    Branch.UNCOND,    node.getFirstChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
186	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  priorityComparator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  priorityComparator);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  priorityComparator);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
187	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  priorityCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  priorityCounter);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
188	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  int  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  int  priorityCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  int  priorityCounter);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
189	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  priorities);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  priorities);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  priorities);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
190	[BUG]  [BUGGY]  Context.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Context.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Context.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
191	[BUG]  [BUGGY]  Context.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Context.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Context.checkState(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
192	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getLastChild(),  node);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getLastChild(),  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getLastChild(),  node);	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    node);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
193	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  node);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  node);	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    node);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
194	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  parent);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  parent);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  parent);	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    node);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
195	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  this);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  this);	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    node);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
196	[BUG]  [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getLastChild()));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getLastChild()));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getLastChild()));	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
197	[BUG]  [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getFirstChild()));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getFirstChild()));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getLastChild();  finallyMap.put(body,  new  Integer(node.getFirstChild()));	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
198	[BUG]  [BUGGY]  final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()));	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
199	[BUG]  [BUGGY]  Node  body  =  node.getNext();  finallyMap.put(body,  new  Integer(node.getLastChild()));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getNext();  finallyMap.put(body,  new  Integer(node.getLastChild()));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getNext();  finallyMap.put(body,  new  Integer(node.getLastChild()));	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
200	[BUG]  [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.handleCatch(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    nodePriorities);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
201	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  firstChild);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  firstChild);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  firstChild);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    nodePriorities);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
202	[BUG]  [BUGGY]  node.setType(Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	  if(node.getType()    ==    Token.GETPROP)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
203	[BUG]  [BUGGY]  if(node.getType()  ==  Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	  if(node.getType()    ==    Token.GETPROP)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
204	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ControlFlowAnalysis());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ControlFlowAnalysis());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  ControlFlowAnalysis());	  NodeTraversal.traverse(compiler,    node,    new    ControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
205	[BUG]  [BUGGY]  Node  body  =  node.getGrandparent();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getGrandparent();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getGrandparent();	  Node    body    =    node.getParent();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
206	[BUG]  [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
207	[BUG]  [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
208	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.FUNCTION  ||  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
209	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||  node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||  node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.FUNCTION  ||  node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
210	[BUG]  [BUGGY]  Cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild());	  cfg.createEdge(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
211	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getString());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getString());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.BLOCK,  node.getString());	  cfg.createEdge(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
212	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  this);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  this);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()),    body);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
213	[BUG]  [BUGGY]  node.setType(Token.NAME)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.NAME)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.NAME)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	  if(node.getType()    ==    Token.NAME)    {    createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
214	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild(),  node);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild(),  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild(),  node);	  cfg.createEdge(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
215	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {	  createEdge(node,    Branch.UNCOND,    node.getFirstChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
216	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  createEdge(node,  Branch.UNCOND,  node.getLastChild()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  createEdge(node,  Branch.UNCOND,  node.getLastChild()));  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  createEdge(node,  Branch.UNCOND,  node.getLastChild()));	  NodeTraversal.traverse(compiler,    node,    finallyMap,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
217	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild()  +  1);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.BLOCK,  node.getFirstChild()  +  1);	  cfg.createEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
218	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  astPositionCounter));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  astPositionCounter));  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  astPositionCounter));	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    finallyMap));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
219	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  cfg));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  cfg));  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap),  cfg));	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    finallyMap));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
220	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  body);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  body);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.redeclareVarsInsideBranch(node,  body);	  NodeUtil.redeclareVarsInsideBranch(node);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
221	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  nodePriorities);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  nodePriorities);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.redeclareVarsInsideBranch(node,  nodePriorities);	  NodeUtil.redeclareVarsInsideBranch(node);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
222	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  thenBlock);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  thenBlock);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  thenBlock);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
223	[BUG]  [BUGGY]  NodeUtil.removeChild(node,  body);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.removeChild(node,  body);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.removeChild(node,  body);	  NodeUtil.removeChild(node,    node);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
224	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  ControlFlowGraph(cfg));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  ControlFlowGraph(cfg));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  ControlFlowGraph(cfg));	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
225	[BUG]  [BUGGY]  node.setType(Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	  if(node.getType()    ==    Token.GETPROP)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
226	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  thenBlock);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  thenBlock);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  thenBlock);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    nodePriorities);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
227	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  new  AstControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  new  AstControlFlowGraph());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  new  AstControlFlowGraph());	  NodeTraversal.traverse(compiler,    node,    this,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
228	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  ControlFlowAnalysisGraph());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  ControlFlowAnalysisGraph());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  this,  new  ControlFlowAnalysisGraph());	  NodeTraversal.traverse(compiler,    node,    this,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
229	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  int  priorityCounter);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  int  priorityCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  int  priorityCounter);	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
230	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap,  astPositionCounter);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap,  astPositionCounter);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
231	[BUG]  [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);	  createEdge(node,    Branch.UNCOND,    node.getLastChild(),    nodePriorities);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
232	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()  +  1));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()  +  1));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()  +  1));	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
233	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()!=  node);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()!=  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()!=  node);	  Preconditions.checkState(node.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
234	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()!=  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()!=  null);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()!=  null);	  Preconditions.checkState(node.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
235	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()  ==  node);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()  ==  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()  ==  node);	  Preconditions.checkState(node.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
236	[BUG]  [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
237	[BUG]  [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
238	[BUG]  [BUGGY]  NodeUtil.replaceChild(node,  parent);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.replaceChild(node,  parent);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.replaceChild(node,  parent);	  NodeUtil.removeChild(parent,    node);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
239	[BUG]  [BUGGY]  NodeUtil.insertChild(node,  parent);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.insertChild(node,  parent);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.insertChild(node,  parent);	  NodeUtil.removeChild(parent,    node);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
240	[BUG]  [BUGGY]  node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
241	[BUG]  [BUGGY]  node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.FUNCTION)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
242	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.FUNCTION);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.FUNCTION);	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
243	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  this);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    this);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
244	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this.astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this.astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this.astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
245	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  exceptionHandler);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  exceptionHandler);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
246	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  finallyMap);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  finallyMap);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  finallyMap);	  connectToPossibleExceptionHandler(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
247	[BUG]  [BUGGY]  Preconditions.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
248	[BUG]  [BUGGY]  Preconditions.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
249	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  firstBlock,  finallyMap);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  firstBlock,  finallyMap);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  firstBlock,  finallyMap);	  NodeTraversal.traverse(compiler,    node,    astPositionCounter,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
250	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap,  priorityComparator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap,  priorityComparator);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap,  priorityComparator);	  NodeTraversal.traverse(compiler,    node,    astPositionCounter,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
251	[BUG]  [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
252	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  ControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  ControlFlowGraph());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  ControlFlowGraph());	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
253	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  ControlFlowAnalysis());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  ControlFlowAnalysis());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  ControlFlowAnalysis());	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
254	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph  <  Node>());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph  <  Node>());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph  <  Node>());	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
255	[BUG]  [BUGGY]  Node  firstChild  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  firstChild  =  node.getFirstChild();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  firstChild  =  node.getFirstChild();	  if(node.getFirstChild()!=    null)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
256	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  firstChild);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  firstChild);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  firstChild);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    node);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
257	[BUG]  [BUGGY]  node.setType(Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	  if(node.getType()    ==    Token.EXPR_RESULT)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
258	[BUG]  [BUGGY]  NodeUtil.clearChild(node,  finallyMap);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.clearChild(node,  finallyMap);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.clearChild(node,  finallyMap);	  NodeUtil.clearChild(node);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
259	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  body);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  body);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  body);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    node);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
260	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  priorityCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  priorityCounter);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPosition);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
261	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  exceptionHandler,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  exceptionHandler,  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  exceptionHandler,  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
262	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  priorityCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  priorityCounter);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
263	[BUG]  [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  finallyMap);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  finallyMap);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  finallyMap);	  CreateEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
264	[BUG]  [BUGGY]  Preconditions.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  compiler.reportCodeChange();  }	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
265	[BUG]  [BUGGY]  Preconditions.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  compiler.reportCodeChange();  }	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
266	[BUG]  [BUGGY]  NodeUtil.replaceChild(node,  last);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.replaceChild(node,  last);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.replaceChild(node,  last);	  NodeUtil.removeChild(last,    node);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
267	[BUG]  [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	node.setType(Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
268	[BUG]  [BUGGY]  Node  body  =  node.getAncestor(2).cloneTree();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getAncestor(2).cloneTree();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getAncestor(2).cloneTree();	  Node    body    =    node.getAncestor(2);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
269	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getFirstChild()!=  node);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getFirstChild()!=  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getFirstChild()!=  node);	  Preconditions.checkState(node.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
270	[BUG]  [BUGGY]  if(node.getFirstChild()  ==  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getFirstChild()  ==  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getFirstChild()  ==  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getFirstChild()!=    null)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
271	[BUG]  [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();	  if(node.getFirstChild()!=    null)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
272	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  exceptionHandler);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter,  exceptionHandler);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
273	[BUG]  [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.cloneTree());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.cloneTree());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.handleCatch(node,  Branch.UNCOND,  node.cloneTree());	  cfg.handleCatch(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
274	[BUG]  [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.removeFirstChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.handleCatch(node,  Branch.UNCOND,  node.removeFirstChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.handleCatch(node,  Branch.UNCOND,  node.removeFirstChild());	  cfg.handleCatch(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
275	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  null);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg,  null);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    cfg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
276	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.removeFirstChild(),  node);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.removeFirstChild(),  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.removeFirstChild(),  node);	  createEdge(node,    Branch.BLOCK,    node.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
277	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  this);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPosition);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
278	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  exceptionHandler);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  exceptionHandler);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPosition);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
279	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  compiler);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  compiler);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition,  compiler);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    astPosition);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
280	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  &&  NodeUtil.hasFinally(node))  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.NAME  &&  NodeUtil.hasFinally(node))  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.NAME  &&  NodeUtil.hasFinally(node))  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	  if(node.getType()    ==    Token.NAME)    {    createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
281	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.NAME  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.NAME  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	  if(node.getType()    ==    Token.NAME)    {    createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
282	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.removeFirstChild(),  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.removeFirstChild(),  node.getLastChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.removeFirstChild(),  node.getLastChild());	  createEdge(node,    Branch.UNCOND,    node.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
283	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.removeFirstChild(),  node);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.removeFirstChild(),  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.removeFirstChild(),  node);	  createEdge(node,    Branch.UNCOND,    node.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
284	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getValue()));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getValue()));	  Node    body    =    node.getLastChild();    finallyMap.put(body,    body);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
285	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  thenBlock);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  thenBlock);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  thenBlock);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    node);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
286	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  firstBlock);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  firstBlock);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  node,  firstBlock);	  NodeTraversal.traverse(compiler,    node,    finallyMap,    node);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
287	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
288	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
289	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
290	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
291	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.hasChildren())  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.hasChildren())  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH  &&  node.hasChildren())  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
292	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
293	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
294	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  exceptionHandler);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  exceptionHandler);	  connectToPossibleExceptionHandler(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
295	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  null);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  null);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild(),  null);	  connectToPossibleExceptionHandler(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
296	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  body);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  body);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this,  body);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    this);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
297	[BUG]  [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();	  if(node.getType()    ==    Token.FUNCTION)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
298	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.cloneTree());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.cloneTree());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.cloneTree());	  cfg.createEdge(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
299	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  iter);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  iter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  iter);	  createEdge(node,    Branch.BLOCK,    node.getLastChild(),    thenBlock);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
300	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  next);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  next);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  next);	  createEdge(node,    Branch.BLOCK,    node.getLastChild(),    thenBlock);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
301	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  body);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  body);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  body);	  createEdge(node,    Branch.BLOCK,    node.getLastChild(),    thenBlock);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
302	[BUG]  [BUGGY]  Node  body  =  node.getBody(1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getBody(1);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getBody(1);	  Node    body    =    node.getAncestor(1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
303	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  if(body!=  null)  {  finallyMap.put(body,  new  Integer(node.getLastChild()));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getFirstChild();  if(body!=  null)  {  finallyMap.put(body,  new  Integer(node.getLastChild()));  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getFirstChild();  if(body!=  null)  {  finallyMap.put(body,  new  Integer(node.getLastChild()));  }	  Node    body    =    node.getLastChild();    if(body!=    null)    {    finallyMap.put(body,    body);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
304	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
305	[BUG]  [BUGGY]  NodeUtil.clearChild(node,  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.clearChild(node,  this);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.clearChild(node,  this);	  NodeUtil.clearChild(node);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
306	[BUG]  [BUGGY]  NodeUtil.clearChild(node,  thenBlock);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.clearChild(node,  thenBlock);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.clearChild(node,  thenBlock);	  NodeUtil.clearChild(node);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
307	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  true);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  true);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
308	[BUG]  [BUGGY]  final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	final  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);	  Node    body    =    node.getFirstChild();    finallyMap.put(body,    new    Integer(node.getLastChild()),    body);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
309	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  int  priorityCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  int  priorityCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  int  priorityCounter);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
310	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  firstBlock);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  firstBlock);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  firstBlock);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
311	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  astPositionCounter);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  new  AstControlFlowGraph(),  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
312	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  this.finallyMap));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  this.finallyMap));  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  this.finallyMap));	  NodeTraversal.traverse(compiler,    node,    createEdge(node,    Branch.UNCOND,    finallyMap));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
313	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  node);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter,  node);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    node);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
314	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getFirstChild()!=  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getFirstChild()!=  null);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getFirstChild()!=  null);	  Preconditions.checkState(node.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
315	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getFirstChild()  ==  node);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getFirstChild()  ==  node);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT  ||  node.getFirstChild()  ==  node);	  Preconditions.checkState(node.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
316	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph(),  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph(),  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph(),  this);	  NodeTraversal.traverse(compiler,    node,    new    ControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
317	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  compiler);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  compiler);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap,  compiler);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph(),    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
318	[BUG]  [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  node);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  node);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	CreateEdge(node,  Branch.BLOCK,  node.getFirstChild(),  node);	  CreateEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
319	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter,  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter,  exceptionHandler);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter,  exceptionHandler);	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
320	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter  +  1);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter  +  1);	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
321	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  Node.newNumber(0));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  Node.newNumber(0));  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  Node.newNumber(0));	  createEdge(node,    Branch.BLOCK,    node.getFirstChild(),    node);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
322	[BUG]  [BUGGY]  Node  body  =  node.cloneTree();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Node  body  =  node.cloneTree();  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Node  body  =  node.cloneTree();	  Node    body    =    node.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
323	[BUG]  [BUGGY]  if(node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }	  createEdge(node,    Branch.UNCOND,    node.getFirstChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
324	[BUG]  [BUGGY]  if(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  }	  createEdge(node,    Branch.UNCOND,    node.getFirstChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
325	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap,  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap,  exceptionHandler);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  finallyMap,  exceptionHandler);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
326	[BUG]  [BUGGY]  cfg.setCatch(node,  Branch.BLOCK,  node.removeFirstChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.setCatch(node,  Branch.BLOCK,  node.removeFirstChild());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.setCatch(node,  Branch.BLOCK,  node.removeFirstChild());	  cfg.setCatch(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
327	[BUG]  [BUGGY]  cfg.setCatch(node,  Branch.BLOCK,  node.cloneTree());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.setCatch(node,  Branch.BLOCK,  node.cloneTree());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.setCatch(node,  Branch.BLOCK,  node.cloneTree());	  cfg.setCatch(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
328	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPositionCounter,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPositionCounter,  this);  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeTraversal.traverse(compiler,  node,  astPositionCounter,  this);	  NodeTraversal.traverse(compiler,    node,    astPositionCounter,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
329	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()  ==  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()  ==  null);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	Preconditions.checkState(node.getType()  ==  Token.CATCH  ||  node.getFirstChild()  ==  null);	  Preconditions.checkState(node.getType()    ==    Token.CATCH);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
330	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.cloneTree());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.cloneTree());  [BUGGY]        [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.BLOCK,  node.cloneTree());	  cfg.createEdge(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
331	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  node.getFirstChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.redeclareVarsInsideBranch(node,  node.getFirstChild());	  NodeUtil.redeclareVarsInsideBranch(node);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
332	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  thenBlock);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node,  thenBlock);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	NodeUtil.redeclareVarsInsideBranch(node,  thenBlock);	  NodeUtil.redeclareVarsInsideBranch(node);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
333	[BUG]  [BUGGY]  if(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getFirstChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getFirstChild()    ==    node)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
334	[BUG]  [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	if(node.getType()  ==  Token.CATCH  &&  node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	  if(node.getType()    ==    Token.CATCH)    {    createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
335	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  node.getLastChild());  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  node.getLastChild());	  cfg.createEdge(node,    Branch.UNCOND,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
336	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter,  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCatch(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());      [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter,  exceptionHandler);  [BUGGY]      }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleCatch  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3481553119113957	546	546	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  astPositionCounter,  exceptionHandler);	  createEdge(node,    Branch.UNCOND,    node.getFirstChild(),    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
