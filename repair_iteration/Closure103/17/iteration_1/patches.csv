bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  handleTree(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTree(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTree(n);	  handleGet(n);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
2	[BUG]  [BUGGY]  handleTRY(n);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTRY(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTRY(n);	  handleGet(n);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  root);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  root);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  root);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  root);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  this);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  Context  cfg  =  Context.getCurrentContext(n);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	Context  cfg  =  Context.getCurrentContext(n);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  Context  cfg  =  parent.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  Context  cfg  =  parent.getCurrentContext();  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	Context  cfg  =  parent.getCurrentContext();	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  Context  cfg  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  Context  cfg  =  context.getCurrentContext();  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	Context  cfg  =  context.getCurrentContext();	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  Context  cfg  =  Context.currentContext();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  Context  cfg  =  Context.currentContext();  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	Context  cfg  =  Context.currentContext();	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  n  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n  =  n.getFirstChild();  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n  =  n.getFirstChild();	      n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
13	[BUG]  [BUGGY]  n  =  parent.getLastChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n  =  parent.getLastChild();  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n  =  parent.getLastChild();	      n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  n  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n  =  n.getLastChild();  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n  =  n.getLastChild();	      n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  n  =  t.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n  =  t.getFirstChild();  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n  =  t.getFirstChild();	      n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  handleTwin(n);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTwin(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTwin(n);	  handleSerialization(n);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
17	[BUG]  [BUGGY]  handleFunction(n);  return;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleFunction(n);  return;  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleFunction(n);  return;	      handleThrow(n);    return;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  handleCount(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleCount(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleCount(n);	  handleRow(n);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  n.setString(getFunctionName()  + ": ");  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n.setString(getFunctionName()  + ": ");  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n.setString(getFunctionName()  + ": ");	      n.setString(getFunctionName());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
20	[BUG]  [BUGGY]  n.setString(getReturnType());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n.setString(getReturnType());  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n.setString(getReturnType());	      n.setString(getFunctionName());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
21	[BUG]  [BUGGY]  n.setString(getFunctionName()  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n.setString(getFunctionName()  +  1);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n.setString(getFunctionName()  +  1);	      n.setString(getFunctionName());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
22	[BUG]  [BUGGY]  n.setString(getName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n.setString(getName());  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n.setString(getName());	      n.setString(getFunctionName());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
23	[BUG]  [BUGGY]  handleTry(n,  cfg);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTry(n,  cfg);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTry(n,  cfg);	  handleTry(n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  handleTry(n,  parent.cloneTry());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTry(n,  parent.cloneTry());  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTry(n,  parent.cloneTry());	  handleTry(n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  handleTry(n,  parent.getParent());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTry(n,  parent.getParent());  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTry(n,  parent.getParent());	  handleTry(n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  handleFunction(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleFunction(n);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleFunction(n);	      handleStatement(n);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  astPositionCounter);	      NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  this);	      NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  nodePriorities);	      NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  handleTryStatement(n);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTryStatement(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTryStatement(n);	  handleTrySynthetic(n);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
31	[BUG]  [BUGGY]  handleTrySynthetic(t,  n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTrySynthetic(t,  n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTrySynthetic(t,  n);	  handleTrySynthetic(n);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
32	[BUG]  [BUGGY]  handleSynthetic(n);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleSynthetic(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleSynthetic(n);	  handleTrySynthetic(n);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  return;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  return;  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  root);  return;	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  return;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  return;  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  return;	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);  return;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);  return;  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);  return;	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  value);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  value);	      NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  handleEmbeddedBy(n);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleEmbeddedBy(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleEmbeddedBy(n);	  handleSerialization(n);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  handleTryReturn(n);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTryReturn(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTryReturn(n);	  handleTrySynthetic(n);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
39	[BUG]  [BUGGY]  handleTrySection(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTrySection(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTrySection(n);	  handleTrySynthetic(n);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
40	[BUG]  [BUGGY]  n.setString(getFunctionName()  + "- ");  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n.setString(getFunctionName()  + "- ");  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n.setString(getFunctionName()  + "- ");	      n.setString(getFunctionName());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
41	[BUG]  [BUGGY]  n.setString(getFunctionName()  + "_RY ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n.setString(getFunctionName()  + "_RY ");  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n.setString(getFunctionName()  + "_RY ");	      n.setString(getFunctionName());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
42	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  value);  return;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  value);  return;  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  value);  return;	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(parent);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  Context  cfg  =  Context.getCurrentContext(parent);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	Context  cfg  =  Context.getCurrentContext(parent);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContextForNode(n);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  Context  cfg  =  Context.getCurrentContextForNode(n);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	Context  cfg  =  Context.getCurrentContextForNode(n);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  n  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n  =  node.getFirstChild();  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n  =  node.getFirstChild();	      n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
46	[BUG]  [BUGGY]  handleSerialize(n);  return;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleSerialize(n);  return;  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleSerialize(n);  return;	      handleSerialization(n);    return;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  value);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  value);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  value);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  t);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  t);	      NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  handleSerial(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleSerial(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleSerial(n);	  handleRow(n);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  t.getCompiler().reportCodeChange();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  t.getCompiler().reportCodeChange();  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	t.getCompiler().reportCodeChange();	      handleThrow(n);    return;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  t.getCompiler().reportCodeChange();  return;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  t.getCompiler().reportCodeChange();  return;  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	t.getCompiler().reportCodeChange();  return;	      handleThrow(n);    return;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  t.getCompiler().reportError(t,  n);  return;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  t.getCompiler().reportError(t,  n);  return;  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	t.getCompiler().reportError(t,  n);  return;	      handleThrow(n);    return;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  n.setString(getReturnFunctionName());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  n.setString(getReturnFunctionName());  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	n.setString(getReturnFunctionName());	      n.setString(getFunctionName());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  exceptionHandler);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  exceptionHandler);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  handleTry(n,  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTry(n,  parent.getFirstChild());  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTry(n,  parent.getFirstChild());	  handleTry(n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
56	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(t,  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  Context  cfg  =  Context.getCurrentContext(t,  n);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	Context  cfg  =  Context.getCurrentContext(t,  n);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContextForNoInOperator(t);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  Context  cfg  =  Context.getCurrentContextForNoInOperator(t);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	Context  cfg  =  Context.getCurrentContextForNoInOperator(t);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(t);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  Context  cfg  =  Context.getCurrentContext(t);  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	Context  cfg  =  Context.getCurrentContext(t);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  handleTryAnswer(n);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTryAnswer(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTryAnswer(n);	  handleTrySynthetic(n);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
60	[BUG]  [BUGGY]  handleTryRow(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  handleTryRow(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	handleTryRow(n);	  handleTrySynthetic(n);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
61	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  root);  return;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  root);  return;  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  root);  return;	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  return;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.FUNCTION:  handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  return;  [BUGGY]    handleTry(n);  return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	328	328	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  this);  return;	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
