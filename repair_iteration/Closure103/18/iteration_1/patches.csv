bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  parent);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  parent);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  parent);	      NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  AstControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  AstControlFlowGraph());  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  AstControlFlowGraph());	      NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  cfg);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  cfg);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  cfg);	      NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  nodePriorities);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  nodePriorities);	      NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  parent);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  parent);	      NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  root);	      NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  handleAnalysisFlowGraph(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleAnalysisFlowGraph(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleAnalysisFlowGraph(n);	      handleAstControlFlowGraph(n);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  handleAstControlFlowGraph(n,  parent);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleAstControlFlowGraph(n,  parent);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleAstControlFlowGraph(n,  parent);	      handleAstControlFlowGraph(n);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  handleAstControlFlowGraph(n,  cfg);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleAstControlFlowGraph(n,  cfg);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleAstControlFlowGraph(n,  cfg);	      handleAstControlFlowGraph(n);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
10	[BUG]  [BUGGY]  handleAnalysis(n);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleAnalysis(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleAnalysis(n);	      handleAstControl(n);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  n  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n  =  n.getFirstChild();  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n  =  n.getFirstChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  n  =  parent.getLastChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n  =  parent.getLastChild();  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n  =  parent.getLastChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  n  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n  =  n.getLastChild();  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n  =  n.getLastChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  handleRow(n);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleRow(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleRow(n);	      handleTry(n);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  handleThrow(n);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleThrow(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleThrow(n);	      handleTry(n);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  handleCount(n);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleCount(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleCount(n);	      handleTry(n);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  Context.checkState(shouldTraverseFunctions);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context.checkState(shouldTraverseFunctions);  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context.checkState(shouldTraverseFunctions);	  if(!shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  NeighborTraversal.traverse(compiler,  n,  parent);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NeighborTraversal.traverse(compiler,  n,  parent);  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NeighborTraversal.traverse(compiler,  n,  parent);	  if(!shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  NeighborTraversal.traverse(compiler,  n);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NeighborTraversal.traverse(compiler,  n);  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NeighborTraversal.traverse(compiler,  n);	  if(!shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  handleStatement(n);  return;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleStatement(n);  return;  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleStatement(n);  return;	      handleFunction(n);    return;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.astPositionCounter);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.astPositionCounter);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  this.astPositionCounter);	      NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  priorityCounter);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  priorityCounter);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  priorityCounter);	      NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  priorityComparator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  priorityComparator);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  astPositionCounter,  priorityComparator);	      NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  nodePriorities);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  nodePriorities);	      NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  n.removeChild(entry);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n.removeChild(entry);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n.removeChild(entry);	      n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  n.removeChild(name);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n.removeChild(name);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n.removeChild(name);	      n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  n.replaceChild(n,  parent);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n.replaceChild(n,  parent);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n.replaceChild(n,  parent);	      n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  n.removeChild(n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n.removeChild(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n.removeChild(n);	      n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  n  =  parent.getNext();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n  =  parent.getNext();  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n  =  parent.getNext();	  n    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  n  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n  =  n.getParent();  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n  =  n.getParent();	  n    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  n  =  n.getNext();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n  =  n.getNext();  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n  =  n.getNext();	  n    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse: "  +  n);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse: "  +  n);  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	throw  new  IllegalStateException( "Failed  to  parse: "  +  n);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  handleFunction(n,  parent);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleFunction(n,  parent);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleFunction(n,  parent);	      handleFunction(n);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  handleOwn(n);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleOwn(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleOwn(n);	      handleFunction(n);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  handleStatement(n,  parent);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleStatement(n,  parent);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleStatement(n,  parent);	      handleStatement(n);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  handleDeepest(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleDeepest(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleDeepest(n);	      handleStatement(n);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
38	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  nodePriorities);	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  return;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  return;  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  root);  return;	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  return;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  return;  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  astPositionCounter);  return;	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  astPositionCounter);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  this,  astPositionCounter);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
43	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  nodePriorities);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  nodePriorities);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  this,  nodePriorities);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
44	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  this,  parent);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
45	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  null);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
46	[BUG]  [BUGGY]  While(shouldTraverseFunctions)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  While(shouldTraverseFunctions)  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	While(shouldTraverseFunctions)  {  return;  }	  if(shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  NeighborTraversal.traverse(compiler,  n)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NeighborTraversal.traverse(compiler,  n)  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NeighborTraversal.traverse(compiler,  n)  {  return;  }	  if(shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  root);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  root);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  root);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  this);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context  cfg  =  Context.getCurrentContext(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context  cfg  =  Context.getCurrentContext(n);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  Context  cfg  =  parent.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context  cfg  =  parent.getCurrentContext();  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context  cfg  =  parent.getCurrentContext();	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  Context  cfg  =  Context.currentContext();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context  cfg  =  Context.currentContext();  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context  cfg  =  Context.currentContext();	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  Context  cfg  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context  cfg  =  context.getCurrentContext();  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context  cfg  =  context.getCurrentContext();	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  Token.getMessage());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  throw  new  IllegalArgumentException( " "  +  Token.getMessage());  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	throw  new  IllegalArgumentException( " "  +  Token.getMessage());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  handleExpression(n);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleExpression(n);  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleExpression(n);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  handleFall(n);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleFall(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleFall(n);	      handleFunction(n);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
57	[BUG]  [BUGGY]  n.removeChild(value);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n.removeChild(value);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n.removeChild(value);	      n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  n  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n  =  node.getFirstChild();  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n  =  node.getFirstChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  root,  n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  root,  n);	      NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(parent);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context  cfg  =  Context.getCurrentContext(parent);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context  cfg  =  Context.getCurrentContext(parent);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
61	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(t);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context  cfg  =  Context.getCurrentContext(t);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context  cfg  =  Context.getCurrentContext(t);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  handleFallThrough(n);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleFallThrough(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleFallThrough(n);	      handleStatement(n);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  handleDeep(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleDeep(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleDeep(n);	      handleStatement(n);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  throw  new  IllegalArgumentException( " "  +  Token.EXPR_RESULT);  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	throw  new  IllegalArgumentException( " "  +  Token.EXPR_RESULT);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  Token.name(n.getType()));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  throw  new  IllegalArgumentException( " "  +  Token.name(n.getType()));  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	throw  new  IllegalArgumentException( " "  +  Token.name(n.getType()));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ControlFlowAnalysisGraph());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ControlFlowAnalysisGraph());  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  new  ControlFlowAnalysisGraph());	      NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	      NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AstControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AstControlFlowGraph());  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  this,  new  AstControlFlowGraph());	      NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
69	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  root);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  root);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  this,  root);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
70	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  value);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  value);	      NodeTraversal.traverse(compiler,    n,    parent);    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  handleShouldTraverseFunction(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleShouldTraverseFunction(n);  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleShouldTraverseFunction(n);	  if(shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  safelyMap.put(n,  shouldTraverseFunctions)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  safelyMap.put(n,  shouldTraverseFunctions)  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	safelyMap.put(n,  shouldTraverseFunctions)  {  return;  }	  if(shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  safelyMap.put(n,  shouldTraverseFunctions);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  safelyMap.put(n,  shouldTraverseFunctions);  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	safelyMap.put(n,  shouldTraverseFunctions);	  if(shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
74	[BUG]  [BUGGY]  Context.checkState(shouldTraverseFunctions)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context.checkState(shouldTraverseFunctions)  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context.checkState(shouldTraverseFunctions)  {  return;  }	  if(shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
75	[BUG]  [BUGGY]  handleEmbeddedBy(n);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleEmbeddedBy(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleEmbeddedBy(n);	      handleAstControl(n);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
76	[BUG]  [BUGGY]  handleSerialize(n);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleSerialize(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleSerialize(n);	      handleTry(n);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.exceptionHandler);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.exceptionHandler);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  this.exceptionHandler);	      NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
78	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  priorityComparator);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  priorityComparator);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  priorityComparator);	      NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
79	[BUG]  [BUGGY]  parent  ==  null  &&!shouldTraverseFunctions)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  parent  ==  null  &&!shouldTraverseFunctions)  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	parent  ==  null  &&!shouldTraverseFunctions)  {  return;  }	  if(!shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  handleControlFlowGraph(n);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleControlFlowGraph(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleControlFlowGraph(n);	      handleAstControlFlowGraph(n);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
81	[BUG]  [BUGGY]  handleFallback(n);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleFallback(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleFallback(n);	      handleAstControl(n);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
82	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContext(t,  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context  cfg  =  Context.getCurrentContext(t,  n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context  cfg  =  Context.getCurrentContext(t,  n);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
83	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContextForNoInOperator(t,  n);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context  cfg  =  Context.getCurrentContextForNoInOperator(t,  n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context  cfg  =  Context.getCurrentContextForNoInOperator(t,  n);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
84	[BUG]  [BUGGY]  Context  cfg  =  Context.getCurrentContextForNoInOperator(t);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Context  cfg  =  Context.getCurrentContextForNoInOperator(t);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Context  cfg  =  Context.getCurrentContextForNoInOperator(t);	      Context    cfg    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
85	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  t);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  t);	      NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
86	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse: "  +  t.getMessage());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse: "  +  t.getMessage());  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	throw  new  IllegalStateException( "Failed  to  parse: "  +  t.getMessage());	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
87	[BUG]  [BUGGY]  parent  ==  null  &&  shouldTraverseFunctions)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  parent  ==  null  &&  shouldTraverseFunctions)  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	parent  ==  null  &&  shouldTraverseFunctions)  {  return;  }	  if(shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
88	[BUG]  [BUGGY]  if(shouldTraverseFunctions  ||  t.getModule()  ==  Token.FUNCTION)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  if(shouldTraverseFunctions  ||  t.getModule()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	if(shouldTraverseFunctions  ||  t.getModule()  ==  Token.FUNCTION)  {  return;  }	  if(shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
89	[BUG]  [BUGGY]  if(shouldTraverseFunctions  ||  handleShouldTraverseFunction(n))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  if(shouldTraverseFunctions  ||  handleShouldTraverseFunction(n))  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	if(shouldTraverseFunctions  ||  handleShouldTraverseFunction(n))  {  return;  }	  if(shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
90	[BUG]  [BUGGY]  if(shouldTraverseFunctions  ||  t.getCompiler()!=  n)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  if(shouldTraverseFunctions  ||  t.getCompiler()!=  n)  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	if(shouldTraverseFunctions  ||  t.getCompiler()!=  n)  {  return;  }	  if(shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
91	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  astPositionCounter,  exceptionHandler);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  astPositionCounter,  exceptionHandler);	      NodeTraversal.traverse(compiler,    n,    astPositionCounter);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
92	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  this);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  this);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  this);	      NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
93	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  astPositionCounter);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  new  AstControlFlowGraph(),  astPositionCounter);	      NodeTraversal.traverse(compiler,    n,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
94	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
95	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "The  Token  is  null. ");  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  throw  new  IllegalArgumentException( "The  Token  is  null. ");  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	throw  new  IllegalArgumentException( "The  Token  is  null. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
96	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  exceptionHandler);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	NodeTraversal.traverse(compiler,  n,  parent,  exceptionHandler);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
97	[BUG]  [BUGGY]  handleGet(n);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  handleGet(n);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	handleGet(n);	      handleTry(n);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
98	[BUG]  [BUGGY]  n.removeChild(root);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n.removeChild(root);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n.removeChild(root);	      n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
99	[BUG]  [BUGGY]  n.removeChild(key);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  n.removeChild(key);  [BUGGY]    return;  case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	n.removeChild(key);	      n.removeChild(parent);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
100	[BUG]  [BUGGY]  if(!shouldTraverseFunctions  &&  NodeUtil.isExpressionNode(parent))  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  if(!shouldTraverseFunctions  &&  NodeUtil.isExpressionNode(parent))  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	if(!shouldTraverseFunctions  &&  NodeUtil.isExpressionNode(parent))  {  return;  }	  if(!shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
101	[BUG]  [BUGGY]  if(!shouldTraverseFunctions  &&  n!=  parent.getFirstChild())  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handleFunction(n);  return;  case  Token.EXPR_RESULT:  handleExpr(n);  return;  case  Token.THROW:  handleThrow(n);  return;  case  Token.TRY:  handleTry(n);    [BUGGY]  if(!shouldTraverseFunctions  &&  n!=  parent.getFirstChild())  {  return;  }  [BUGGY]    case  Token.CATCH:  handleCatch(n);  return;  case  Token.BREAK:  handleBreak(n);  return;  case  Token.CONTINUE:  handleContinue(n);  return;  case  Token.RETURN:  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  t  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	329	329	3	replace	if(!shouldTraverseFunctions  &&  n!=  parent.getFirstChild())  {  return;  }	  if(!shouldTraverseFunctions)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
