bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
15	[BUG] [BUGGY] if (NodeUtil.hasFinally(parent)) { // and have FINALLY block. return computeFallThrough(parent.getLastChild()); [FE] AssertionFailedError [CONTEXT] return parent; } else { return parent.getFirstChild().getNext().getNext(); } case Token.WHILE: case Token.DO: return parent; case Token.TRY:  if (parent.getFirstChild() == node) { [BUGGY] if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.   return computeFallThrough(parent.getLastChild()); [BUGGY] return computeFallThrough(parent.getLastChild()); } else { // and have no FINALLY. return computeFollowNode(fromNode, parent); }  } else if (NodeUtil.getCatchBlock(parent) == node){ if (NodeUtil.hasFinally(parent)) { // and have FINALLY block. return computeFallThrough(node.getNext()); } else { return computeFollowNode(fromNode, parent); [CLASS] ControlFlowAnalysis 1 AstControlFlowGraph 1 2 [METHOD] computeFollowNode [RETURN_TYPE] Node  Node fromNode Node node [VARIABLES] Multimap finallyMap AbstractCompiler compiler boolean shouldTraverseFunctions ControlFlowGraph cfg Node body child collection cond cur curHandler deflt elseBlock entry externs finallyNode forNode fromNode init item iter lastJump n next nextSibling node parent root thenBlock value Map astPosition nodePriorities priorities Deque exceptionHandler int astPositionCounter priorityCounter Comparator priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3086066999241838	727	728	3	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return parent; } else { return parent.getFirstChild().getNext().getNext(); } case Token.WHILE: case Token.DO: return parent; case Token.TRY:  if (parent.getFirstChild() == node) { [BUGGY] [BUGGY] if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.   return computeFallThrough(parent.getLastChild()); return computeFallThrough(parent.getLastChild()); } else { // and have no FINALLY. return computeFollowNode(fromNode, parent); }  } else if (NodeUtil.getCatchBlock(parent) == node){ if (NodeUtil.hasFinally(parent)) { // and have FINALLY block. return computeFallThrough(node.getNext()); } else { return computeFollowNode(fromNode, parent); [CLASS] ControlFlowAnalysis 1 AstControlFlowGraph 1 2 [METHOD] computeFollowNode [RETURN_TYPE] Node  Node fromNode Node node [VARIABLES] Multimap finallyMap AbstractCompiler compiler boolean shouldTraverseFunctions ControlFlowGraph cfg Node body child collection cond cur curHandler deflt elseBlock entry externs finallyNode forNode fromNode init item iter lastJump n next nextSibling node parent root thenBlock value Map astPosition nodePriorities priorities Deque exceptionHandler int astPositionCounter priorityCounter Comparator priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.3086066999241838	727	728	3	add	
