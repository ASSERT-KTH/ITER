bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  computeFallThrough(fromNode,  parent);  [CE]  method  computeFallThrough  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFallThrough(fromNode,  parent);  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	return  computeFallThrough(fromNode,  parent);	return  computeFollowNode(fromNode,  parent);  	non-compiled	[CE]  method  computeFallThrough  in  class  ControlFlowAnalysis  cannot  be  applied  to  given  types;	1	None	replace
2	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFollowNode(fromNode,  node);  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	return  computeFollowNode(fromNode,  node);	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  StackOverflowError  	1	7	replace
3	[BUG]  [BUGGY]  return  computeFollowNode(fromNode,  node);  [FE]  StackOverflowError  [FE]      AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFollowNode(fromNode,  node);  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	return  computeFollowNode(fromNode,  node);	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  StackOverflowError  	1	7	replace
4	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFollowNode(fromNode,  parent.getFirstChild());  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	return  computeFollowNode(fromNode,  parent.getFirstChild());	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  StackOverflowError  	1	7	replace
5	[BUG]  [BUGGY]  return  computeFollowNode(fromNode,  parent.getFirstChild());  [FE]  StackOverflowError  [FE]        AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFollowNode(fromNode,  parent.getFirstChild());  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	return  computeFollowNode(fromNode,  parent.getFirstChild());	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  StackOverflowError  	1	7	replace
6	[BUG]  [BUGGY]  return  computeFollowNode(fromNode,  parent,  node);  [CE]  no  suitable  method  found  for  computeFollowNode(Node,Node,Node)  [FE]          AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFollowNode(fromNode,  parent,  node);  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	return  computeFollowNode(fromNode,  parent,  node);	return  computeFollowNode(fromNode,  parent);  	non-compiled	[CE]  no  suitable  method  found  for  computeFollowNode(Node,Node,Node)	1	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFollowNode(fromNode,  parent.getLastChild());  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	return  computeFollowNode(fromNode,  parent.getLastChild());	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  AssertionFailedError  	1	3	replace
8	[BUG]  [BUGGY]  return  computeFollowNode(fromNode,  parent.getLastChild());  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFollowNode(fromNode,  parent.getLastChild());  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	return  computeFollowNode(fromNode,  parent.getLastChild());	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  AssertionFailedError  	1	3	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	  	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  AssertionFailedError  	1	5	replace
10	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]              AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	  	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  AssertionFailedError  	1	5	replace
11	[BUG]  [BUGGY]    Node  parent  =  node.getParent();  [CE]  variable  parent  is  already  defined  in  method  computeFollowNode(Node,Node)  [FE]    AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  parent  =  node.getParent();  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    Node  parent  =  node.getParent();		non-compiled	[CE]  variable  parent  is  already  defined  in  method  computeFollowNode(Node,Node)	2	None	add
12	[BUG]  [BUGGY]    NodeUtil.removeChild(parent);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    NodeUtil.removeChild(parent);  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    NodeUtil.removeChild(parent);		non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	2	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  body  =  parent.getFirstChild();  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	    Node  body  =  parent.getFirstChild();		compilable	  [FE]  AssertionFailedError  	2	3	add
14	[BUG]  [BUGGY]    Node  body  =  parent.getFirstChild();  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  body  =  parent.getFirstChild();  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    Node  body  =  parent.getFirstChild();		compilable	  [FE]  AssertionFailedError  	2	3	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  nextSibling  =  parent.getNext();  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	    Node  nextSibling  =  parent.getNext();		compilable	  [FE]  AssertionFailedError  	2	3	add
16	[BUG]  [BUGGY]    Node  nextSibling  =  parent.getNext();  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  nextSibling  =  parent.getNext();  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    Node  nextSibling  =  parent.getNext();		compilable	  [FE]  AssertionFailedError  	2	3	add
17	[BUG]  [BUGGY]    Node  parent  =  getParent();  [CE]  variable  parent  is  already  defined  in  method  computeFollowNode(Node,Node)  [FE]            AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  parent  =  getParent();  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    Node  parent  =  getParent();		non-compiled	[CE]  variable  parent  is  already  defined  in  method  computeFollowNode(Node,Node)	2	None	add
18	[BUG]  [BUGGY]    Node  parent  =  getParentNode(parent);  [CE]  variable  parent  is  already  defined  in  method  computeFollowNode(Node,Node)  [FE]              AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  parent  =  getParentNode(parent);  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    Node  parent  =  getParentNode(parent);		non-compiled	[CE]  variable  parent  is  already  defined  in  method  computeFollowNode(Node,Node)	2	None	add
19	[BUG]  [BUGGY]  return  computeFollowNode(fromNode,  parent,  nodePriorities);  [CE]  no  suitable  method  found  for  computeFollowNode(Node,Node,Map<DiGraphNode<Node,Branch>,Integer>)  [FE]    AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFollowNode(fromNode,  parent,  nodePriorities);  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	return  computeFollowNode(fromNode,  parent,  nodePriorities);	return  computeFollowNode(fromNode,  parent);  	non-compiled	[CE]  no  suitable  method  found  for  computeFollowNode(Node,Node,Map<DiGraphNode<Node,Branch>,Integer>)	1	None	replace
20	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    NodeTraversal.traverse(compiler,  node,  this);  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	    NodeTraversal.traverse(compiler,  node,  this);		compilable	  [FE]  StackOverflowError  	2	7	add
21	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  node,  this);  [FE]  StackOverflowError  [FE]    AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    NodeTraversal.traverse(compiler,  node,  this);  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    NodeTraversal.traverse(compiler,  node,  this);		compilable	  [FE]  StackOverflowError  	2	7	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  body  =  node.getFirstChild();  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	    Node  body  =  node.getFirstChild();		compilable	  [FE]  AssertionFailedError  	2	3	add
23	[BUG]  [BUGGY]    Node  body  =  node.getFirstChild();  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  body  =  node.getFirstChild();  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    Node  body  =  node.getFirstChild();		compilable	  [FE]  AssertionFailedError  	2	3	add
24	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    NodeUtil.removeChild(parent,  fromNode);  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	    NodeUtil.removeChild(parent,  fromNode);		compilable	  [FE]  RuntimeException  	2	6	add
25	[BUG]  [BUGGY]    NodeUtil.removeChild(parent,  fromNode);  [FE]  RuntimeException  [FE]        AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    NodeUtil.removeChild(parent,  fromNode);  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    NodeUtil.removeChild(parent,  fromNode);		compilable	  [FE]  RuntimeException  	2	6	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFallThrough(node.getFirstChild());  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	return  computeFallThrough(node.getFirstChild());	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  AssertionFailedError  	1	6	replace
27	[BUG]  [BUGGY]  return  computeFallThrough(node.getFirstChild());  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFallThrough(node.getFirstChild());  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	return  computeFallThrough(node.getFirstChild());	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  AssertionFailedError  	1	6	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFallThrough(node.getLastChild());  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	return  computeFallThrough(node.getLastChild());	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  AssertionFailedError  	1	6	replace
29	[BUG]  [BUGGY]  return  computeFallThrough(node.getLastChild());  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]  return  computeFallThrough(node.getLastChild());  [BUGGY]  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	return  computeFallThrough(node.getLastChild());	return  computeFollowNode(fromNode,  parent);  	compilable	  [FE]  AssertionFailedError  	1	6	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  nextSibling  =  parent.getFirstChild();  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	    Node  nextSibling  =  parent.getFirstChild();		compilable	  [FE]  AssertionFailedError  	2	3	add
31	[BUG]  [BUGGY]    Node  nextSibling  =  parent.getFirstChild();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    Node  nextSibling  =  parent.getFirstChild();  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    Node  nextSibling  =  parent.getFirstChild();		compilable	  [FE]  AssertionFailedError  	2	3	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    NodeUtil.removeChild(parent,  node);  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	add	    NodeUtil.removeChild(parent,  node);		compilable	  [FE]  AssertionFailedError  	2	5	add
33	[BUG]  [BUGGY]    NodeUtil.removeChild(parent,  node);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  if  (NodeUtil.hasFinally(parent))  {  //  and  have  FINALLY  block.  return  computeFallThrough(parent.getLastChild());  }  else  {  //  and  have  no  FINALLY.  [BUGGY]    NodeUtil.removeChild(parent,  node);  [BUGGY]  return  computeFollowNode(fromNode,  parent);  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  computeFollowNode  [RETURN_TYPE]  Node  Node  fromNode  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  cur  curHandler  deflt  elseBlock  entry  externs  finallyNode  forNode  fromNode  init  item  iter  lastJump  n  next  nextSibling  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.47140452079103173	730	730	3	replace	    NodeUtil.removeChild(parent,  node);		compilable	  [FE]  AssertionFailedError  	2	5	add
