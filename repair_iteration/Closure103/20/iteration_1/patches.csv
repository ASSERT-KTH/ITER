bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  cfg.handleTry(node,  Branch.BLOCK,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  cfg.handleTry(node,  Branch.BLOCK,  node.getFirstChild());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	cfg.handleTry(node,  Branch.BLOCK,  node.getFirstChild());	      createEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.BLOCK,  node.getFirstChild(),  astPositionCounter);	      createEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getNext());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getNext());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.BLOCK,  node.getNext());	      createEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getLastChild(),  node);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getLastChild(),  node);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.BLOCK,  node.getLastChild(),  node);	  createEdge(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild());  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	cfg.createEdge(node,  Branch.BLOCK,  node.getLastChild());	  createEdge(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getLastChild(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getLastChild(),  astPositionCounter);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.BLOCK,  node.getLastChild(),  astPositionCounter);	  createEdge(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  node);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeUtil.removeChild(parent,  node);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeUtil.removeChild(parent,  node);	      NodeUtil.removeChild(node);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  NodeUtil.removeChild(node,  node);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeUtil.removeChild(node,  node);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeUtil.removeChild(node,  node);	      NodeUtil.removeChild(node);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  NodeUtil.clearChild(node);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeUtil.clearChild(node);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeUtil.clearChild(node);	      NodeUtil.removeChild(node);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  NodeUtil.removeChild(parent);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeUtil.removeChild(parent);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeUtil.removeChild(parent);	      NodeUtil.removeChild(node);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  createEdge(node,  Branch.DECEMBER,  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.DECEMBER,  node.getLastChild());  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.DECEMBER,  node.getLastChild());	  createEdge(node,    Branch.DECEMBER,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  cfg.handleTry(node,  Branch.DECEMBER,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  cfg.handleTry(node,  Branch.DECEMBER,  node.getFirstChild());  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	cfg.handleTry(node,  Branch.DECEMBER,  node.getFirstChild());	  createEdge(node,    Branch.DECEMBER,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  createEdge(node,  Branch.DECEMBER,  node.getNext());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.DECEMBER,  node.getNext());  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.DECEMBER,  node.getNext());	  createEdge(node,    Branch.DECEMBER,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  createEdge(node,  Branch.DECEMBER,  node.getFirstChild(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.DECEMBER,  node.getFirstChild(),  nodePriorities);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.DECEMBER,  node.getFirstChild(),  nodePriorities);	  createEdge(node,    Branch.DECEMBER,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	      createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  if(node.getType()  ==  Token.TRY)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getType()  ==  Token.TRY)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getType()  ==  Token.TRY)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	      createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  cfg.handleTry(node,  Branch.UNCOND,  node.getFirstChild());  return;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  cfg.handleTry(node,  Branch.UNCOND,  node.getFirstChild());  return;  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	cfg.handleTry(node,  Branch.UNCOND,  node.getFirstChild());  return;	      createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  node);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph());  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  this,  new  AstControlFlowGraph());	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  finallyMap);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  this);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  node);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  node);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.UNCOND,  node.getLastChild(),  node);	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.UNCOND,  node.getLastChild(),  nodePriorities);	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.getLastChild());	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  if(body!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getFirstChild();  if(body!=  null)  {  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getFirstChild();  if(body!=  null)  {  return;  }	      Node    body    =    node.getLastChild();    if(body!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
26	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  if(body  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getFirstChild();  if(body  ==  null)  {  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getFirstChild();  if(body  ==  null)  {  return;  }	      Node    body    =    node.getLastChild();    if(body!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  Node  body  =  node.getLastChild();  if(body  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getLastChild();  if(body  ==  null)  {  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getLastChild();  if(body  ==  null)  {  return;  }	      Node    body    =    node.getLastChild();    if(body!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  if(body!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getFirstChild();  if(body!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getFirstChild();  if(body!=  null)  {  throw  new  IllegalStateException( " ");  }	      Node    body    =    node.getLastChild();    if(body!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  body);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  body);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  body);	      Node    body    =    node.getLastChild();    finallyMap.put(body,    body);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  node);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getLastChild();  finallyMap.put(body,  node);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getLastChild();  finallyMap.put(body,  node);	      Node    body    =    node.getLastChild();    finallyMap.put(body,    body);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
31	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  node);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  node);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  node);	      Node    body    =    node.getLastChild();    finallyMap.put(body,    body);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  final  Node  body  =  node.getLastChild();  finallyMap.put(body,  node);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  final  Node  body  =  node.getLastChild();  finallyMap.put(body,  node);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	final  Node  body  =  node.getLastChild();  finallyMap.put(body,  node);	      Node    body    =    node.getLastChild();    finallyMap.put(body,    body);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  if(node.getType()  ==  Token.TRY)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getType()  ==  Token.TRY)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getType()  ==  Token.TRY)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  if(node.getLastChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getLastChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getLastChild()!=  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  cfg.handleTry(node,  Branch.UNCOND,  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  cfg.handleTry(node,  Branch.UNCOND,  node.getLastChild());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	cfg.handleTry(node,  Branch.UNCOND,  node.getLastChild());	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  cfg.report(node,  Branch.UNCOND,  node.getLastChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  cfg.report(node,  Branch.UNCOND,  node.getLastChild());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	cfg.report(node,  Branch.UNCOND,  node.getLastChild());	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT);  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT);  compiler.reportCodeChange();  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT);  compiler.reportCodeChange();	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Preconditions.checkState(node.getType()  ==  Token.EXPR_RESULT);	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  cfg.handleTry(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  cfg.handleTry(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	cfg.handleTry(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  cfg.handleTry(node,  Branch.UNCOND,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  cfg.handleTry(node,  Branch.UNCOND,  node.getFirstChild());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	cfg.handleTry(node,  Branch.UNCOND,  node.getFirstChild());	      createEdge(node,    Branch.UNCOND,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
42	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild(),  nodePriorities);	      createEdge(node,    Branch.UNCOND,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  node);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  node);	  NodeTraversal.traverse(compiler,    node,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  astPosition);	  NodeTraversal.traverse(compiler,    node,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  cfg);	  NodeTraversal.traverse(compiler,    node,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  finallyMap,  this);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  finallyMap,  this);	  NodeTraversal.traverse(compiler,    node,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	cfg.createEdge(node,  Branch.UNCOND,  node.getFirstChild());	      createEdge(node,    Branch.UNCOND,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getNext());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getNext());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.UNCOND,  node.getNext());	      createEdge(node,    Branch.UNCOND,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  Node  body  =  node.getNext();  if(body!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getNext();  if(body!=  null)  {  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getNext();  if(body!=  null)  {  return;  }	      Node    body    =    node.getLastChild();    if(body!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  null);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  null);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  null);	      Node    body    =    node.getLastChild();    finallyMap.put(body,    body);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
52	[BUG]  [BUGGY]  if(node  ==  null)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node  ==  null)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node  ==  null)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	      createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  if(node.getType()  ==  Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getType()  ==  Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getType()  ==  Token.GETPROP)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.UNCOND,  node.getFirstChild());  compiler.reportCodeChange();	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph());  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  new  ControlFlowGraph());	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
57	[BUG]  [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  }	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  }  else  {  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getType()  ==  Token.EXPR_RESULT)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  }  else  {  return;  }	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  createEdge(node,  Branch.DECEMBER,  node.getString());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.DECEMBER,  node.getString());  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.DECEMBER,  node.getString());	  createEdge(node,    Branch.DECEMBER,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  NodeUtil.removeChild(node,  body);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeUtil.removeChild(node,  body);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeUtil.removeChild(node,  body);	      NodeUtil.removeChild(node);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
61	[BUG]  [BUGGY]  NodeUtil.removeChild(node,  first);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeUtil.removeChild(node,  first);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeUtil.removeChild(node,  first);	      NodeUtil.removeChild(node);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  this);	  NodeTraversal.traverse(compiler,    node,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
63	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  astPositionCounter,  finallyMap);	  NodeTraversal.traverse(compiler,    node,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap));  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  createEdge(node,  Branch.UNCOND,  finallyMap));	  NodeTraversal.traverse(compiler,    node,    finallyMap);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  CreateEdge(node,  Branch.BLOCK,  node.getFirstChild());  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	CreateEdge(node,  Branch.BLOCK,  node.getFirstChild());	  createEdge(node,    Branch.BLOCK,    node.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	connectToPossibleExceptionHandler(node,  Branch.BLOCK,  node.getFirstChild());	      createEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
67	[BUG]  [BUGGY]  if(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getFirstChild()  ==  node)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  return;  }	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    return;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter);  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeTraversal.traverse(compiler,  node,  new  AstControlFlowGraph(),  astPositionCounter);	  NodeTraversal.traverse(compiler,    node,    new    AstControlFlowGraph());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeUtil.redeclareVarsInsideBranch(node);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeUtil.redeclareVarsInsideBranch(node);	      NodeUtil.removeChild(node);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  NodeUtil.clearChildren();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  NodeUtil.clearChildren();  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	NodeUtil.clearChildren();	      NodeUtil.removeChild(node);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  createEdge(node,  Branch.DECEMBER,  node.cloneTree());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.DECEMBER,  node.cloneTree());  [BUGGY]      [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.DECEMBER,  node.cloneTree());	  createEdge(node,    Branch.DECEMBER,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
72	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getString());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.BLOCK,  node.getString());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.BLOCK,  node.getString());	      createEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
73	[BUG]  [BUGGY]  createEdge(node,  Branch.BLOCK,  node.removeFirstChild());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.BLOCK,  node.removeFirstChild());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.BLOCK,  node.removeFirstChild());	      createEdge(node,    Branch.BLOCK,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
74	[BUG]  [BUGGY]  Node  body  =  node.removeFirstChild();  if(body!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.removeFirstChild();  if(body!=  null)  {  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.removeFirstChild();  if(body!=  null)  {  return;  }	      Node    body    =    node.getLastChild();    if(body!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()));  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()));	      Node    body    =    node.getLastChild();    finallyMap.put(body,    body);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
76	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getLastChild()),  body);	      Node    body    =    node.getLastChild();    finallyMap.put(body,    body);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
77	[BUG]  [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getValue()));  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	Node  body  =  node.getFirstChild();  finallyMap.put(body,  new  Integer(node.getValue()));	      Node    body    =    node.getLastChild();    finallyMap.put(body,    body);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
78	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getType()  ==  Token.NAME)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getType()  ==  Token.NAME)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());  return;  }	      createEdge(node,    Branch.UNCOND,    node.getFirstChild());    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
79	[BUG]  [BUGGY]  createEdge(node,  Branch.UNCOND,  node.removeFirstChild());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  createEdge(node,  Branch.UNCOND,  node.removeFirstChild());  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	createEdge(node,  Branch.UNCOND,  node.removeFirstChild());	      createEdge(node,    Branch.UNCOND,    node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
80	[BUG]  [BUGGY]  if(node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
81	[BUG]  [BUGGY]  if(node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTry(Node  node)  {  createEdge(node,  Branch.UNCOND,  node.getFirstChild());    [BUGGY]  if(node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  handleTry  [RETURN_TYPE]  void  Node  node  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  ControlFlowGraph  cfg  Node  body  child  collection  cond  deflt  elseBlock  entry  externs  forNode  init  item  iter  n  next  node  parent  root  thenBlock  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	542	542	3	replace	if(node.getFirstChild()!=  null)  {  createEdge(node,  Branch.UNCOND,  node.getLastChild());  compiler.reportCodeChange();  }  else  {  throw  new  IllegalStateException( " ");  }	      createEdge(node,    Branch.UNCOND,    node.getLastChild());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
