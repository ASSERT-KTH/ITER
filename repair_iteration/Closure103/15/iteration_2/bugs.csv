bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  exceptionHandler  =  parent.getNext();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  parent.getNext();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  parent.getNext();	      Node    exceptionHandler    =    n.getNext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  Node  exceptionHandler  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  n.getLastChild();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n.getLastChild();	      Node    exceptionHandler    =    n.getNext();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n.getFirstChild());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n.getFirstChild());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  n.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n);  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(parent.peek()  ==  n);  exceptionHandler.pop();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n);  exceptionHandler.pop();	      Preconditions.checkState(exceptionHandler.peek()    ==    n);    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.peek();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.peek();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.peek();	      Preconditions.checkState(exceptionHandler.peek()    ==    n);    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(parent.peek()  ==  n);  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n);	      Preconditions.checkState(exceptionHandler.peek()    ==    n);    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler);  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  exceptionHandler);	      Preconditions.checkState(exceptionHandler.peek()    ==    n);    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  Node  exceptionHandler  =  parent.getLastChild().getNext();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  parent.getLastChild().getNext();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  parent.getLastChild().getNext();	      Node    exceptionHandler    =    parent.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  Node  exceptionHandler  =  node.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  node.getFirstChild().getNext();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  node.getFirstChild().getNext();	      Node    exceptionHandler    =    parent.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  Node  exceptionHandler  =  n.getLastChild().getNext();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  n.getLastChild().getNext();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n.getLastChild().getNext();	      Node    exceptionHandler    =    parent.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n.getLastChild());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n.getLastChild());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getLastChild());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getLastChild());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  exceptionHandler.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()!=  exceptionHandler.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(parent.peek()!=  exceptionHandler.getFirstChild());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()!=  exceptionHandler.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()!=    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n);  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  n);	  Preconditions.checkState(exceptionHandler.peek()!=    parent);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()!=  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(parent.peek()!=  exceptionHandler);  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()!=  exceptionHandler);	  Preconditions.checkState(exceptionHandler.peek()!=    parent);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  Node  exceptionHandler  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  node.getFirstChild();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  node.getFirstChild();	      Node    exceptionHandler    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  Node  exceptionHandler  =  n.getFirstChild().getNext()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  n.getFirstChild().getNext()  +  1;  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n.getFirstChild().getNext()  +  1;	      Node    exceptionHandler    =    n.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n.getFirstChild().getNext());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild().getNext());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getFirstChild().getNext());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  parent.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent.getLastChild().getNext());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent.getLastChild().getNext());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent.getLastChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  Node  exceptionHandler  =  parent.getLastChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  parent.getLastChild();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  parent.getLastChild();	      Node    exceptionHandler    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()!=  n);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(parent.peek()!=  n);  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()!=  n);	  Preconditions.checkState(parent.peek()    ==    exceptionHandler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  parent);  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(n.peek()  ==  parent);  exceptionHandler.pop();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  parent);  exceptionHandler.pop();	      Preconditions.checkState(exceptionHandler.peek()    ==    parent);    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent.getFirstChild().getNext());  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent.getFirstChild().getNext());  exceptionHandler.pop();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent.getFirstChild().getNext());  exceptionHandler.pop();	      Preconditions.checkState(exceptionHandler.peek()    ==    parent);    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent.getFirstChild());  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent.getFirstChild());  exceptionHandler.pop();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent.getFirstChild());  exceptionHandler.pop();	      Preconditions.checkState(exceptionHandler.peek()    ==    parent);    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getFirstChild());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent);  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()  ==  parent);	  Preconditions.checkState(parent.peek()    ==    exceptionHandler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  Preconditions.checkState(ExceptionHandler.peek()  ==  parent);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(ExceptionHandler.peek()  ==  parent);  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(ExceptionHandler.peek()  ==  parent);	  Preconditions.checkState(parent.peek()    ==    exceptionHandler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent.getFirstChild().getNext());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  parent.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  Node  exceptionHandler  =  n,  parent.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  n,  parent.getFirstChild().getNext();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n,  parent.getFirstChild().getNext();	      Node    exceptionHandler    =    parent.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent);  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent);  exceptionHandler.pop();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  parent);  exceptionHandler.pop();	      Preconditions.checkState(exceptionHandler.peek()    ==    n);    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent);  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent);  exceptionHandler.pop();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()  ==  parent);  exceptionHandler.pop();	      Preconditions.checkState(exceptionHandler.peek()    ==    n);    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent.getLastChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent.getLastChild());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  parent.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()!=    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getLastChild());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getLastChild());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  Node  exceptionHandler  =  n.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  n.removeFirstChild();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n.removeFirstChild();	      Node    exceptionHandler    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getFirstChild().getNext());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  Node  exceptionHandler  =  n.getFirstChild().getLastChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Node  exceptionHandler  =  n.getFirstChild().getLastChild();  [BUGGY]    Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n.getFirstChild().getLastChild();	      Node    exceptionHandler    =    n.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent,  exceptionHandler.peek());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {    [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent,  exceptionHandler.peek());  [BUGGY]    exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  parent,  exceptionHandler.peek());	  Preconditions.checkState(exceptionHandler.peek()!=    parent);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
