bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  n.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n.getFirstChild().getNext());	  Preconditions.checkState(n.peek()    ==    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getLastChild().getNext());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getLastChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  parent.getLastChild().getNext());	  Preconditions.checkState(n.peek()    ==    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  >=  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  >=  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  >=  parent.getFirstChild());	  Preconditions.checkState(parent.peek()!=    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()!=  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()!=  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()!=  parent.getFirstChild());	  Preconditions.checkState(parent.peek()!=    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()!=  n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()!=  n.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()!=  n.getFirstChild());	  Preconditions.checkState(parent.peek()!=    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  exceptionHandler.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    n.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
7	[BUG]  [BUGGY]  Node  exceptionHandler  =  node.getLastChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  node.getLastChild();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  node.getLastChild();	  Node    exceptionHandler    =    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(parent.pop()  ==  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.pop()  ==  exceptionHandler);  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.pop()  ==  exceptionHandler);	  Preconditions.checkState(exceptionHandler.pop()    ==    parent);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent.peek());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent.peek());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent.peek());	  Preconditions.checkState(exceptionHandler.pop()    ==    parent);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  parent.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  parent.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  parent.getFirstChild().getNext());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  n.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n.getFirstChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  parent.getFirstChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  parent.getFirstChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()!=  exceptionHandler.getLastChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()!=  exceptionHandler.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()!=  exceptionHandler.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()!=    parent.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent.peek());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent.peek());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  parent.peek());	  Preconditions.checkState(parent.peek()!=    exceptionHandler);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkState(ExceptionHandler.peek()  ==  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(ExceptionHandler.peek()  ==  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(ExceptionHandler.peek()  ==  parent.getFirstChild());	  Preconditions.checkState(ExceptionHandler.peek()    ==    parent);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(ExceptionHandler.peek()  ==  n);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(ExceptionHandler.peek()  ==  n);  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(ExceptionHandler.peek()  ==  n);	  Preconditions.checkState(ExceptionHandler.peek()    ==    parent);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  parent);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  parent);  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  parent);	  Preconditions.checkState(n.peek()    ==    exceptionHandler);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()!=  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()!=  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()!=  parent.getFirstChild());	  Preconditions.checkState(parent.peek()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()!=  parent);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()!=  parent);  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()!=  parent);	  Preconditions.checkState(parent.peek()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n.getLastChild().getNext());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n.getLastChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n.getLastChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getLastChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getLastChild().getNext());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getLastChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  exceptionHandler.getLastChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getLastChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
23	[BUG]  [BUGGY]  Node  exceptionHandler  =  parent.getFirstChild().getNext()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  parent.getFirstChild().getNext()  +  1;  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  parent.getFirstChild().getNext()  +  1;	  Node    exceptionHandler    =    n.getFirstChild().getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  Node  exceptionHandler  =  n.getLastChild().getNext()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  n.getLastChild().getNext()  +  1;  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n.getLastChild().getNext()  +  1;	  Node    exceptionHandler    =    n.getFirstChild().getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  Node  exceptionHandler  =  node.getFirstChild().getNext()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  node.getFirstChild().getNext()  +  1;  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  node.getFirstChild().getNext()  +  1;	  Node    exceptionHandler    =    n.getFirstChild().getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
26	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()!=  exceptionHandler.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()!=  exceptionHandler.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()!=  exceptionHandler.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()!=    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  n.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()!=    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler.getFirstChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  exceptionHandler.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  Node  exceptionHandler  =  parent.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  parent.removeFirstChild();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  parent.removeFirstChild();	  Node    exceptionHandler    =    n.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getFirstChild().getNext());  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getFirstChild().getNext());  exceptionHandler.pop();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  parent.getFirstChild().getNext());  exceptionHandler.pop();	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild().getNext());    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
31	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild().getNext());  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild().getNext());  exceptionHandler.pop();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild().getNext());  exceptionHandler.pop();	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild().getNext());    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n.getFirstChild().getNext());  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n.getFirstChild().getNext());  exceptionHandler.pop();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n.getFirstChild().getNext());  exceptionHandler.pop();	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild().getNext());    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
33	[BUG]  [BUGGY]  Node  exceptionHandler  =  parent,  parent.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  parent,  parent.getFirstChild().getNext();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  parent,  parent.getFirstChild().getNext();	  Node    exceptionHandler    =    n,    parent.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
34	[BUG]  [BUGGY]  Node  exceptionHandler  =  parent,  n.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  parent,  n.getFirstChild().getNext();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  parent,  n.getFirstChild().getNext();	  Node    exceptionHandler    =    n,    parent.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
35	[BUG]  [BUGGY]  Node  exceptionHandler  =  n,  parent.getLastChild().getNext();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  n,  parent.getLastChild().getNext();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n,  parent.getLastChild().getNext();	  Node    exceptionHandler    =    n,    parent.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()!=  exceptionHandler.peek());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()!=  exceptionHandler.peek());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()!=  exceptionHandler.peek());	  Preconditions.checkState(exceptionHandler.peek()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
37	[BUG]  [BUGGY]  Node  exceptionHandler  =  node.getLastChild().getNext();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  node.getLastChild().getNext();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  node.getLastChild().getNext();	  Node    exceptionHandler    =    parent.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  parent);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  parent);  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  parent);	  Preconditions.checkState(parent.peek()    ==    n);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild());  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild());  exceptionHandler.pop();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  exceptionHandler.getFirstChild());  exceptionHandler.pop();	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild());    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getFirstChild());  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getFirstChild());  exceptionHandler.pop();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  parent.getFirstChild());  exceptionHandler.pop();	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild());    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n.getLastChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  n.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n.getLastChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  parent.getLastChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  parent.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  parent.getLastChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()!=  n.getLastChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()!=  n.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()!=  n.getLastChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n);  exceptionHandler.peek();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n);  exceptionHandler.peek();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n);  exceptionHandler.peek();	  Preconditions.checkState(exceptionHandler.peek()    ==    parent);    exceptionHandler.peek();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  parent);  exceptionHandler.peek();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  parent);  exceptionHandler.peek();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  parent);  exceptionHandler.peek();	  Preconditions.checkState(exceptionHandler.peek()    ==    parent);    exceptionHandler.peek();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent.getFirstChild());  exceptionHandler.peek();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent.getFirstChild());  exceptionHandler.peek();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent.getFirstChild());  exceptionHandler.peek();	  Preconditions.checkState(exceptionHandler.peek()    ==    parent);    exceptionHandler.peek();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler.getLastChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  exceptionHandler.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n,  parent.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler,  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler,  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  exceptionHandler,  parent.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  exceptionHandler.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  exceptionHandler.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n,  exceptionHandler.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()!=  exceptionHandler.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()!=  exceptionHandler.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()!=  exceptionHandler.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()!=    n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  exceptionHandler.peek());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  exceptionHandler.peek());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n,  exceptionHandler.peek());	  Preconditions.checkState(exceptionHandler.peek()!=    parent,    exceptionHandler.peek());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n,  exceptionHandler.peek());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n,  exceptionHandler.peek());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  n,  exceptionHandler.peek());	  Preconditions.checkState(exceptionHandler.peek()!=    parent,    exceptionHandler.peek());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent,  exceptionHandler.peek());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent,  exceptionHandler.peek());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent,  exceptionHandler.peek());	  Preconditions.checkState(exceptionHandler.peek()!=    parent,    exceptionHandler.peek());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()!=  parent,  exceptionHandler.peek());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()!=  parent,  exceptionHandler.peek());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()!=  parent,  exceptionHandler.peek());	  Preconditions.checkState(exceptionHandler.peek()!=    parent,    exceptionHandler.peek());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  parent.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  parent.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n,  parent.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getLastChild().getNext());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getLastChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getLastChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler,  parent.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler,  parent.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  exceptionHandler,  parent.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  exceptionHandler.getLastChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  exceptionHandler.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n,  exceptionHandler.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  parent.getLastChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  parent.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n,  parent.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler,  parent.getLastChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  exceptionHandler,  parent.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  exceptionHandler,  parent.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
62	[BUG]  [BUGGY]  Node  exceptionHandler  =  parent.getFirstChild().getLastChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  parent.getFirstChild().getLastChild();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  parent.getFirstChild().getLastChild();	  Node    exceptionHandler    =    n.getFirstChild().getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
63	[BUG]  [BUGGY]  Node  exceptionHandler  =  node.getFirstChild().getLastChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  node.getFirstChild().getLastChild();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  node.getFirstChild().getLastChild();	  Node    exceptionHandler    =    n.getFirstChild().getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  exceptionHandler.getLastChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  exceptionHandler.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  exceptionHandler.getLastChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
65	[BUG]  [BUGGY]  Node  exceptionHandler  =  parent.getParent();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  parent.getParent();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  parent.getParent();	  Node    exceptionHandler    =    parent.getNext();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  >=  parent,  exceptionHandler.peek());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  >=  parent,  exceptionHandler.peek());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  >=  parent,  exceptionHandler.peek());	  Preconditions.checkState(exceptionHandler.peek()!=    parent,    exceptionHandler.peek());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  exceptionHandler.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  exceptionHandler.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  exceptionHandler.getFirstChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()  ==  parent.getFirstChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n,  parent.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n,  parent.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  n,  parent.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  n,  parent.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  n,  parent.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()  ==  n,  parent.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n.getLastChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  n.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()!=    n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  exceptionHandler);  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  exceptionHandler);	  Preconditions.checkState(n.peek()    ==    exceptionHandler);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
73	[BUG]  [BUGGY]  Node  exceptionHandler  =  n.getFirstChild().getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  n.getFirstChild().getFirstChild();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n.getFirstChild().getFirstChild();	  Node    exceptionHandler    =    n.getFirstChild().getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n,  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n,  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  n,  parent.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent,  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent,  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent,  parent.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  exceptionHandler.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  exceptionHandler.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  exceptionHandler.getFirstChild());	  Preconditions.checkState(parent.peek()!=    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  >=  parent);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  >=  parent);  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  >=  parent);	  Preconditions.checkState(parent.peek()!=    exceptionHandler);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  exceptionHandler);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  exceptionHandler);  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  exceptionHandler);	  Preconditions.checkState(parent.peek()!=    exceptionHandler);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  >>  parent);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  >>  parent);  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  >>  parent);	  Preconditions.checkState(parent.peek()!=    exceptionHandler);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  >=  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  >=  n);  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  >=  n);	  Preconditions.checkState(parent.peek()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()  ==  parent.getFirstChild().getNext());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent.getLastChild().getNext());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  parent.getLastChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  parent.getLastChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()!=    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  n,  parent.getLastChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  n,  parent.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()  ==  n,  parent.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent);  exceptionHandler.peek();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent);  exceptionHandler.peek();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()  ==  parent);  exceptionHandler.peek();	  Preconditions.checkState(exceptionHandler.pop()    ==    parent);    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  exceptionHandler.peek());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(parent.peek()  ==  n,  exceptionHandler.peek());  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(parent.peek()  ==  n,  exceptionHandler.peek());	  Preconditions.checkState(parent.peek()    ==    n);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent,  parent.getLastChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent,  parent.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent,  parent.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n,  parent.getLastChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()!=  n,  parent.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()!=  n,  parent.getLastChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
88	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent,  exceptionHandler.getFirstChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent,  exceptionHandler.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent,  exceptionHandler.getFirstChild());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
89	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getFirstChild().getNext());  exceptionHandler.pop();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getFirstChild().getNext());  exceptionHandler.pop();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  n,  parent.getFirstChild().getNext());  exceptionHandler.pop();	  Preconditions.checkState(exceptionHandler.peek()    ==    parent.getFirstChild().getNext());    exceptionHandler.pop();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
90	[BUG]  [BUGGY]  Node  exceptionHandler  =  parent.getfirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  parent.getfirstChild().getNext();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  parent.getfirstChild().getNext();	  Node    exceptionHandler    =    n.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
91	[BUG]  [BUGGY]  Node  exceptionHandler  =  n.getfirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  n.getfirstChild();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n.getfirstChild();	  Node    exceptionHandler    =    parent.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
92	[BUG]  [BUGGY]  Node  exceptionHandler  =  n.getfirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  n.getfirstChild().getNext();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n.getfirstChild().getNext();	  Node    exceptionHandler    =    n.getFirstChild().getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
93	[BUG]  [BUGGY]  Node  exceptionHandler  =  n.getlastChild().getNext();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Node  exceptionHandler  =  n.getlastChild().getNext();  [BUGGY]      Preconditions.checkState(exceptionHandler.peek()  ==  parent);  exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Node  exceptionHandler  =  n.getlastChild().getNext();	  Node    exceptionHandler    =    parent.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
94	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()!=  parent);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()!=  parent);  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()!=  parent);	  Preconditions.checkState(parent.peek()!=    exceptionHandler);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  n);  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()  ==  n);	  Preconditions.checkState(exceptionHandler.pop()    ==    parent);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()!=  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()!=  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()!=  parent.getFirstChild());	  Preconditions.checkState(parent.peek()!=    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  >=  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  >=  parent.getFirstChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()  >=  parent.getFirstChild());	  Preconditions.checkState(parent.peek()!=    exceptionHandler.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()!=  n);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()!=  n);  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()!=  n);	  Preconditions.checkState(exceptionHandler.peek()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
99	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent,  parent.getFirstChild().getNext());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.peek()  ==  parent,  parent.getFirstChild().getNext());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.peek()  ==  parent,  parent.getFirstChild().getNext());	  Preconditions.checkState(exceptionHandler.peek()    ==    n,    parent.getFirstChild().getNext());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()!=  parent,  exceptionHandler.peek());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()!=  parent,  exceptionHandler.peek());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()!=  parent,  exceptionHandler.peek());	  Preconditions.checkState(exceptionHandler.peek()!=    parent,    exceptionHandler.peek());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
101	[BUG]  [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent.getLastChild());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(exceptionHandler.pop()  ==  parent.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(exceptionHandler.pop()  ==  parent.getLastChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
102	[BUG]  [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getLastChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  Token.THROW:  return  false;  case  Token.TRY:        if  (n  ==  parent.getFirstChild().getNext())  {      [BUGGY]  Preconditions.checkState(n.peek()  ==  parent.getLastChild());  [BUGGY]      exceptionHandler.pop();  }  }  }  return  true;  }  [CLASS]  ControlFlowAnalysis  1  AstControlFlowGraph  1  2  [METHOD]  shouldTraverse  [RETURN_TYPE]  boolean  NodeTraversal  nodeTraversal  Node  n  Node  parent  [VARIABLES]  Multimap  finallyMap  AbstractCompiler  compiler  boolean  shouldTraverseFunctions  NodeTraversal  nodeTraversal  ControlFlowGraph  cfg  Node  entry  externs  n  parent  root  value  Map  astPosition  nodePriorities  priorities  Deque  exceptionHandler  int  astPositionCounter  priorityCounter  Comparator  priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.28005601680560194	282	282	3	replace	Preconditions.checkState(n.peek()  ==  parent.getLastChild());	  Preconditions.checkState(parent.peek()    ==    exceptionHandler.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
