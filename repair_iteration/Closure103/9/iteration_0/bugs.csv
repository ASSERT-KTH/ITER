bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
17	[BUG] [BUGGY] if (NodeUtil.hasFinally(curHandler)) { [FE] AssertionFailedError [CONTEXT] private void handleReturn(Node node) { Node lastJump = null; for (Iterator<Node> iter = exceptionHandler.iterator(); iter.hasNext();) { Node curHandler = iter.next(); if (NodeUtil.isFunction(curHandler)) { break; } [BUGGY] if (NodeUtil.hasFinally(curHandler)) { [BUGGY] if (lastJump == null) { createEdge(node, Branch.UNCOND, curHandler.getLastChild()); } else { finallyMap.put(lastJump, computeFallThrough(curHandler.getLastChild())); } lastJump = curHandler; } }  [CLASS] ControlFlowAnalysis 1 AstControlFlowGraph 1 2 [METHOD] handleReturn [RETURN_TYPE] void  Node node [VARIABLES] Multimap finallyMap AbstractCompiler compiler boolean shouldTraverseFunctions ControlFlowGraph cfg Node body child collection cond cur curHandler deflt elseBlock entry externs forNode init item iter lastJump n next node parent root thenBlock value Iterator iter Map astPosition nodePriorities priorities Deque exceptionHandler int astPositionCounter priorityCounter Comparator priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.2886751345948129	628	628	3	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void handleReturn(Node node) { Node lastJump = null; for (Iterator<Node> iter = exceptionHandler.iterator(); iter.hasNext();) { Node curHandler = iter.next(); if (NodeUtil.isFunction(curHandler)) { break; } [BUGGY] [BUGGY] if (NodeUtil.hasFinally(curHandler)) { if (lastJump == null) { createEdge(node, Branch.UNCOND, curHandler.getLastChild()); } else { finallyMap.put(lastJump, computeFallThrough(curHandler.getLastChild())); } lastJump = curHandler; } }  [CLASS] ControlFlowAnalysis 1 AstControlFlowGraph 1 2 [METHOD] handleReturn [RETURN_TYPE] void  Node node [VARIABLES] Multimap finallyMap AbstractCompiler compiler boolean shouldTraverseFunctions ControlFlowGraph cfg Node body child collection cond cur curHandler deflt elseBlock entry externs forNode init item iter lastJump n next node parent root thenBlock value Iterator iter Map astPosition nodePriorities priorities Deque exceptionHandler int astPositionCounter priorityCounter Comparator priorityComparator  	projects/Closure103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.2886751345948129	628	628	3	add	
