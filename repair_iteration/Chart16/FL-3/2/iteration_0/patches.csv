bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
2	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
3	[BUG]  [BUGGY]    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
4	[BUG]  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
5	[BUG]  [BUGGY]    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
6	[BUG]  [BUGGY]    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
7	[BUG]  [BUGGY]    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	    if(categoryKeys.length!=  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		compilable	  [FE]  AssertionFailedError  	4	1	add
9	[BUG]  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length!=  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		compilable	  [FE]  AssertionFailedError  	4	1	add
10	[BUG]  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length  -  1;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
11	[BUG]  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
12	[BUG]  [BUGGY]    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
13	[BUG]  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                            AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	    if(categoryKeys.length  ==  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		compilable	  [FE]  AssertionFailedError  	4	1	add
15	[BUG]  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [FE]  AssertionFailedError  [FE]                            AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length  ==  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		compilable	  [FE]  AssertionFailedError  	4	1	add
16	[BUG]  [BUGGY]    for(int  i  =  startData.length;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
17	[BUG]  [BUGGY]    for(int  i  =  startData.length;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
18	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  0;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  0;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
19	[BUG]  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length  -  1;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
20	[BUG]  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data  [CE]  unclosed  string  literal  [FE]                                      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data		non-compiled	[CE]  unclosed  string  literal	4	None	add
21	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
22	[BUG]  [BUGGY]    for(int  i  =  startData.length;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
23	[BUG]  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
24	[BUG]  [BUGGY]    for(int  i  =  startData.length;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
25	[BUG]  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length  -  1;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
26	[BUG]  [BUGGY]    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.endData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.endData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.endData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
27	[BUG]  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length  -  1;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
28	[BUG]  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "  [CE]  [FE]                                                      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "		non-compiled	[CE]  	4	None	add
29	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  0;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  0;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
30	[BUG]  [BUGGY]    for(int  i  =  startData.length;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
31	[BUG]  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  if(categoryKeys.length!=  this.endData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  if(categoryKeys.length!=  this.endData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length!=  this.startData[0].length)  {  if(categoryKeys.length!=  this.endData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
32	[BUG]  [BUGGY]    if(this.startData!=  null)  {  if(categoryKeys.length!=  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(this.startData!=  null)  {  if(categoryKeys.length!=  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(this.startData!=  null)  {  if(categoryKeys.length!=  this.startData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
33	[BUG]  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data  [CE]  unclosed  string  literal  [FE]                                                                AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data		non-compiled	[CE]  unclosed  string  literal	4	None	add
34	[BUG]  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  if(categoryKeys.length!=  this.endData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  if(categoryKeys.length!=  this.endData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length  ==  this.startData[0].length)  {  if(categoryKeys.length!=  this.endData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
35	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(this.startData[0].length!=  this.endData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(this.startData[0].length!=  this.endData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(this.startData[0].length!=  this.endData[0].length)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
36	[BUG]  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  [CE]  unclosed  string  literal  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of		non-compiled	[CE]  unclosed  string  literal	4	None	add
37	[BUG]  [BUGGY]    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(startData[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(startData[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(startData[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
38	[BUG]  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data  [CE]  unclosed  string  literal  [FE]                                                                          AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data		non-compiled	[CE]  unclosed  string  literal	4	None	add
39	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
40	[BUG]  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  [CE]  unclosed  string  literal  [FE]                                                                              AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length!=  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the		non-compiled	[CE]  unclosed  string  literal	4	None	add
41	[BUG]  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "  [CE]  [FE]                                                                                AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "		non-compiled	[CE]  	4	None	add
42	[BUG]  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length  -  1;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
43	[BUG]  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length  -  1;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length  -  1;  i  <  this.startData.length;  i++)  {  if(categoryKeys[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
44	[BUG]  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "  [CE]  [FE]                                                                                      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(categoryKeys.length  ==  this.startData[0].length)  {  for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "		non-compiled	[CE]  	4	None	add
45	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(typeKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(typeKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if(typeKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
46	[BUG]  [BUGGY]    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "  [CE]  [FE]                                                                                          AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    if(this.startData!=  null)  {  for(int  i  =  0;  i  <  this.startData[0].length;  i++)  {  if(categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. "		non-compiled	[CE]  	4	None	add
47	[BUG]  [BUGGY]    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(startData[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                            AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(startData[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }  [BUGGY]  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	    for(int  i  =  startData.length  -  1;  i  >=  startData.length;  i++)  {  if(startData[i]!=  null)  {  throw  new  IllegalArgumentException( "The  number  of  categories  does  not  match  the  data. ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length  ==  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length  ==  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
49	[BUG]  [BUGGY]  if  (categoryKeys.length  ==  this.startData[0].length)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length  ==  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length  ==  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
51	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.startData[0].length)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
53	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.endData[0].length)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
55	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.endData[0].length)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length  ==  this.startData[0].length  ||  categoryKeys.length!=  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length  ==  this.startData[0].length  ||  categoryKeys.length!=  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
57	[BUG]  [BUGGY]  if  (categoryKeys.length  ==  this.startData[0].length  ||  categoryKeys.length!=  this.startData[0].length)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length  ==  this.startData[0].length  ||  categoryKeys.length!=  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length  ==  this.startData[0].length  ||  categoryKeys.length!=  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  ==  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  ==  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
59	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  ==  this.startData[0].length)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  ==  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  ==  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  ==  this.endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  ==  this.endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
61	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  ==  this.endData[0].length)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  ==  this.endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  ==  this.endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length  ==  this.startData[0].length  ||  categoryKeys.length!=  this.endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length  ==  this.startData[0].length  ||  categoryKeys.length!=  this.endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
63	[BUG]  [BUGGY]  if  (categoryKeys.length  ==  this.startData[0].length  ||  categoryKeys.length!=  this.endData[0].length)  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length  ==  this.startData[0].length  ||  categoryKeys.length!=  this.endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length  ==  this.startData[0].length  ||  categoryKeys.length!=  this.endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length!=  this.endData[0].length))  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length!=  this.endData[0].length))  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
65	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length!=  this.endData[0].length))  {  [FE]  AssertionFailedError  [FE]                      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length!=  this.endData[0].length))  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length!=  this.endData[0].length))  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.startData[1].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.startData[1].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
67	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.startData[1].length)  {  [FE]  AssertionFailedError  [FE]                        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.startData[1].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.startData[1].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
68	[BUG]  [BUGGY]  if  (categories.length!=  this.startData[0].length)  {  [CE]  cannot  find  symbol  categories  [FE]                          AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categories.length!=  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categories.length!=  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	non-compiled	[CE]  cannot  find  symbol  categories	3	None	replace
69	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categories.length!=  this.startData[0].length)  {  [CE]  cannot  find  symbol  categories  [FE]                            AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categories.length!=  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||  categories.length!=  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	non-compiled	[CE]  cannot  find  symbol  categories	3	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                              AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length  ==  this.endData[0].length))  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length  ==  this.endData[0].length))  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
71	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length  ==  this.endData[0].length))  {  [FE]  AssertionFailedError  [FE]                              AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length  ==  this.endData[0].length))  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length  ==  this.endData[0].length))  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
73	[BUG]  [BUGGY]  if  (categoryKeys.length!=  endData[0].length)  {  [FE]  AssertionFailedError  [FE]                                AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                  AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  >=  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  >=  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
75	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  >=  this.startData[0].length)  {  [FE]  AssertionFailedError  [FE]                                  AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  >=  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length  >=  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length  >=  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length  >=  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
77	[BUG]  [BUGGY]  if  (categoryKeys.length  >=  this.startData[0].length)  {  [FE]  AssertionFailedError  [FE]                                    AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length  >=  this.startData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length  >=  this.startData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
78	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categories.length!=  this.endData[0].length)  {  [CE]  cannot  find  symbol  categories  [FE]                                      AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categories.length!=  this.endData[0].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||  categories.length!=  this.endData[0].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	non-compiled	[CE]  cannot  find  symbol  categories	3	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.endData[1].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.endData[1].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
80	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.endData[1].length)  {  [FE]  AssertionFailedError  [FE]                                        AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.endData[1].length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||  categoryKeys.length!=  this.endData[1].length)  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                          AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length  >=  this.endData[0].length))  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	add	if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length  >=  this.endData[0].length))  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
82	[BUG]  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length  >=  this.endData[0].length))  {  [FE]  AssertionFailedError  [FE]                                          AssertionFailedError  [CONTEXT]  public  void  setCategoryKeys(Comparable[]  categoryKeys)  {  if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument. ");  }  [BUGGY]  if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length  >=  this.endData[0].length))  {  [BUGGY]  throw  new  IllegalArgumentException(   "The  number  of  categories  does  not  match  the  data. ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(   "DefaultIntervalCategoryDataset.setCategoryKeys():   "  +   "null  category  not  permitted. ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  [VARIABLES]  Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	1.0	338	338	1	replace	if  (categoryKeys.length!=  this.startData[0].length  ||(categoryKeys.length  >=  this.endData[0].length))  {	if  (categoryKeys.length  !=  this.startData[0].length)  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
