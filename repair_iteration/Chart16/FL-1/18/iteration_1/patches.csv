bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys.length);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys.length);  [BUGGY]    if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  +     "null  category  not  permitted.   ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	338	338	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys.length);	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(categoryKeys);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].getCategoryKeys();  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].getCategoryKeys();  [BUGGY]    if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  +     "null  category  not  permitted.   ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	338	338	8	replace	Comparable[]  categoryKeys  =  this.startData[0].getCategoryKeys();	      Comparable[]    categoryKeys    =    this.startData[0].getComparables();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  getCategoryKeys(this.startData);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  getCategoryKeys(this.startData);  [BUGGY]    if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  +     "null  category  not  permitted.   ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	338	338	8	replace	Comparable[]  categoryKeys  =  getCategoryKeys(this.startData);	      Comparable[]    categoryKeys    =    getCategoryKeys();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[0].compareTo(categoryKeys[1]));  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[0].compareTo(categoryKeys[1]));  [BUGGY]    if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  +     "null  category  not  permitted.   ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	338	338	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[0].compareTo(categoryKeys[1]));	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.startData[0].compareTo(categoryKeys[0]));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.categoryData[0].getCategories();  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.categoryData[0].getCategories();  [BUGGY]    if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  +     "null  category  not  permitted.   ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	338	338	8	replace	Comparable[]  categoryKeys  =  this.categoryData[0].getCategories();	      Comparable[]    categoryKeys    =    this.startData[0].getCategories();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.categoryData[0].getComparables();  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.categoryData[0].getComparables();  [BUGGY]    if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  +     "null  category  not  permitted.   ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	338	338	8	replace	Comparable[]  categoryKeys  =  this.categoryData[0].getComparables();	      Comparable[]    categoryKeys    =    this.startData[0].getComparables();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys);  [BUGGY]    if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  +     "null  category  not  permitted.   ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	338	338	8	replace	Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys);	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(categoryKeys);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[0]));  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[0]));  [BUGGY]    if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  +     "null  category  not  permitted.   ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	338	338	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[0]));	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.startData[0].compareTo(categoryKeys[0]));    	non-compiled	[CE]  	3	None	replace
9	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.startData[0].compareTo(categoryKeys[1]));  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.startData[0].compareTo(categoryKeys[1]));  [BUGGY]    if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  +     "null  category  not  permitted.   ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	338	338	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.startData[0].compareTo(categoryKeys[1]));	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.startData[0].compareTo(categoryKeys[0]));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys);  [BUGGY]    if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  +     "null  category  not  permitted.   ");  }  }  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	338	338	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys);	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(categoryKeys);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
