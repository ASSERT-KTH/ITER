bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	add	if(categoryKeys  ==  null  ||  this.startData  ==  null)  {	  if(categoryKeys    ==    null    ||    this.startData!=    null)    {    	compilable	  [FE]  NullPointerException  	9	8	replace
2	[BUG]  [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys  ==  null  ||  this.startData  ==  null)  {	  if(categoryKeys    ==    null    ||    this.startData!=    null)    {    	compilable	  [FE]  NullPointerException  	9	8	replace
3	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.categoryData[0].getCategories();  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.categoryData[0].getCategories();  [BUGGY]    if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.categoryData[0].getCategories();	      Comparable[]    categoryKeys    =    this.startData[0].getCategories();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys.length);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys.length);  [BUGGY]    if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys.length);	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(categoryKeys);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  getCategoryKeys(this.startData);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  getCategoryKeys(this.startData);  [BUGGY]    if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  getCategoryKeys(this.startData);	      Comparable[]    categoryKeys    =    getCategoryKeys();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].getCategoryKeys();  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].getCategoryKeys();  [BUGGY]    if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].getCategoryKeys();	      Comparable[]    categoryKeys    =    this.startData[0].getComparables();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
8	[BUG]  [BUGGY]  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys  ==  null  ||  this.startData!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
9	[BUG]  [BUGGY]  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
10	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  getCategories();  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  getCategories();  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  getCategories();	      	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[0].compareTo(categoryKeys));  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[0].compareTo(categoryKeys));  [BUGGY]    if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[0].compareTo(categoryKeys));	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.startData[0].compareTo(categoryKeys));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys);  [BUGGY]    if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys);	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(categoryKeys);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData;  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData;  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData;	      	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys[0].compareTo(categoryKeys));  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys[0].compareTo(categoryKeys));  [BUGGY]    if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys[0].compareTo(categoryKeys));	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.startData[0].compareTo(categoryKeys));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys  ==  null  ||  this.startData  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
16	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData.length;  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData.length;  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData.length;	      	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.startData[1].compareTo(categoryKeys));  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.startData[1].compareTo(categoryKeys));  [BUGGY]    if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.startData[1].compareTo(categoryKeys));	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.startData[0].compareTo(categoryKeys));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys);  [BUGGY]    if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'categoryKeys'  argument.   ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(     "The  number  of  categories  does  not  match  the  data.   ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(     "DefaultIntervalCategoryDataset.setCategoryKeys():     "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys);	      Comparable[]    categoryKeys    =    this.startData[0].compareTo(categoryKeys);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
