bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(categoryKeys  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	add	if(categoryKeys  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }	  if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys    ==    null    ||    this.startData    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'categoryKeys'    argument.       ");    }    	compilable	  [FE]  NullPointerException  	9	8	replace
2	[BUG]  [BUGGY]  if(categoryKeys  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(categoryKeys  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }	  if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys    ==    null    ||    this.startData    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'categoryKeys'    argument.       ");    }    	compilable	  [FE]  NullPointerException  	9	8	replace
3	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys.length  -  1);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys.length  -  1);  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys.length  -  1);	  Comparable[]    categoryKeys    =    this.startData[0].compareTo(categoryKeys.length);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].length;  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].length;  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].length;	  Comparable[]    categoryKeys    =    this.startData.length;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[1].compareTo(categoryKeys));  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[1].compareTo(categoryKeys));  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[1].compareTo(categoryKeys));	  Comparable[]    categoryKeys    =    this.startData[0].compareTo(categoryKeys[0].compareTo(categoryKeys));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(categoryKeys!=  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	add	if(categoryKeys!=  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }	  if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys    ==    null    ||    this.startData!=    null)    {    throw    new    IllegalArgumentException(   "Null    'categoryKeys'    argument.       ");    }    	compilable	  [FE]  NullPointerException  	7	8	replace
7	[BUG]  [BUGGY]  if(categoryKeys!=  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(categoryKeys!=  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys!=  null  ||  this.startData!=  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }	  if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys    ==    null    ||    this.startData!=    null)    {    throw    new    IllegalArgumentException(   "Null    'categoryKeys'    argument.       ");    }    	compilable	  [FE]  NullPointerException  	7	8	replace
8	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[1].compareTo(this.startData[0]));  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[1].compareTo(this.startData[0]));  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(categoryKeys[1].compareTo(this.startData[0]));	  Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.startData[1].compareTo(categoryKeys));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  getCategories().toArray(new  Comparable[categories.size()  ]);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  getCategories().toArray(new  Comparable[categories.size()  ]);  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  getCategories().toArray(new  Comparable[categories.size()  ]);	  Comparable[]    categoryKeys    =    getCategories();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(this.startData[0]);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(this.startData[0]);  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(this.startData[0]);	  Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.categoryKeys);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
11	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys[0].compareTo(categoryKeys));  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys[0].compareTo(categoryKeys));  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys[0].compareTo(categoryKeys));	  Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.categoryKeys[0].compareTo(categoryKeys));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys    ==    null    ||    this.startData    ==    null)    {    if(categoryKeys  ==  null  ||  this.startData!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
13	[BUG]  [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys    ==    null    ||    this.startData    ==    null)    {    if(categoryKeys  ==  null  ||  this.startData!=  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
14	[BUG]  [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys    ==    null    ||    this.startData    ==    null)    {    if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
15	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  getCategoryKeys(this.startData,  this.startData.length);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  getCategoryKeys(this.startData,  this.startData.length);  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  getCategoryKeys(this.startData,  this.startData.length);	  Comparable[]    categoryKeys    =    getCategoryKeys(this.startData);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  getCategoryKeys(this.startData,  this.startData);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  getCategoryKeys(this.startData,  this.startData);  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  getCategoryKeys(this.startData,  this.startData);	  Comparable[]    categoryKeys    =    getCategoryKeys(this.startData);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  safeMultiply(categoryKeys);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(categoryKeys);  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	safeMultiply(categoryKeys);	  if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys    ==    null    ||    this.startData    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'categoryKeys'    argument.       ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[1].getCategoryKeys();  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.startData[1].getCategoryKeys();  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[1].getCategoryKeys();	  Comparable[]    categoryKeys    =    this.startData[0].getCategoryKeys();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys    ==    null    ||    this.startData    ==    null)    {    if(categoryKeys  ==  null  ||  this.startData  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
20	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  new  Comparable[this.startData.length];  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  new  Comparable[this.startData.length];  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  new  Comparable[this.startData.length];	  Comparable[]    categoryKeys    =    this.startData;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  getCategories().toArray(categoryKeys);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  getCategories().toArray(categoryKeys);  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  getCategories().toArray(categoryKeys);	  Comparable[]    categoryKeys    =    getCategories();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys[1].compareTo(categoryKeys));  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys[1].compareTo(categoryKeys));  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(categoryKeys[1].compareTo(categoryKeys));	  Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.categoryKeys[0].compareTo(categoryKeys));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys[1].compareTo(categoryKeys));  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys[1].compareTo(categoryKeys));  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[0].compareTo(this.categoryKeys[1].compareTo(categoryKeys));	  Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.categoryKeys[0].compareTo(categoryKeys));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData[1].compareTo(categoryKeys[1].compareTo(categoryKeys));  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.startData[1].compareTo(categoryKeys[1].compareTo(categoryKeys));  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData[1].compareTo(categoryKeys[1].compareTo(categoryKeys));	  Comparable[]    categoryKeys    =    this.startData[0].compareTo(categoryKeys[0].compareTo(categoryKeys));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  safeMultiply(categoryKeys)  {  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(categoryKeys)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	safeMultiply(categoryKeys)  {	  if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys    ==    null    ||    this.startData!=    null)    {    throw    new    IllegalArgumentException(   "Null    'categoryKeys'    argument.       ");    }    	non-compiled	[CE]  ';'  expected	7	None	replace
26	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(this.startData);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(this.startData);  [BUGGY]      if  (categoryKeys  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.categoryKeys[0].compareTo(this.startData);	  Comparable[]    categoryKeys    =    this.startData[0].compareTo(this.categoryKeys);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
27	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  this.startData.length  -  1;  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  this.startData.length  -  1;  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  this.startData.length  -  1;	  Comparable[]    categoryKeys    =    this.startData.length;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  Comparable[]  categoryKeys  =  getCategories().toArray(new  Comparable[0]);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Comparable[]  categoryKeys  =  getCategories().toArray(new  Comparable[0]);  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	Comparable[]  categoryKeys  =  getCategories().toArray(new  Comparable[0]);	  Comparable[]    categoryKeys    =    getCategories();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
29	[BUG]  [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  Comparable[]  categoryKeys  =  this.startData.values();  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  Comparable[]  categoryKeys  =  this.startData.values();  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys    ==    null    ||    this.startData    ==    null)    {    Comparable[]  categoryKeys  =  this.startData.values();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
30	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(categoryKeys  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	add	if(categoryKeys  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }	  if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys    ==    null    ||    this.startData    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'categoryKeys'    argument.       ");    }    	compilable	  [FE]  NullPointerException  	9	8	replace
31	[BUG]  [BUGGY]  if(categoryKeys  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(categoryKeys  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'categoryKeys'  argument.     ");  }  if  (categoryKeys.length  !=  this.startData[0].length)  {  throw  new  IllegalArgumentException(       "The  number  of  categories  does  not  match  the  data.     ");  }  for  (int  i  =  0;  i  <  categoryKeys.length;  i++)  {  if  (categoryKeys[i]  ==  null)  {  throw  new  IllegalArgumentException(       "DefaultIntervalCategoryDataset.setCategoryKeys():       "  [CLASS]  DefaultIntervalCategoryDataset  [METHOD]  setCategoryKeys  [RETURN_TYPE]  void  Comparable[]  categoryKeys  	projects/Chart16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java	0.35355339059327373	335	335	8	replace	if(categoryKeys  ==  null)  {  if(categoryKeys  ==  null  ||  this.startData  ==  null)  {  throw  new  IllegalArgumentException( "Null  'categoryKeys'  argument.   ");  }	  if(categoryKeys    ==    null    ||    this.startData!=    null)    {    if(categoryKeys    ==    null    ||    this.startData    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'categoryKeys'    argument.       ");    }    	compilable	  [FE]  NullPointerException  	9	8	replace
