bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.add(optionalArg);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.add(optionalArg);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.add(optionalArg);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.add(optionalArg);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.add(opt);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.add(opt);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.add(opt);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.add(optionalArg);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.remove(optionalArg);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.remove(optionalArg);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.remove(optionalArg);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.add(optionalArg);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }	      if(opt    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
5	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(numberOfArgs);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(numberOfArgs);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(numberOfArgs);	      if(opt    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  null;  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  OptionBuilder  <  Object>  option  =  null;  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	OptionBuilder  <  Object>  option  =  null;	      if(opt    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option();  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option();  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option.setOptionalArg(optionalArg);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option.setOptionalArg(optionalArg);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option.setOptionalArg(optionalArg);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
9	[BUG]  [BUGGY]  Option  option  =  new  Option();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  new  Option();  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  new  Option();	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
10	[BUG]  [BUGGY]  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  OptionBuilder();  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  OptionBuilder();  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  OptionBuilder();  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
11	[BUG]  [BUGGY]  for(int  num  =  0;  num  <  noArgs;  num++)  {  option  =  new  OptionBuilder();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  num  =  0;  num  <  noArgs;  num++)  {  option  =  new  OptionBuilder();  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  num  =  0;  num  <  noArgs;  num++)  {  option  =  new  OptionBuilder();  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
12	[BUG]  [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  option.getRequiredArg();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  option.getRequiredArg();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(optionalArg  ==  null)?  null  :  option.getRequiredArg();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getOptionalArg();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
13	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  >  0)  {  return  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  >  0)  {  return  null;  }	      if(numberOfArgs    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  return  this;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  ==  0)  {  return  this;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  ==  0)  {  return  this;  }	      if(numberOfArgs    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  ==  1)  {  return  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  ==  1)  {  return  null;  }	      if(numberOfArgs    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
17	[BUG]  [BUGGY]  for(int  num  =  0;  num  <  noArgs;  num++)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  num  =  0;  num  <  noArgs;  num++)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  num  =  0;  num  <  noArgs;  num++)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
18	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Thread.currentThread().setContextClassLoader(this);	      if(numberOfArgs    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reset();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Thread.currentThread().getContextClassLoader().reset();  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Thread.currentThread().getContextClassLoader().reset();	      if(numberOfArgs    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
20	[BUG]  [BUGGY]  Thread.currentThread().setContextClassIndex(numberOfArgs);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Thread.currentThread().setContextClassIndex(numberOfArgs);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Thread.currentThread().setContextClassIndex(numberOfArgs);	      if(numberOfArgs    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
21	[BUG]  [BUGGY]  if(opt.length()!=  0)  {  option  =  null;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt.length()!=  0)  {  option  =  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt.length()!=  0)  {  option  =  null;  }	      if(opt.length()    ==    0)    {    option    =    null;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
22	[BUG]  [BUGGY]  if(opt.length()  ==  0)  {  Option  option  =  null;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt.length()  ==  0)  {  Option  option  =  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt.length()  ==  0)  {  Option  option  =  null;  }	      if(opt.length()    ==    0)    {    option    =    null;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
23	[BUG]  [BUGGY]  NumberOfArgs  numberOfArgs  =(NumberOfArgs)numberOfArgs.clone();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  NumberOfArgs  numberOfArgs  =(NumberOfArgs)numberOfArgs.clone();  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	NumberOfArgs  numberOfArgs  =(NumberOfArgs)numberOfArgs.clone();	      if(opt.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
24	[BUG]  [BUGGY]  NumberOfArgs  numberOfArgs  =(NumberOfArgs)numberOfArgs.get(0);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  NumberOfArgs  numberOfArgs  =(NumberOfArgs)numberOfArgs.get(0);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	NumberOfArgs  numberOfArgs  =(NumberOfArgs)numberOfArgs.get(0);	      if(opt.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  opt.getDescription();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  opt.getDescription();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(optionalArg  ==  null)?  null  :  opt.getDescription();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getDescription();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  Option  option  =(optionalArg!=  null)?  null  :  option.getDescription();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(optionalArg!=  null)?  null  :  option.getDescription();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(optionalArg!=  null)?  null  :  option.getDescription();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getDescription();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    option    =    new    Option(argName);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  ==  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    option    =    new    Option(argName);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  if(numberOfArgs  >=  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  >=  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  >=  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    option    =    new    Option(argName);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
30	[BUG]  [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  opt.getValue();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  opt.getValue();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(optionalArg  ==  null)?  null  :  opt.getValue();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getValue();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  Option  option  =(opt  ==  null)?  null  :  option.getValue();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(opt  ==  null)?  null  :  option.getValue();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(opt  ==  null)?  null  :  option.getValue();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getValue();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  Option  option  =  new  Option(argName,  description);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  new  Option(argName,  description);  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  new  Option(argName,  description);	  Option    option    =    new    Option(argName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
33	[BUG]  [BUGGY]  Option  option  =  new  Option(numberOfArgs);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  new  Option(numberOfArgs);  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  new  Option(numberOfArgs);	  Option    option    =    new    Option(argName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
34	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArg);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  new  Option(optionalArg);  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  new  Option(optionalArg);	  Option    option    =    new    Option(argName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
35	[BUG]  [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  opt.getName();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  opt.getName();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(optionalArg  ==  null)?  null  :  opt.getName();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName,  description);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName,  description);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName,  description);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(opt,  description);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(opt,  description);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(opt,  description);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
38	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  description);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  new  Option(opt,  description);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  new  Option(opt,  description);	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  String  argName  =(String)this.values.get(numberOfArgs);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  String  argName  =(String)this.values.get(numberOfArgs);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	String  argName  =(String)this.values.get(numberOfArgs);	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  if(numberOfArgs  ==  0  ||  opt.length()  ==  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  ==  0  ||  opt.length()  ==  0)  {  return  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  ==  0  ||  opt.length()  ==  0)  {  return  null;  }	      if(opt.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
41	[BUG]  [BUGGY]  if(opt.length()!=  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt.length()!=  0)  {  return  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt.length()!=  0)  {  return  null;  }	      if(opt.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
42	[BUG]  [BUGGY]  Option  option  =  createOptional(opt);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  createOptional(opt);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  createOptional(opt);	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
43	[BUG]  [BUGGY]  if(opt!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(opt    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description);	      if(opt    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    option    =    new    Option(argName);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.length()  ==  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt  ==  null  ||  opt.length()  ==  0)  {  return  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt  ==  null  ||  opt.length()  ==  0)  {  return  null;  }	      if(opt.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
47	[BUG]  [BUGGY]  if(opt!=  null)  {  return  null;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt!=  null)  {  return  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt!=  null)  {  return  null;  }	      if(opt.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
48	[BUG]  [BUGGY]  Integer  numberOfArgs  =  options.get(opt);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Integer  numberOfArgs  =  options.get(opt);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Integer  numberOfArgs  =  options.get(opt);	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.add(optionalArg);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
49	[BUG]  [BUGGY]  Integer  numberOfArgs  =  options.get(numberOfArgs);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Integer  numberOfArgs  =  options.get(numberOfArgs);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Integer  numberOfArgs  =  options.get(numberOfArgs);	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.add(optionalArg);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  int  numberOfArgs  =  getNumberOfArgs();  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	int  numberOfArgs  =  getNumberOfArgs();	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.add(optionalArg);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
51	[BUG]  [BUGGY]  if(opt!=  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt!=  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt!=  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
52	[BUG]  [BUGGY]  if(opt  ==  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt  ==  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt  ==  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
53	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
54	[BUG]  [BUGGY]  Option  option  =(opt  ==  null)?  null  :  option.getName();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(opt  ==  null)?  null  :  option.getName();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(opt  ==  null)?  null  :  option.getName();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
55	[BUG]  [BUGGY]  Option  option  =  new  OptionBuilder();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  new  OptionBuilder();  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  new  OptionBuilder();	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
56	[BUG]  [BUGGY]  Option  option  =(Option)options.get(opt);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(Option)options.get(opt);  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(Option)options.get(opt);	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
57	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt  ==  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt  ==  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(opt.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt!=  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt!=  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(opt.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  if(opt.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(opt.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName,  description);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName,  description);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName,  description);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
61	[BUG]  [BUGGY]  if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
62	[BUG]  [BUGGY]  if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  Option  option  =  new  Option(argName,  description);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  Option  option  =  new  Option(argName,  description);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  Option  option  =  new  Option(argName,  description);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt  ==  null)  {  return  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt  ==  null)  {  return  null;  }	      if(numberOfArgs    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  Option  option  =(opt  ==  null)?  null  :  option.getOptionalArg();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(opt  ==  null)?  null  :  option.getOptionalArg();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(opt  ==  null)?  null  :  option.getOptionalArg();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getOptionalArg();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
65	[BUG]  [BUGGY]  if(opt!=  null)  {  option  =  null;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt!=  null)  {  option  =  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt!=  null)  {  option  =  null;  }	      if(opt.length()    ==    0)    {    option    =    null;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
66	[BUG]  [BUGGY]  if(opt  ==  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt  ==  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt  ==  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
67	[BUG]  [BUGGY]  if(opt!=  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt!=  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt!=  null)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
68	[BUG]  [BUGGY]  if(opt!=  null)  {  int  numberOfArgs  =  0;  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt!=  null)  {  int  numberOfArgs  =  0;  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt!=  null)  {  int  numberOfArgs  =  0;  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
69	[BUG]  [BUGGY]  Option  option  =  new  Option(opt);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  new  Option(opt);  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  new  Option(opt);	  Option    option    =    new    Option(argName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
70	[BUG]  [BUGGY]  Option  option  =  new  Option(argName,  name);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  new  Option(argName,  name);  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  new  Option(argName,  name);	  Option    option    =    new    Option(argName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
71	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	      if(numberOfArgs    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
72	[BUG]  [BUGGY]  if(numberOfArgs!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs!=  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(numberOfArgs    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
73	[BUG]  [BUGGY]  if(opt  ==  null  ||  numberOfArgs  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt  ==  null  ||  numberOfArgs  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt  ==  null  ||  numberOfArgs  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(opt    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
74	[BUG]  [BUGGY]  if(opt  ==  null  ||  numberOfArgs  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt  ==  null  ||  numberOfArgs  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt  ==  null  ||  numberOfArgs  <  1)  {  throw  new  IllegalArgumentException( " ");  }	      if(opt    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
75	[BUG]  [BUGGY]  Option  option  =  new  Option(argName.toLowerCase());  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  new  Option(argName.toLowerCase());  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  new  Option(argName.toLowerCase());	  Option    option    =    new    Option(argName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
76	[BUG]  [BUGGY]  Option  option  =  new  Option(argName,  description.toLowerCase());  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =  new  Option(argName,  description.toLowerCase());  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =  new  Option(argName,  description.toLowerCase());	  Option    option    =    new    Option(argName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
77	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName,  description);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
78	[BUG]  [BUGGY]  if(opt.length()  <  =  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt.length()  <  =  0)  {  return  null;  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt.length()  <  =  0)  {  return  null;  }	      if(opt.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
79	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  OptionBuilder();  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  OptionBuilder();  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  OptionBuilder();  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
80	[BUG]  [BUGGY]  if(numberOfArgs  >=  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  OptionBuilder();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  >=  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  OptionBuilder();  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  >=  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  OptionBuilder();  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
81	[BUG]  [BUGGY]  if(opt.length()  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt.length()  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt.length()  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option(argName);  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option(argName);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
82	[BUG]  [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  option.toLowerCase();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  option.toLowerCase();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(optionalArg  ==  null)?  null  :  option.toLowerCase();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
83	[BUG]  [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  option.argName();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  option.argName();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(optionalArg  ==  null)?  null  :  option.argName();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
84	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option();  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  ==  0)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option();  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
85	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option();  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  >  1)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option();  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  >  1)  {  for(int  num  =  0;  num  <  numberOfArgs;  num++)  {  option  =  new  Option();  }	      if(numberOfArgs    >    0)    {    for(int    num    =    0;    num    <    numberOfArgs;    num++)    {    option    =    new    Option();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
86	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  >  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(numberOfArgs    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
87	[BUG]  [BUGGY]  if(numberOfArgs  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(numberOfArgs  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(numberOfArgs  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(numberOfArgs    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
88	[BUG]  [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName,  description);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName,  description);  }  [BUGGY]    Option  option  =  null;  try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	if(opt!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  option  =  new  Option(argName,  description);  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    option    =    new    Option(argName,    description);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
89	[BUG]  [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  option.getKey();  [CE]  error  reading  /home/hye/repair/IteRepair/IteRepair/projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java;  /home/hye/repair/IteRepair/IteRepair/projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java  (No  such  file  or  directory)  [FE]          ComparisonFailure    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {    [BUGGY]  Option  option  =(optionalArg  ==  null)?  null  :  option.getKey();  [BUGGY]    try  {  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.4082482904638631	351	351	1	replace	Option  option  =(optionalArg  ==  null)?  null  :  option.getKey();	  Option    option    =(optionalArg    ==    null)?    null    :    option.getValue();    	non-compiled	[CE]  error  reading  /home/hye/repair/IteRepair/IteRepair/projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java;  /home/hye/repair/IteRepair/IteRepair/projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java  (No  such  file  or  directory)	7	None	replace
