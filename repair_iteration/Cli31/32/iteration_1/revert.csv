projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==0){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){option=newOption(argName,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){options.add(optionalArg);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==0){returnnull;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=null;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:option.getDescription();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:option.getValue();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:option.getName();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt.length()==0){returnnull;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt.length()==0){option=null;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:option.getOptionalArg();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>0){for(intnum=0;num<numberOfArgs;num++){option=newOption(argName,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>0){for(intnum=0;num<numberOfArgs;num++){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>0){for(intnum=0;num<numberOfArgs;num++){option=newOptionBuilder();}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>0){for(intnum=0;num<numberOfArgs;num++){option=newOption();}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOption(argName);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(inti=0;i<numberOfArgs;++i){options.add(optionalArg);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(inti=0;i<numberOfArgs;++i){options.add(opt);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(inti=0;i<numberOfArgs;++i){options.remove(optionalArg);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351allowNumberOfArgs(opt){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351OptionBuilder<Object>option=newOptionBuilder(numberOfArgs);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351OptionBuilder<Object>option=null;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(intnum=0;num<numberOfArgs;num++){option=newOption();}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(intnum=0;num<numberOfArgs;num++){option.setOptionalArg(optionalArg);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOption();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(intnum=0;num<numberOfArgs;num++){option=newOptionBuilder();}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(intnum=0;num<noArgs;num++){option=newOptionBuilder();}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:option.getRequiredArg();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>0){returnnull;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==0){returnthis;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==1){returnnull;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(intnum=0;num<numberOfArgs;num++){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(intnum=0;num<noArgs;num++){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Thread.currentThread().setContextClassLoader(this);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Thread.currentThread().getContextClassLoader().reset();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Thread.currentThread().setContextClassIndex(numberOfArgs);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt.length()!=0){option=null;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt.length()==0){Optionoption=null;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351NumberOfArgsnumberOfArgs=(NumberOfArgs)numberOfArgs.clone();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351NumberOfArgsnumberOfArgs=(NumberOfArgs)numberOfArgs.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:opt.getDescription();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg!=null)?null:option.getDescription();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(inti=0;i<numberOfArgs;++i){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==0){for(inti=0;i<numberOfArgs;++i){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>=0){for(inti=0;i<numberOfArgs;++i){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:opt.getValue();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(opt==null)?null:option.getValue();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOption(argName,description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOption(numberOfArgs);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOption(optionalArg);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:opt.getName();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(inti=0;i<numberOfArgs;++i){option=newOption(argName,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351for(inti=0;i<numberOfArgs;++i){option=newOption(opt,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOption(opt,description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351StringargName=(String)this.values.get(numberOfArgs);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==0||opt.length()==0){returnnull;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt.length()!=0){returnnull;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=createOptional(opt);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt!=null){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351OptionBuilder<Object>option=newOptionBuilder(opt,description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>1){for(inti=0;i<numberOfArgs;++i){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null||opt.length()==0){returnnull;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt!=null){returnnull;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351IntegernumberOfArgs=options.get(opt);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351IntegernumberOfArgs=options.get(numberOfArgs);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351intnumberOfArgs=getNumberOfArgs();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt!=null){for(intnum=0;num<numberOfArgs;num++){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null){for(intnum=0;num<numberOfArgs;num++){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==0){for(intnum=0;num<numberOfArgs;num++){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(opt==null)?null:option.getName();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOptionBuilder();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(Option)options.get(opt);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null||opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt!=null||opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt.length()!=0){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null){for(inti=0;i<numberOfArgs;++i){option=newOption(argName,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null){for(inti=0;i<numberOfArgs;++i){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null){for(inti=0;i<numberOfArgs;++i){Optionoption=newOption(argName,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null){returnnull;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(opt==null)?null:option.getOptionalArg();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt!=null){option=null;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null){for(intnum=0;num<numberOfArgs;num++){option=newOption(argName,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt!=null){for(intnum=0;num<numberOfArgs;num++){option=newOption(argName,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt!=null){intnumberOfArgs=0;for(intnum=0;num<numberOfArgs;num++){option=newOption(argName,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOption(opt);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOption(argName,name);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==1){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs!=0){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null||numberOfArgs<=0){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt==null||numberOfArgs<1){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOption(argName.toLowerCase());
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=newOption(argName,description.toLowerCase());
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==0){for(intnum=0;num<numberOfArgs;num++){option=newOption(argName,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt.length()<=0){returnnull;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==0){for(intnum=0;num<numberOfArgs;num++){option=newOptionBuilder();}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>=0){for(intnum=0;num<numberOfArgs;num++){option=newOptionBuilder();}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt.length()==0){for(intnum=0;num<numberOfArgs;num++){option=newOption(argName);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:option.toLowerCase();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:option.argName();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==0){for(intnum=0;num<numberOfArgs;num++){option=newOption();}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>1){for(intnum=0;num<numberOfArgs;num++){option=newOption();}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>0){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs>=0){thrownewIllegalArgumentException("");}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(opt!=null){for(inti=0;i<numberOfArgs;++i){option=newOption(argName,description);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351Optionoption=(optionalArg==null)?null:option.getKey();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java351if(numberOfArgs==0){option=null;}
