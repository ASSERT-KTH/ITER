projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Stringtype=(String)this.values.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=Option.UNINITIALIZED;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=argName.length();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=0;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=options.size();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=null;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=argName;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(valuesep);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(numberOfArgs);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(argName==null)?null:argName;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(argName==null)?null:argName.trim();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){type=Option.UNINITIALIZED;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Objecttype=options.getOption("type");
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){type=Option.UNINITIALIZED;required=false;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){type=Option.NUMBER_INT;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==null){type=Option.NUMBER_INT;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type="null";
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=getType();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){for(inti=0;i<numberOfArgs;++i){type=String.valueOf(valuesep);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82charnumberOfArgs=0;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=0L;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82longnumberOfArgs=0;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(type==null)?null:type.toString();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(type==null)?null:type.toCharArray();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(argName==null)?null:argName.toLowerCase();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(argName==null)?null:argName.toCharArray();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(description!=null){for(inti=0;i<numberOfArgs;++i){type=String.valueOf(valuesep);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(optionalArg==null){for(inti=0;i<numberOfArgs;++i){type=String.valueOf(valuesep);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=String.valueOf(valuesep);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=Option.UNINITIALIZED;required=false;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==null){type=Option.UNINITIALIZED;required=false;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs!=0){type=Option.UNINITIALIZED;required=false;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=argName.toLowerCase();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=argName.trim();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(argName);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=argName.toCharArray();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82charnumberOfArgs=Option.UNINITIALIZED;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82longnumberOfArgs=Option.UNINITIALIZED;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=Option.NUMBER;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Objecttype=options.getOption("type",description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Objecttype=options.getOption("type").toString();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Stringtype=options.getOption("type");
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(numberOfArgs+1);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(numberOfArgs-1);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(numberOfArgs*2);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(lengthopt);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(longopt);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=options.size()-1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=this.options.size();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=options.size()+1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=description.length();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82charnumberOfArgs=argName.length();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=argName.length()+1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=argName.lastIndexOf('.');
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(values!=null){for(inti=0;i<numberOfArgs;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82for(inti=0;i<numberOfArgs;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(argName!=null)?null:argName.trim();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(argName==null)?null:argName.trim()+1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=getType().toLowerCase();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=getType().toCharArray();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=getRequiredType();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82chartype=(char)this.values.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Stringtype=(String)this.values.get(1);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Stringtype=(char)this.values.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(values!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=Option.NUMBER_INT;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Typetype=Option.NUMBER_INT;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=Option.UNINITIALIZED;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==null){type=Option.UNINITIALIZED;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(lengthopt==0){type=Option.UNINITIALIZED;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(values!=null){type=Option.NUMBER_INT;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(type==null)?null:type;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Objecttype=(Object)this.values.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=getTypeOfThis();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=getTypeRegistry();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(optionalArg!=null){for(inti=0;i<numberOfArgs;++i){type=String.valueOf(valuesep);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=Option.UNINITIALIZED+1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(valuesep+1);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(values!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs>=0){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Objecttype=options.getOption("type").reset();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Objecttype=options.getOption("type").toCharArray();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs>=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(argName!=null)?null:argName;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==null){for(inti=0;i<numberOfArgs;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){for(inti=0;i<values.size();++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(required){type=Option.UNINITIALIZED;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=(type==null?"null":type.toString());
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=argName.length()-1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=(numberOfArgs>0)?1:0;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82intnumberOfArgs=1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82charnumberOfArgs=options.size();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){for(inti=0;i<valueOfArgs;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==null){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==Option.NUMBER_INT){type=Option.NUMBER_INT;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==null){for(inti=0;i<numberOfArgs;++i){type=String.valueOf(valuesep);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(required){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==Option.UNINITIALIZED){type=Option.UNINITIALIZED;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(1);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82Objecttype=this.values.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=String.valueOf(valuesep)+1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82type=getTypeRegistry().getNativeType(UNKNOWN_TYPE);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java82if(type==Option.UNINITIALIZED){type=Option.UNINITIALIZED;required=false;}
