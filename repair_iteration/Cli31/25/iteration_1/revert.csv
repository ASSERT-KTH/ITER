projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Stringtype=(String)this.values.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=String.valueOf(valuesep);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=argName.length();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=String.valueOf(argName);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=argName.indexOf(':');
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=null;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=0;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=description;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=Long.MIN_VALUE;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Objecttype=options.getOption("type");
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){type=Option.NUMBER_INT;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type==null){type=Option.NUMBER_INT;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){type=Option.NUMBER;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=Long.parseLong(argName);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=(longopt==0)?0:Long.parseLong(argName);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=(longopt==0)?0:Long.toString(longopt);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81type=Option.NUMBER_INT;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Typetype=Option.NUMBER_INT;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=(longopt==0)?0:Long.parseLong(argName,description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=(longopt==0)?Long.parseLong(argName):Long.parseLong(argName);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=(numberOfArgs==0)?0:Long.parseLong(argName);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(values!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type==null){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(values!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=Long.parseLong(description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=Long.parseLong(name);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=Long.parseLong(argName)+1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=0L;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intlongopt=0;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intopt=0;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81type=Option.NUMBER;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type==null){type=Option.NUMBER;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Typetype=Option.NUMBER;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=argName;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=description.length();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(values!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81chartype=(char)this.values.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Stringtype=(String)this.values.get(1);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Objecttype=this.values.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type==null){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(description!=null){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=Long.MIN_VALUE-1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=Long.MIN_VALUE+1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intlongopt=Long.MIN_VALUE;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=(longopt==0)?0:Long.toString(longopt,description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=(longopt==0)?0:Long.toString(longopt+1);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=description.indexOf(':');
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81charnumberOfArgs=argName.indexOf(':');
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=argName.lastIndexOf(':');
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=argName.indexOf(':',valuesep);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=description.length();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81charnumberOfArgs=argName.length();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=argName.length()+1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=argName.lastIndexOf('.');
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81charnumberOfArgs=String.valueOf(argName);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=String.valueOf(description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=String.valueOf(argName.toCharArray());
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81charnumberOfArgs=String.valueOf(valuesep);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=String.valueOf(valuesep)+1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=String.valueOf(valuesep+1);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(values!=null){for(inti=0;i<numberOfArgs;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type==null){for(inti=0;i<numberOfArgs;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Objecttype=options.getOption("type",description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Objecttype=options.getOption("type").toString();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Objecttype=options.getOption("type").reset();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<numberOfArgs;++i){type=getType(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Longopt=Long.parseLong(description);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=(longopt==0)?1:Long.toString(longopt);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=(longopt!=0)?0:Long.toString(longopt);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(values==null){for(inti=0;i<numberOfArgs;++i){type=(char)type;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){type=Option.UNINITIALIZED;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type==null){type=Option.UNINITIALIZED;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Objecttype=(Object)this.values.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Stringtype=(char)this.values.get(0);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type.charAt(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=argName.indexOf(':',values);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Objecttype=options.getOption("type").toCharArray();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<values.size();++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<valuesep;++i){type=(char)values.get(i);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=String.valueOf(argName.length());
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<numberOfArgs;++i){type=getType(1);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type==Option.NUMBER_INT){type=Option.NUMBER_INT;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type==Option.NUMBER){type=Option.NUMBER;}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(1);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(type.length()==0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81intnumberOfArgs=argName.length()-1;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81Objecttype=options.getOption("type").toLowerCase();
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=Long.parseLong(valuesep);
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81longopt=this.description;
projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java81if(longopt==0)?0:Long.parseLong(argName);
