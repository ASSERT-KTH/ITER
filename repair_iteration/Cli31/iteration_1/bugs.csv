bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testDefaultArgName  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =  getArgName();  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	add	    String  argName  =  getArgName();		compilable	  [FE]  ComparisonFailure  testDefaultArgName	16	1
2	[BUG]  [BUGGY]    String  argName  =  getArgName();  [FE]  ComparisonFailure  testDefaultArgName  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =  getArgName();  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	replace	    String  argName  =  getArgName();		compilable	  [FE]  ComparisonFailure  testDefaultArgName	16	1	add
2	[BUG]  [BUGGY]    String  argName  =(String)this.values.get(argName);  [CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =(String)this.values.get(argName);  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	replace	    String  argName  =(String)this.values.get(argName);		non-compiled	[CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;	16	None	add
3	[BUG]  [BUGGY]    String  argName  =  getDefaultArgName();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =  getDefaultArgName();  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	replace	    String  argName  =  getDefaultArgName();		non-compiled	[CE]  cannot  find  symbol	16	None	add
4	[BUG]  [BUGGY]    String  argName  =  getValues().keySet();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =  getValues().keySet();  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	replace	    String  argName  =  getValues().keySet();		non-compiled	[CE]  cannot  find  symbol	16	None	add
11	[BUG]  [BUGGY]    if(name!=  null)  {  this.defaultWidth  =  defaultWidth;  }  else  {  this.defaultSyntaxPrefix  =  defaultSyntaxPrefix.setArgName(name);  }  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(name!=  null)  {  this.defaultWidth  =  defaultWidth;  }  else  {  this.defaultSyntaxPrefix  =  defaultSyntaxPrefix.setArgName(name);  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	    if(name!=  null)  {  this.defaultWidth  =  defaultWidth;  }  else  {  this.defaultSyntaxPrefix  =  defaultSyntaxPrefix.setArgName(name);  }		non-compiled	[CE]  cannot  find  symbol	8	None	add
12	[BUG]  [BUGGY]    if(name!=  null)  {  this.defaultWidth  =  defaultWidth;  }  else  {  this.defaultSyntaxPrefix  =  defaultSyntaxPrefix.getDefaultArgName();  setDefaultArgName(name);  }  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(name!=  null)  {  this.defaultWidth  =  defaultWidth;  }  else  {  this.defaultSyntaxPrefix  =  defaultSyntaxPrefix.getDefaultArgName();  setDefaultArgName(name);  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	    if(name!=  null)  {  this.defaultWidth  =  defaultWidth;  }  else  {  this.defaultSyntaxPrefix  =  defaultSyntaxPrefix.getDefaultArgName();  setDefaultArgName(name);  }		non-compiled	[CE]  cannot  find  symbol	8	None	add
14	[BUG]  [BUGGY]    if(name!=  null)  {  this.defaultWidth  =  defaultWidth;  }  else  {  this.defaultSyntaxPrefix  =  defaultSyntaxPrefix.getArgName();  setDefaultArgName(name);  }  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(name!=  null)  {  this.defaultWidth  =  defaultWidth;  }  else  {  this.defaultSyntaxPrefix  =  defaultSyntaxPrefix.getArgName();  setDefaultArgName(name);  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	    if(name!=  null)  {  this.defaultWidth  =  defaultWidth;  }  else  {  this.defaultSyntaxPrefix  =  defaultSyntaxPrefix.getArgName();  setDefaultArgName(name);  }		non-compiled	[CE]  cannot  find  symbol	8	None	add
15	[BUG]  [BUGGY]    firePropertyChange( "ArgName ",  name);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    firePropertyChange( "ArgName ",  name);  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	    firePropertyChange( "ArgName ",  name);		non-compiled	[CE]  cannot  find  symbol	8	None	add
31	[BUG]  [BUGGY]  return  this.argName;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]  return  this.argName;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	return  this.argName;	return  instance;  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	19	None	replace
32	[BUG]  [BUGGY]  return  optionBuilder;  [CE]  cannot  find  symbol  optionBuilder  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]  return  optionBuilder;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	return  optionBuilder;	return  instance;  	non-compiled	[CE]  cannot  find  symbol  optionBuilder	19	None	replace
33	[BUG]  [BUGGY]  return  this.optionalArg;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]  return  this.optionalArg;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	return  this.optionalArg;	return  instance;  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	19	None	replace
34	[BUG]  [BUGGY]  return  OptionBuilder.UNLIMITED_ARG;  [CE]  cannot  find  symbol  UNLIMITED_ARG  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]  return  OptionBuilder.UNLIMITED_ARG;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	return  OptionBuilder.UNLIMITED_ARG;	return  instance;  	non-compiled	[CE]  cannot  find  symbol  UNLIMITED_ARG	19	None	replace
35	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	  	return  instance;  	non-compiled	[CE]  missing  return  statement	19	None	replace
41	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  Option.getOption(argName);		non-compiled	[CE]  cannot  find  symbol	2	None	add
42	[BUG]  [BUGGY]    OptionBuilder  instance  =  options.getOptionBuilder();  [CE]  cannot  find  symbol  options  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  options.getOptionBuilder();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  options.getOptionBuilder();		non-compiled	[CE]  cannot  find  symbol  options	2	None	add
43	[BUG]  [BUGGY]    OptionBuilder  instance  =  option.getOptionBuilder();  [CE]  cannot  find  symbol  option  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  option.getOptionBuilder();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  option.getOptionBuilder();		non-compiled	[CE]  cannot  find  symbol  option	2	None	add
44	[BUG]  [BUGGY]    OptionBuilder  instance  =  getOptionBuilder();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  getOptionBuilder();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  getOptionBuilder();		non-compiled	[CE]  cannot  find  symbol	2	None	add
45	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.createOptionBuilder();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  Option.createOptionBuilder();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  Option.createOptionBuilder();		non-compiled	[CE]  cannot  find  symbol	2	None	add
53	[BUG]  [BUGGY]    if(name!=  null)  {  if(defaultArgName.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    if(name!=  null)  {  if(defaultArgName.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    if(name!=  null)  {  if(defaultArgName.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
54	[BUG]  [BUGGY]    super.setArgName(name);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    super.setArgName(name);  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    super.setArgName(name);		non-compiled	[CE]  cannot  find  symbol	6	None	add
55	[BUG]  [BUGGY]    if(name!=  null)  {  if(!setDefaultArgName(name))  {  this.defaultArgName  =  name;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    if(name!=  null)  {  if(!setDefaultArgName(name))  {  this.defaultArgName  =  name;  }  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    if(name!=  null)  {  if(!setDefaultArgName(name))  {  this.defaultArgName  =  name;  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
71	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder  instance  =  Option.getOption(argName);		non-compiled	[CE]  cannot  find  symbol	18	None	add
72	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.build();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder  instance  =  Option.build();  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder  instance  =  Option.build();		non-compiled	[CE]  cannot  find  symbol	18	None	add
73	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.createOption(argName);  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder  instance  =  Option.createOption(argName);  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder  instance  =  Option.createOption(argName);		non-compiled	[CE]  cannot  find  symbol	18	None	add
74	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  optionBuilder.isRequired();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  optionBuilder.isRequired();  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder  instance  =  Option.getOption(argName);  optionBuilder.isRequired();		non-compiled	[CE]  cannot  find  symbol	18	None	add
75	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  OptionBuilder.instance  =  null;  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  OptionBuilder.instance  =  null;  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder  instance  =  Option.getOption(argName);  OptionBuilder.instance  =  null;		non-compiled	[CE]  cannot  find  symbol	18	None	add
82	[BUG]  [BUGGY]    String  argName  =(String)this.values.get(argName);  [CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;  [CONTEXT]  public  String  getArgName()  {  [BUGGY]    String  argName  =(String)this.values.get(argName);  [BUGGY]  return  argName;  }  [CLASS]  Option  [METHOD]  getArgName  [RETURN_TYPE]  String  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	318	318	1	replace	    String  argName  =(String)this.values.get(argName);		non-compiled	[CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;	14	None	add
83	[BUG]  [BUGGY]    String  argName  =  super.getArgName();  [CE]  cannot  find  symbol  [CONTEXT]  public  String  getArgName()  {  [BUGGY]    String  argName  =  super.getArgName();  [BUGGY]  return  argName;  }  [CLASS]  Option  [METHOD]  getArgName  [RETURN_TYPE]  String  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	318	318	1	replace	    String  argName  =  super.getArgName();		non-compiled	[CE]  cannot  find  symbol	14	None	add
91	[BUG]  [BUGGY]  this.optionComparator.setArgName(name);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]  this.optionComparator.setArgName(name);  [BUGGY]    [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	this.optionComparator.setArgName(name);	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
92	[BUG]  [BUGGY]  if(name!=  null)  {  this.defaultArgName  =  name.trim().toLowerCase();  }  else  {  this.defaultWidth  =  defaultWidth;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]  if(name!=  null)  {  this.defaultArgName  =  name.trim().toLowerCase();  }  else  {  this.defaultWidth  =  defaultWidth;  }  [BUGGY]    [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	if(name!=  null)  {  this.defaultArgName  =  name.trim().toLowerCase();  }  else  {  this.defaultWidth  =  defaultWidth;  }	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
93	[BUG]  [BUGGY]  if(name!=  null)  {  this.defaultArgName  =  name.trim().toLowerCase();  }  else  {  this.defaultWidth  =  defaultWidth++;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]  if(name!=  null)  {  this.defaultArgName  =  name.trim().toLowerCase();  }  else  {  this.defaultWidth  =  defaultWidth++;  }  [BUGGY]    [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	if(name!=  null)  {  this.defaultArgName  =  name.trim().toLowerCase();  }  else  {  this.defaultWidth  =  defaultWidth++;  }	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
94	[BUG]  [BUGGY]  if(name!=  null)  {  this.defaultArgName  =  name.trim().toLowerCase();  }  else  {  Preconditions.checkState(this.defaultArgName  ==  null);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]  if(name!=  null)  {  this.defaultArgName  =  name.trim().toLowerCase();  }  else  {  Preconditions.checkState(this.defaultArgName  ==  null);  }  [BUGGY]    [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	if(name!=  null)  {  this.defaultArgName  =  name.trim().toLowerCase();  }  else  {  Preconditions.checkState(this.defaultArgName  ==  null);  }	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
111	[BUG]  [BUGGY]  return  required;  [CE]  incompatible  types  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]  return  required;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	return  required;	return  instance;  	non-compiled	[CE]  incompatible  types	3	None	replace
112	[BUG]  [BUGGY]  return  this.required;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]  return  this.required;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	return  this.required;	return  instance;  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	replace
114	[BUG]  [BUGGY]  return  this.optionalArg;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]  return  this.optionalArg;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	return  this.optionalArg;	return  instance;  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	replace
115	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	  	return  instance;  	non-compiled	[CE]  missing  return  statement	3	None	replace
121	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =  Option.getOption(argName);		non-compiled	[CE]  cannot  find  symbol	4	None	add
122	[BUG]  [BUGGY]    OptionBuilder  instance  =  option.getOptionBuilder();  [CE]  cannot  find  symbol  option  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =  option.getOptionBuilder();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =  option.getOptionBuilder();		non-compiled	[CE]  cannot  find  symbol  option	4	None	add
123	[BUG]  [BUGGY]    OptionBuilder  instance  =  options.getOptionBuilder();  [CE]  cannot  find  symbol  options  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =  options.getOptionBuilder();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =  options.getOptionBuilder();		non-compiled	[CE]  cannot  find  symbol  options	4	None	add
124	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.getOptionBuilder();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =  Option.getOptionBuilder();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =  Option.getOptionBuilder();		non-compiled	[CE]  cannot  find  symbol	4	None	add
151	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder  instance  =  Option.getOption(argName);		non-compiled	[CE]  cannot  find  symbol	20	None	add
152	[BUG]  [BUGGY]    OptionBuilder.hasArg(instance);  [CE]  no  suitable  method  found  for  hasArg(OptionBuilder)  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder.hasArg(instance);  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder.hasArg(instance);		non-compiled	[CE]  no  suitable  method  found  for  hasArg(OptionBuilder)	20	None	add
153	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.build();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder  instance  =  Option.build();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder  instance  =  Option.build();		non-compiled	[CE]  cannot  find  symbol	20	None	add
154	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  optionBuilder.hasArg();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  optionBuilder.hasArg();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder  instance  =  Option.getOption(argName);  optionBuilder.hasArg();		non-compiled	[CE]  cannot  find  symbol	20	None	add
155	[BUG]  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  OptionBuilder.type  =  type;  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder  instance  =  Option.getOption(argName);  OptionBuilder.type  =  type;  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder  instance  =  Option.getOption(argName);  OptionBuilder.type  =  type;		non-compiled	[CE]  cannot  find  symbol	20	None	add
182	[BUG]  [BUGGY]  OptionBuilder.required  = "required ";  [CE]  incompatible  types  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]  OptionBuilder.required  = "required ";  [BUGGY]    return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	OptionBuilder.required  = "required ";	OptionBuilder.required  =  true;  	non-compiled	[CE]  incompatible  types	1	None	replace
183	[BUG]  [BUGGY]  OptionBuilder.required  =  null;  [CE]  incompatible  types  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]  OptionBuilder.required  =  null;  [BUGGY]    return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	OptionBuilder.required  =  null;	OptionBuilder.required  =  true;  	non-compiled	[CE]  incompatible  types	1	None	replace
194	[BUG]  [BUGGY]  return  argName  ==  null?  0  :  argName;  [CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other  [CONTEXT]  public  String  getArgName()  {  [BUGGY]  return  argName  ==  null?  0  :  argName;  [BUGGY]  }  [CLASS]  Option  [METHOD]  getArgName  [RETURN_TYPE]  String  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	318	318	1	replace	return  argName  ==  null?  0  :  argName;	return  argName;  	non-compiled	[CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other	13	None	replace
1	[BUG]  [BUGGY]    OptionBuilder  instance  =  getOptions().iterator().next();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  getOptions().iterator().next();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  getOptions().iterator().next();		non-compiled	[CE]  cannot  find  symbol	2	None	add
2	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)this.optionalArgs.get();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)this.optionalArgs.get();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =(OptionBuilder)this.optionalArgs.get();		non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	2	None	add
3	[BUG]  [BUGGY]    OptionBuilder  instance  =  getOptions().iterator().isRequired();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  getOptions().iterator().isRequired();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  getOptions().iterator().isRequired();		non-compiled	[CE]  cannot  find  symbol	2	None	add
4	[BUG]  [BUGGY]    OptionBuilder  instance  =  getOptions();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  getOptions();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  getOptions();		non-compiled	[CE]  cannot  find  symbol	2	None	add
5	[BUG]  [BUGGY]    OptionBuilder  instance  =  getOptions().newInstance();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  getOptions().newInstance();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  getOptions().newInstance();		non-compiled	[CE]  cannot  find  symbol	2	None	add
22	[BUG]  [BUGGY]    String  argName  =(String)this.numberOfArgs;  [CE]  inconvertible  types  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =(String)this.numberOfArgs;  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	replace	    String  argName  =(String)this.numberOfArgs;		non-compiled	[CE]  inconvertible  types	16	None	add
24	[BUG]  [BUGGY]    String  argName  =  getOptionalArg();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =  getOptionalArg();  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	replace	    String  argName  =  getOptionalArg();		non-compiled	[CE]  cannot  find  symbol	16	None	add
25	[BUG]  [BUGGY]    String  argName  =(String)this.opt.getArgName();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =(String)this.opt.getArgName();  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	replace	    String  argName  =(String)this.opt.getArgName();		non-compiled	[CE]  cannot  find  symbol	16	None	add
41	[BUG]  [BUGGY]    Preconditions.checkArgument(name.length()  ==  0);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    Preconditions.checkArgument(name.length()  ==  0);  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    Preconditions.checkArgument(name.length()  ==  0);		non-compiled	[CE]  cannot  find  symbol  Preconditions	6	None	add
42	[BUG]  [BUGGY]    Preconditions.checkArgument(name.isEmpty());  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    Preconditions.checkArgument(name.isEmpty());  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    Preconditions.checkArgument(name.isEmpty());		non-compiled	[CE]  cannot  find  symbol  Preconditions	6	None	add
43	[BUG]  [BUGGY]    if(name!=  null)  {  if(defaultArgName  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    if(name!=  null)  {  if(defaultArgName  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    if(name!=  null)  {  if(defaultArgName  ==  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
44	[BUG]  [BUGGY]    if(name!=  null)  {  if(defaultArgName  ==  null)  {  setDefaultArgName(defaultArgName);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    if(name!=  null)  {  if(defaultArgName  ==  null)  {  setDefaultArgName(defaultArgName);  }  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    if(name!=  null)  {  if(defaultArgName  ==  null)  {  setDefaultArgName(defaultArgName);  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
45	[BUG]  [BUGGY]    if(name!=  null)  {  if(defaultArgName  ==  null)  {  this.defaultArgName  =  defaultArgName;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    if(name!=  null)  {  if(defaultArgName  ==  null)  {  this.defaultArgName  =  defaultArgName;  }  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    if(name!=  null)  {  if(defaultArgName  ==  null)  {  this.defaultArgName  =  defaultArgName;  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
61	[BUG]  [BUGGY]    longOptSeparator  =(longOpt)option.getArgName();  [CE]  cannot  find  symbol  [CONTEXT]  buff.append( "- ").append(option.getOpt());  }  else  {  buff.append( "-- ").append(option.getLongOpt());  }  if  (option.hasArg()  &&  option.hasArgName())  {  [BUGGY]    longOptSeparator  =(longOpt)option.getArgName();  [BUGGY]  buff.append(option.getOpt()  ==  null  ?  longOptSeparator  :   "   ");  buff.append( "< ").append(option.getArgName()).append( "> ");  }  if  (!required)  {  buff.append( "] ");  }  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  appendOption  [RETURN_TYPE]  void  StringBuffer  buff  Option  option  final  boolean  required  [VARIABLES]  StringBuffer  buff  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  footer  header  longOptSeparator  name  newline  prefix  boolean  required  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  padding  width  Comparator  comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.5773502691896258	655	655	1	replace	    longOptSeparator  =(longOpt)option.getArgName();		non-compiled	[CE]  cannot  find  symbol	10	None	add
62	[BUG]  [BUGGY]    longOptSeparator  =  option.getLongOptSeparator();  [CE]  cannot  find  symbol  [CONTEXT]  buff.append( "- ").append(option.getOpt());  }  else  {  buff.append( "-- ").append(option.getLongOpt());  }  if  (option.hasArg()  &&  option.hasArgName())  {  [BUGGY]    longOptSeparator  =  option.getLongOptSeparator();  [BUGGY]  buff.append(option.getOpt()  ==  null  ?  longOptSeparator  :   "   ");  buff.append( "< ").append(option.getArgName()).append( "> ");  }  if  (!required)  {  buff.append( "] ");  }  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  appendOption  [RETURN_TYPE]  void  StringBuffer  buff  Option  option  final  boolean  required  [VARIABLES]  StringBuffer  buff  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  footer  header  longOptSeparator  name  newline  prefix  boolean  required  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  padding  width  Comparator  comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.5773502691896258	655	655	1	replace	    longOptSeparator  =  option.getLongOptSeparator();		non-compiled	[CE]  cannot  find  symbol	10	None	add
63	[BUG]  [BUGGY]    longOptSeparator  =(longOptSeparator)option.getArgName();  [CE]  cannot  find  symbol  [CONTEXT]  buff.append( "- ").append(option.getOpt());  }  else  {  buff.append( "-- ").append(option.getLongOpt());  }  if  (option.hasArg()  &&  option.hasArgName())  {  [BUGGY]    longOptSeparator  =(longOptSeparator)option.getArgName();  [BUGGY]  buff.append(option.getOpt()  ==  null  ?  longOptSeparator  :   "   ");  buff.append( "< ").append(option.getArgName()).append( "> ");  }  if  (!required)  {  buff.append( "] ");  }  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  appendOption  [RETURN_TYPE]  void  StringBuffer  buff  Option  option  final  boolean  required  [VARIABLES]  StringBuffer  buff  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  footer  header  longOptSeparator  name  newline  prefix  boolean  required  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  padding  width  Comparator  comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.5773502691896258	655	655	1	replace	    longOptSeparator  =(longOptSeparator)option.getArgName();		non-compiled	[CE]  cannot  find  symbol	10	None	add
65	[BUG]  [BUGGY]    longOptSeparator  = " ");  [CE]  [CONTEXT]  buff.append( "- ").append(option.getOpt());  }  else  {  buff.append( "-- ").append(option.getLongOpt());  }  if  (option.hasArg()  &&  option.hasArgName())  {  [BUGGY]    longOptSeparator  = " ");  [BUGGY]  buff.append(option.getOpt()  ==  null  ?  longOptSeparator  :   "   ");  buff.append( "< ").append(option.getArgName()).append( "> ");  }  if  (!required)  {  buff.append( "] ");  }  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  appendOption  [RETURN_TYPE]  void  StringBuffer  buff  Option  option  final  boolean  required  [VARIABLES]  StringBuffer  buff  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  footer  header  longOptSeparator  name  newline  prefix  boolean  required  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  padding  width  Comparator  comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.5773502691896258	655	655	1	replace	    longOptSeparator  = " ");		non-compiled	[CE]  	10	None	add
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testDefaultArgName  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]  this.defaultArgName  =  name  ==  null?  DEFAULT_ARG_NAME  :  name;  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	add	this.defaultArgName  =  name  ==  null?  DEFAULT_ARG_NAME  :  name;	this.defaultArgName  =  name;  	compilable	  [FE]  ComparisonFailure  testDefaultArgName	5	1
83	[BUG]  [BUGGY]  this.defaultArgName  =  name  ==  null?  DEFAULT_ARG_NAME  :  name;  [FE]  ComparisonFailure  testDefaultArgName  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]  this.defaultArgName  =  name  ==  null?  DEFAULT_ARG_NAME  :  name;  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	this.defaultArgName  =  name  ==  null?  DEFAULT_ARG_NAME  :  name;	this.defaultArgName  =  name;  	compilable	  [FE]  ComparisonFailure  testDefaultArgName	5	1	replace
101	[BUG]  [BUGGY]  return  this.numberOfArgs;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]  return  this.numberOfArgs;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	return  this.numberOfArgs;	return  instance;  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	19	None	replace
102	[BUG]  [BUGGY]  return  this.instance;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]  return  this.instance;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	return  this.instance;	return  instance;  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	19	None	replace
104	[BUG]  [BUGGY]  return  this.numberOfArgs  -  1;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]  return  this.numberOfArgs  -  1;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	return  this.numberOfArgs  -  1;	return  instance;  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	19	None	replace
124	[BUG]  [BUGGY]  OptionBuilder.required  =(optionalArg)required;  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]  OptionBuilder.required  =(optionalArg)required;  [BUGGY]    return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	OptionBuilder.required  =(optionalArg)required;	OptionBuilder.required  =  true;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
143	[BUG]  [BUGGY]  return(optionalArgs  ==  null)?  required  :  option.getArgs();  [CE]  cannot  find  symbol  optionalArgs  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]  return(optionalArgs  ==  null)?  required  :  option.getArgs();  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	return(optionalArgs  ==  null)?  required  :  option.getArgs();	return  instance;  	non-compiled	[CE]  cannot  find  symbol  optionalArgs	3	None	replace
144	[BUG]  [BUGGY]  return(optionalArgs  ==  OptionBuilder.REQUIRED)?  required  :  null;  [CE]  cannot  find  symbol  optionalArgs  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]  return(optionalArgs  ==  OptionBuilder.REQUIRED)?  required  :  null;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	return(optionalArgs  ==  OptionBuilder.REQUIRED)?  required  :  null;	return  instance;  	non-compiled	[CE]  cannot  find  symbol  optionalArgs	3	None	replace
161	[BUG]  [BUGGY]    OptionBuilder.hasArg(numberOfArgs);  [CE]  no  suitable  method  found  for  hasArg(int)  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder.hasArg(numberOfArgs);  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder.hasArg(numberOfArgs);		non-compiled	[CE]  no  suitable  method  found  for  hasArg(int)	20	None	add
164	[BUG]  [BUGGY]    OptionBuilder.isRequired()?  OptionBuilder.instance  :  null;  [CE]  not  a  statement  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder.isRequired()?  OptionBuilder.instance  :  null;  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder.isRequired()?  OptionBuilder.instance  :  null;		non-compiled	[CE]  not  a  statement	20	None	add
165	[BUG]  [BUGGY]    OptionBuilder.hasArg(numberOfArgs  -  1);  [CE]  no  suitable  method  found  for  hasArg(int)  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder.hasArg(numberOfArgs  -  1);  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder.hasArg(numberOfArgs  -  1);		non-compiled	[CE]  no  suitable  method  found  for  hasArg(int)	20	None	add
182	[BUG]  [BUGGY]  if(name!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]  if(name!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	if(name!=  null)  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
183	[BUG]  [BUGGY]  if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]  if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  [BUGGY]    [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
184	[BUG]  [BUGGY]  this.optionComparator.setArgName(defaultArgName);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]  this.optionComparator.setArgName(defaultArgName);  [BUGGY]    [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	this.optionComparator.setArgName(defaultArgName);	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
204	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testDefaultArgName  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  else  {  this.defaultSyntaxPrefix  =  DEFAULT_SYNTAX_PREFIX;  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	add	    if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  else  {  this.defaultSyntaxPrefix  =  DEFAULT_SYNTAX_PREFIX;  }		compilable	  [FE]  ComparisonFailure  testDefaultArgName	8	1
205	[BUG]  [BUGGY]    if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  else  {  this.defaultSyntaxPrefix  =  DEFAULT_SYNTAX_PREFIX;  }  [FE]  ComparisonFailure  testDefaultArgName  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  else  {  this.defaultSyntaxPrefix  =  DEFAULT_SYNTAX_PREFIX;  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	    if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  else  {  this.defaultSyntaxPrefix  =  DEFAULT_SYNTAX_PREFIX;  }		compilable	  [FE]  ComparisonFailure  testDefaultArgName	8	1	add
205	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testDefaultArgName  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  else  {  this.defaultSyntaxPrefix  =  DEFAULT_SYNTAX_PREFIX  +  1;  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	add	    if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  else  {  this.defaultSyntaxPrefix  =  DEFAULT_SYNTAX_PREFIX  +  1;  }		compilable	  [FE]  ComparisonFailure  testDefaultArgName	8	1
206	[BUG]  [BUGGY]    if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  else  {  this.defaultSyntaxPrefix  =  DEFAULT_SYNTAX_PREFIX  +  1;  }  [FE]  ComparisonFailure  testDefaultArgName  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  else  {  this.defaultSyntaxPrefix  =  DEFAULT_SYNTAX_PREFIX  +  1;  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	    if(name!=  null)  {  this.defaultArgName  =  defaultArgName;  }  else  {  this.defaultSyntaxPrefix  =  DEFAULT_SYNTAX_PREFIX  +  1;  }		compilable	  [FE]  ComparisonFailure  testDefaultArgName	8	1	add
244	[BUG]  [BUGGY]  OptionBuilder.numberOfArgs  =  1L;  [CE]  possible  loss  of  precision  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]  OptionBuilder.numberOfArgs  =  1L;  [BUGGY]    return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	OptionBuilder.numberOfArgs  =  1L;	OptionBuilder.numberOfArgs  =  1;  	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
261	[BUG]  [BUGGY]    OptionBuilder.instance  =(OptionBuilder)this.argName.clone();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder.instance  =(OptionBuilder)this.argName.clone();  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder.instance  =(OptionBuilder)this.argName.clone();		non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	18	None	add
262	[BUG]  [BUGGY]    OptionBuilder.instance  =(OptionBuilder)optionalArgs.iterator().next();  [CE]  cannot  find  symbol  optionalArgs  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder.instance  =(OptionBuilder)optionalArgs.iterator().next();  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder.instance  =(OptionBuilder)optionalArgs.iterator().next();		non-compiled	[CE]  cannot  find  symbol  optionalArgs	18	None	add
263	[BUG]  [BUGGY]    OptionBuilder.instance  =(OptionBuilder)optionalArgs.clone();  [CE]  cannot  find  symbol  optionalArgs  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder.instance  =(OptionBuilder)optionalArgs.clone();  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder.instance  =(OptionBuilder)optionalArgs.clone();		non-compiled	[CE]  cannot  find  symbol  optionalArgs	18	None	add
281	[BUG]  [BUGGY]    String  argName  =(String)this.opt.getArgName();  [CE]  cannot  find  symbol  [CONTEXT]  public  String  getArgName()  {  [BUGGY]    String  argName  =(String)this.opt.getArgName();  [BUGGY]  return  argName;  }  [CLASS]  Option  [METHOD]  getArgName  [RETURN_TYPE]  String  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	318	318	1	replace	    String  argName  =(String)this.opt.getArgName();		non-compiled	[CE]  cannot  find  symbol	14	None	add
282	[BUG]  [BUGGY]    String  argName  =(String)this.numberOfArgs  +  1;  [CE]  inconvertible  types  [CONTEXT]  public  String  getArgName()  {  [BUGGY]    String  argName  =(String)this.numberOfArgs  +  1;  [BUGGY]  return  argName;  }  [CLASS]  Option  [METHOD]  getArgName  [RETURN_TYPE]  String  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	318	318	1	replace	    String  argName  =(String)this.numberOfArgs  +  1;		non-compiled	[CE]  inconvertible  types	14	None	add
283	[BUG]  [BUGGY]    String  argName  =(String)this.values.get(opt.getArgName());  [CE]  cannot  find  symbol  [CONTEXT]  public  String  getArgName()  {  [BUGGY]    String  argName  =(String)this.values.get(opt.getArgName());  [BUGGY]  return  argName;  }  [CLASS]  Option  [METHOD]  getArgName  [RETURN_TYPE]  String  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	318	318	1	replace	    String  argName  =(String)this.values.get(opt.getArgName());		non-compiled	[CE]  cannot  find  symbol	14	None	add
285	[BUG]  [BUGGY]    String  argName  =(String)this.numberOfArgs;  [CE]  inconvertible  types  [CONTEXT]  public  String  getArgName()  {  [BUGGY]    String  argName  =(String)this.numberOfArgs;  [BUGGY]  return  argName;  }  [CLASS]  Option  [METHOD]  getArgName  [RETURN_TYPE]  String  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	318	318	1	replace	    String  argName  =(String)this.numberOfArgs;		non-compiled	[CE]  inconvertible  types	14	None	add
301	[BUG]  [BUGGY]    OptionBuilder  instance  =  getOptions().iterator().next();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =  getOptions().iterator().next();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =  getOptions().iterator().next();		non-compiled	[CE]  cannot  find  symbol	4	None	add
302	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required.clone();  [CE]  boolean  cannot  be  dereferenced  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required.clone();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =(OptionBuilder)required.clone();		non-compiled	[CE]  boolean  cannot  be  dereferenced	4	None	add
303	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required.newInstance();  [CE]  boolean  cannot  be  dereferenced  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required.newInstance();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =(OptionBuilder)required.newInstance();		non-compiled	[CE]  boolean  cannot  be  dereferenced	4	None	add
304	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)this.optionalArgs.get();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)this.optionalArgs.get();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =(OptionBuilder)this.optionalArgs.get();		non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	4	None	add
305	[BUG]  [BUGGY]    OptionBuilder  instance  =  getDefaultOptionBuilder();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =  getDefaultOptionBuilder();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =  getDefaultOptionBuilder();		non-compiled	[CE]  cannot  find  symbol	4	None	add
364	[BUG]  [BUGGY]  buff.append(option.getOpt()  ==  null?  option.getLongOptSeparator  : "   ");  [CE]  cannot  find  symbol  getLongOptSeparator  [CONTEXT]  buff.append( "- ").append(option.getOpt());  }  else  {  buff.append( "-- ").append(option.getLongOpt());  }  if  (option.hasArg()  &&  option.hasArgName())  {  [BUGGY]  buff.append(option.getOpt()  ==  null?  option.getLongOptSeparator  : "   ");  [BUGGY]  buff.append( "< ").append(option.getArgName()).append( "> ");  }  if  (!required)  {  buff.append( "] ");  }  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  appendOption  [RETURN_TYPE]  void  StringBuffer  buff  Option  option  final  boolean  required  [VARIABLES]  StringBuffer  buff  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  footer  header  longOptSeparator  name  newline  prefix  boolean  required  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  padding  width  Comparator  comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.5773502691896258	655	655	1	replace	buff.append(option.getOpt()  ==  null?  option.getLongOptSeparator  : "   ");	buff.append(option.getOpt()  ==  null  ?  longOptSeparator  :   "   ");  	non-compiled	[CE]  cannot  find  symbol  getLongOptSeparator	9	None	replace
383	[BUG]  [BUGGY]  buff.append( "  <   ").append(option.getLongOptSeparator()).append( "> ");  [CE]  cannot  find  symbol  [CONTEXT]  if  (option.hasArg()  &&  option.hasArgName())  {  buff.append(option.getOpt()  ==  null  ?  longOptSeparator  :   "   ");  [BUGGY]  buff.append( "  <   ").append(option.getLongOptSeparator()).append( "> ");  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  appendOption  [RETURN_TYPE]  void  StringBuffer  buff  Option  option  final  boolean  required  [VARIABLES]  StringBuffer  buff  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  footer  header  longOptSeparator  name  newline  prefix  boolean  required  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  padding  width  Comparator  comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.5773502691896258	656	656	1	replace	buff.append( "  <   ").append(option.getLongOptSeparator()).append( "> ");	buff.append( "< ").append(option.getArgName()).append( "> ");  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
384	[BUG]  [BUGGY]  buff.append( "  <   ").append(option.getSyntaxPrefix()).append( "> ");  [CE]  cannot  find  symbol  [CONTEXT]  if  (option.hasArg()  &&  option.hasArgName())  {  buff.append(option.getOpt()  ==  null  ?  longOptSeparator  :   "   ");  [BUGGY]  buff.append( "  <   ").append(option.getSyntaxPrefix()).append( "> ");  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  appendOption  [RETURN_TYPE]  void  StringBuffer  buff  Option  option  final  boolean  required  [VARIABLES]  StringBuffer  buff  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  footer  header  longOptSeparator  name  newline  prefix  boolean  required  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  padding  width  Comparator  comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.5773502691896258	656	656	1	replace	buff.append( "  <   ").append(option.getSyntaxPrefix()).append( "> ");	buff.append( "< ").append(option.getArgName()).append( "> ");  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
3	[BUG]  [BUGGY]  OptionBuilder.required  =(OptionBuilder)required;  [CE]  inconvertible  types  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]  OptionBuilder.required  =(OptionBuilder)required;  [BUGGY]    return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	OptionBuilder.required  =(OptionBuilder)required;	OptionBuilder.required  =  true;  	non-compiled	[CE]  inconvertible  types	1	None	replace
4	[BUG]  [BUGGY]  OptionBuilder.required  =(OptionBuilder)enabledByDefault();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]  OptionBuilder.required  =(OptionBuilder)enabledByDefault();  [BUGGY]    return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	OptionBuilder.required  =(OptionBuilder)enabledByDefault();	OptionBuilder.required  =  true;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
33	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)argName.clone();  [CE]  clone()  has  protected  access  in  Object  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)argName.clone();  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder  instance  =(OptionBuilder)argName.clone();		non-compiled	[CE]  clone()  has  protected  access  in  Object	18	None	add
34	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)ArgName.class.getSimpleName();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)ArgName.class.getSimpleName();  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder  instance  =(OptionBuilder)ArgName.class.getSimpleName();		non-compiled	[CE]  cannot  find  symbol	18	None	add
35	[BUG]  [BUGGY]    OptionBuilder.hasArg(argName);  [CE]  no  suitable  method  found  for  hasArg(String)  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  [BUGGY]    OptionBuilder.hasArg(argName);  [BUGGY]  OptionBuilder.numberOfArgs  =  1;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	109	109	1	replace	    OptionBuilder.hasArg(argName);		non-compiled	[CE]  no  suitable  method  found  for  hasArg(String)	18	None	add
64	[BUG]  [BUGGY]  buff.append( "  <   ").append(option.getSize()).append( "> ");  [CE]  cannot  find  symbol  [CONTEXT]  if  (option.hasArg()  &&  option.hasArgName())  {  buff.append(option.getOpt()  ==  null  ?  longOptSeparator  :   "   ");  [BUGGY]  buff.append( "  <   ").append(option.getSize()).append( "> ");  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  appendOption  [RETURN_TYPE]  void  StringBuffer  buff  Option  option  final  boolean  required  [VARIABLES]  StringBuffer  buff  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  footer  header  longOptSeparator  name  newline  prefix  boolean  required  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  padding  width  Comparator  comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.5773502691896258	656	656	1	replace	buff.append( "  <   ").append(option.getSize()).append( "> ");	buff.append( "< ").append(option.getArgName()).append( "> ");  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
93	[BUG]  [BUGGY]  return(optionBuilder  ==  null)?  required  :  instance;  [CE]  cannot  find  symbol  optionBuilder  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]  return(optionBuilder  ==  null)?  required  :  instance;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	return(optionBuilder  ==  null)?  required  :  instance;	return  instance;  	non-compiled	[CE]  cannot  find  symbol  optionBuilder	3	None	replace
94	[BUG]  [BUGGY]  return(optionBuilder  ==  null)?  required  :  optionBuilder.required;  [CE]  cannot  find  symbol  optionBuilder  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]  return(optionBuilder  ==  null)?  required  :  optionBuilder.required;  [BUGGY]  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	return(optionBuilder  ==  null)?  required  :  optionBuilder.required;	return  instance;  	non-compiled	[CE]  cannot  find  symbol  optionBuilder	3	None	replace
121	[BUG]  [BUGGY]    if(arguments  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  arguments  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(arguments  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	    if(arguments  ==  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  cannot  find  symbol  arguments	8	None	add
123	[BUG]  [BUGGY]    if(arguments  ==  null)  {  for(Comparator  optionComparator  :  defaultArgName)  {  this.optionComparator  =  optionComparator;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(arguments  ==  null)  {  for(Comparator  optionComparator  :  defaultArgName)  {  this.optionComparator  =  optionComparator;  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	    if(arguments  ==  null)  {  for(Comparator  optionComparator  :  defaultArgName)  {  this.optionComparator  =  optionComparator;  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	8	None	add
124	[BUG]  [BUGGY]    if(optionComparator  ==  null)  {  for(Comparator  optionComparator  :  optionComparator.keySet())  {  this.defaultArgName  =  defaultArgName;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(optionComparator  ==  null)  {  for(Comparator  optionComparator  :  optionComparator.keySet())  {  this.defaultArgName  =  defaultArgName;  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	    if(optionComparator  ==  null)  {  for(Comparator  optionComparator  :  optionComparator.keySet())  {  this.defaultArgName  =  defaultArgName;  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	8	None	add
125	[BUG]  [BUGGY]    if(optionComparator  ==  null)  {  for(Comparator  optionComparator  :  optionComparator.keySet())  {  setArgName(optionComparator.getDefaultArgName());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]    if(optionComparator  ==  null)  {  for(Comparator  optionComparator  :  optionComparator.keySet())  {  setArgName(optionComparator.getDefaultArgName());  }  [BUGGY]  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	    if(optionComparator  ==  null)  {  for(Comparator  optionComparator  :  optionComparator.keySet())  {  setArgName(optionComparator.getDefaultArgName());  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	8	None	add
212	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)enabledByDefault();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)enabledByDefault();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =(OptionBuilder)enabledByDefault();		non-compiled	[CE]  cannot  find  symbol	2	None	add
213	[BUG]  [BUGGY]    OptionBuilder  instance  =  getRequired();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  getRequired();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  getRequired();		non-compiled	[CE]  cannot  find  symbol	2	None	add
214	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required();  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =(OptionBuilder)required();		non-compiled	[CE]  cannot  find  symbol	2	None	add
215	[BUG]  [BUGGY]    OptionBuilder  instance  =  new  OptionBuilder(getArgs());  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  [BUGGY]    OptionBuilder  instance  =  new  OptionBuilder(getArgs());  [BUGGY]  OptionBuilder.required  =  true;  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	148	148	1	replace	    OptionBuilder  instance  =  new  OptionBuilder(getArgs());		non-compiled	[CE]  cannot  find  symbol	2	None	add
272	[BUG]  [BUGGY]    String  argName  =(String)this.numberOfArgs.get(0);  [CE]  int  cannot  be  dereferenced  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =(String)this.numberOfArgs.get(0);  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	replace	    String  argName  =(String)this.numberOfArgs.get(0);		non-compiled	[CE]  int  cannot  be  dereferenced	16	None	add
273	[BUG]  [BUGGY]    String  argName  =  getValue(opt.getKey());  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =  getValue(opt.getKey());  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	replace	    String  argName  =  getValue(opt.getKey());		non-compiled	[CE]  cannot  find  symbol	16	None	add
275	[BUG]  [BUGGY]    String  argName  =  getValues();  [CE]  incompatible  types  [CONTEXT]  public  boolean  hasArgName()  {  [BUGGY]    String  argName  =  getValues();  [BUGGY]  return  argName  !=  null  &&  argName.length()  >  0;  }  [CLASS]  Option  [METHOD]  hasArgName  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	328	328	1	replace	    String  argName  =  getValues();		non-compiled	[CE]  incompatible  types	16	None	add
331	[BUG]  [BUGGY]    OptionBuilder.argName  =(OptionBuilder)argName.clone();  [CE]  clone()  has  protected  access  in  Object  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder.argName  =(OptionBuilder)argName.clone();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder.argName  =(OptionBuilder)argName.clone();		non-compiled	[CE]  clone()  has  protected  access  in  Object	20	None	add
334	[BUG]  [BUGGY]    OptionBuilder.argName  =(OptionBuilder)argName.fullArg();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder.argName  =(OptionBuilder)argName.fullArg();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder.argName  =(OptionBuilder)argName.fullArg();		non-compiled	[CE]  cannot  find  symbol	20	None	add
335	[BUG]  [BUGGY]    OptionBuilder.argName  =(OptionBuilder)argName.get();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  hasArg()  {  OptionBuilder.numberOfArgs  =  1;  [BUGGY]    OptionBuilder.argName  =(OptionBuilder)argName.get();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  hasArg  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	0.5	111	111	1	replace	    OptionBuilder.argName  =(OptionBuilder)argName.get();		non-compiled	[CE]  cannot  find  symbol	20	None	add
361	[BUG]  [BUGGY]    this.optionComparator.setArgName(name);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    this.optionComparator.setArgName(name);  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    this.optionComparator.setArgName(name);		non-compiled	[CE]  cannot  find  symbol	6	None	add
362	[BUG]  [BUGGY]    Preconditions.checkArgument(!this.defaultArgName.equals(name));  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    Preconditions.checkArgument(!this.defaultArgName.equals(name));  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    Preconditions.checkArgument(!this.defaultArgName.equals(name));		non-compiled	[CE]  cannot  find  symbol  Preconditions	6	None	add
363	[BUG]  [BUGGY]    Preconditions.checkArgument(!this.argName.equals(name));  [CE]  cannot  find  symbol  argName  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    Preconditions.checkArgument(!this.argName.equals(name));  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    Preconditions.checkArgument(!this.argName.equals(name));		non-compiled	[CE]  cannot  find  symbol  argName	6	None	add
364	[BUG]  [BUGGY]    Preconditions.checkArgument(!this.defaultArgName.isEmpty());  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    Preconditions.checkArgument(!this.defaultArgName.isEmpty());  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    Preconditions.checkArgument(!this.defaultArgName.isEmpty());		non-compiled	[CE]  cannot  find  symbol  Preconditions	6	None	add
365	[BUG]  [BUGGY]    Preconditions.checkArgument(this.argName!=  null);  [CE]  cannot  find  symbol  argName  [CONTEXT]  public  void  setArgName(String  name)  {  [BUGGY]    Preconditions.checkArgument(this.argName!=  null);  [BUGGY]  this.defaultArgName  =  name;  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	314	314	1	replace	    Preconditions.checkArgument(this.argName!=  null);		non-compiled	[CE]  cannot  find  symbol  argName	6	None	add
393	[BUG]  [BUGGY]    String  argName  =(String)this.values.get(arguments.keySet());  [CE]  cannot  find  symbol  arguments  [CONTEXT]  public  String  getArgName()  {  [BUGGY]    String  argName  =(String)this.values.get(arguments.keySet());  [BUGGY]  return  argName;  }  [CLASS]  Option  [METHOD]  getArgName  [RETURN_TYPE]  String  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	318	318	1	replace	    String  argName  =(String)this.values.get(arguments.keySet());		non-compiled	[CE]  cannot  find  symbol  arguments	14	None	add
394	[BUG]  [BUGGY]    String  argName  =(String)this.values.get(opt.getKey());  [CE]  cannot  find  symbol  [CONTEXT]  public  String  getArgName()  {  [BUGGY]    String  argName  =(String)this.values.get(opt.getKey());  [BUGGY]  return  argName;  }  [CLASS]  Option  [METHOD]  getArgName  [RETURN_TYPE]  String  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	318	318	1	replace	    String  argName  =(String)this.values.get(opt.getKey());		non-compiled	[CE]  cannot  find  symbol	14	None	add
395	[BUG]  [BUGGY]    String  argName  =(String)this.numberOfArgs  *  1;  [CE]  inconvertible  types  [CONTEXT]  public  String  getArgName()  {  [BUGGY]    String  argName  =(String)this.numberOfArgs  *  1;  [BUGGY]  return  argName;  }  [CLASS]  Option  [METHOD]  getArgName  [RETURN_TYPE]  String  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Object  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/Option.java	0.5	318	318	1	replace	    String  argName  =(String)this.numberOfArgs  *  1;		non-compiled	[CE]  inconvertible  types	14	None	add
423	[BUG]  [BUGGY]  buff.append(option.getArgName()  ==  null?  option.getLongOptSeparator  : "   ");  [CE]  cannot  find  symbol  getLongOptSeparator  [CONTEXT]  buff.append( "- ").append(option.getOpt());  }  else  {  buff.append( "-- ").append(option.getLongOpt());  }  if  (option.hasArg()  &&  option.hasArgName())  {  [BUGGY]  buff.append(option.getArgName()  ==  null?  option.getLongOptSeparator  : "   ");  [BUGGY]  buff.append( "< ").append(option.getArgName()).append( "> ");  }  if  (!required)  {  buff.append( "] ");  }  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  appendOption  [RETURN_TYPE]  void  StringBuffer  buff  Option  option  final  boolean  required  [VARIABLES]  StringBuffer  buff  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  footer  header  longOptSeparator  name  newline  prefix  boolean  required  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  padding  width  Comparator  comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.5773502691896258	655	655	1	replace	buff.append(option.getArgName()  ==  null?  option.getLongOptSeparator  : "   ");	buff.append(option.getOpt()  ==  null  ?  longOptSeparator  :   "   ");  	non-compiled	[CE]  cannot  find  symbol  getLongOptSeparator	9	None	replace
424	[BUG]  [BUGGY]  buff.append(option.getArgName()  ==  null?  option.getOptSeparator  : "   ");  [CE]  cannot  find  symbol  getOptSeparator  [CONTEXT]  buff.append( "- ").append(option.getOpt());  }  else  {  buff.append( "-- ").append(option.getLongOpt());  }  if  (option.hasArg()  &&  option.hasArgName())  {  [BUGGY]  buff.append(option.getArgName()  ==  null?  option.getOptSeparator  : "   ");  [BUGGY]  buff.append( "< ").append(option.getArgName()).append( "> ");  }  if  (!required)  {  buff.append( "] ");  }  }  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  appendOption  [RETURN_TYPE]  void  StringBuffer  buff  Option  option  final  boolean  required  [VARIABLES]  StringBuffer  buff  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  footer  header  longOptSeparator  name  newline  prefix  boolean  required  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  padding  width  Comparator  comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.5773502691896258	655	655	1	replace	buff.append(option.getArgName()  ==  null?  option.getOptSeparator  : "   ");	buff.append(option.getOpt()  ==  null  ?  longOptSeparator  :   "   ");  	non-compiled	[CE]  cannot  find  symbol  getOptSeparator	9	None	replace
481	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =(OptionBuilder)required();		non-compiled	[CE]  cannot  find  symbol	4	None	add
482	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required.next();  [CE]  boolean  cannot  be  dereferenced  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required.next();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =(OptionBuilder)required.next();		non-compiled	[CE]  boolean  cannot  be  dereferenced	4	None	add
483	[BUG]  [BUGGY]    OptionBuilder  instance  =  getRequired();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =  getRequired();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =  getRequired();		non-compiled	[CE]  cannot  find  symbol	4	None	add
484	[BUG]  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required.build();  [CE]  boolean  cannot  be  dereferenced  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =(OptionBuilder)required.build();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =(OptionBuilder)required.build();		non-compiled	[CE]  boolean  cannot  be  dereferenced	4	None	add
485	[BUG]  [BUGGY]    OptionBuilder  instance  =  getOptionBuilder();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  OptionBuilder  isRequired()  {  OptionBuilder.required  =  true;  [BUGGY]    OptionBuilder  instance  =  getOptionBuilder();  [BUGGY]  return  instance;  }  [CLASS]  OptionBuilder  [METHOD]  isRequired  [RETURN_TYPE]  OptionBuilder  [VARIABLES]  boolean  hasArg  optionalArg  required  OptionBuilder  instance  char  valuesep  Object  type  String  argName  description  longopt  name  newLongopt  int  numberOfArgs  	projects/Cli31/src/main/java/org/apache/commons/cli/OptionBuilder.java	1.0	150	150	1	replace	    OptionBuilder  instance  =  getOptionBuilder();		non-compiled	[CE]  cannot  find  symbol	4	None	add
512	[BUG]  [BUGGY]  if(!setArgName(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]  if(!setArgName(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	if(!setArgName(name))  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
513	[BUG]  [BUGGY]  if(optionComparator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setArgName(String  name)  {  this.defaultArgName  =  name;  [BUGGY]  if(optionComparator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  HelpFormatter  OptionComparator  [METHOD]  setArgName  [RETURN_TYPE]  void  String  name  [VARIABLES]  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_LONG_OPT_SEPARATOR  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  longOptSeparator  name  newline  prefix  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  defaultDescPad  defaultLeftPad  defaultWidth  padding  width  Comparator  optionComparator  	projects/Cli31/src/main/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	315	315	1	replace	if(optionComparator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
