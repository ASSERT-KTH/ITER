bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  locals.contains(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.contains(value))  {	  switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.contains(value.getNext()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getNext()))  {	  switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getType()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.contains(value.getType()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getType()))  {	  switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.contains(value.getLocalName()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getLocalName()))  {	  switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.containsKey(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsKey(value))  {	  switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  locals)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild().getType(),  locals)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  locals)  {	  switch(value.getFirstChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  switch(value.getLastChild().getType())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getLastChild().getType())  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getType())  {	  switch(value.getFirstChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild().getType()  ||  locals.contains(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ||  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext().getType())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild().getNext().getType())  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext().getType())  {	  switch(value.getFirstChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getFirstChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  switch(value.getType(),  locales)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  locales)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales)  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  switch(value.getType(),  locals,  false)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  locals,  false)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals,  false)  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  Locale.ENGLISH)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH)  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  switch(value.getType(),  values)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  values)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  values)  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  switch(value.getType(),  locals,  true)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  locals,  true)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals,  true)  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  Locale.US)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US)  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  switch(value.getLastChild())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getLastChild())  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild())  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  switch(value.getFirstChild(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild(),  locals)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild(),  locals)  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild()  ||  locals.contains(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( " "))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( " "))  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  locals.contains(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.contains(value.getString()))  {	  switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  locals.contains(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getString()))  {	  switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsKey(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.containsKey(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsKey(value.getString()))  {	  switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.contains(value.getString()))  {	  switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locales.contains(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.contains(value.getString()))  {	  switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
41	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
42	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
43	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Node  value  =  locals.getFirstChild();  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  locals);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  locals);  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  locals);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  break;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Node  value  =  locals.getFirstChild();  break;  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  value.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Predicate  <  Node>  locals  =  value.getFirstChild();  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  value.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  Node  locals  =  value.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Node  locals  =  value.getFirstChild();  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  value.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  Node  value  =  Locale.getDefault();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Node  value  =  Locale.getDefault();  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  Locale.getDefault();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
61	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLocalValue(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignableFrom(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignableFrom(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignableFrom(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  locals.isEmpty())  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.isEmpty())  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
66	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locales.isEmpty())  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.isEmpty())  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
67	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
68	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
74	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
76	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
82	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
83	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value.getFirstChild(),  locals);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
87	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
88	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
89	[BUG]  [BUGGY]  switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
90	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
91	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  &&  locals.isEmpty())  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals.isEmpty())  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
92	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  ||  locals.isEmpty())  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.isEmpty())  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
93	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  value.isEmpty())  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isEmpty())  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
94	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.equals(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.equals(value.getLocalName()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.equals(value.getLocalName()))  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
95	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
96	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  ||  NodeUtil.isImmutableValue(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
97	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLiteralValue(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
98	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
99	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
100	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
101	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
102	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
103	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  &&  locals.contains(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals.contains(value))  {	  switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
104	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  ||  locals.contains(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.contains(value))  {	  switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
105	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locales.contains(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.contains(value))  {	  switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
106	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.contains(locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(locals))  {	  switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
107	[BUG]  [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
108	[BUG]  [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
109	[BUG]  [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
110	[BUG]  [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
111	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getType()  &&  locals.contains(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals.contains(value.getString()))  {	  switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
112	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
113	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
114	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
115	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
116	[BUG]  [BUGGY]  switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
117	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
118	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
119	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
120	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
121	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
122	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
123	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
124	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
125	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
126	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
127	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()!=  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
128	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
129	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
130	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
131	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
132	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
133	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()!=  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
134	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
135	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
136	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
137	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()!=  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
138	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
139	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
140	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
141	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
142	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getFirstChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
143	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
144	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
145	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
146	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
147	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
148	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild().getNext())  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext())  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
149	[BUG]  [BUGGY]  switch(value.getFirstChild()).caseToken.AND)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getFirstChild()).caseToken.AND)  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()).caseToken.AND)  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
150	[BUG]  [BUGGY]  Switch(value.getFirstChild())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  Switch(value.getFirstChild())  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild())  {	  switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
151	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
152	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
153	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
154	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
155	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
156	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
157	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getQualifiedName()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.contains(value.getQualifiedName()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getQualifiedName()))  {	  switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
158	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
159	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
160	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
161	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
162	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
163	[BUG]  [BUGGY]  switch(value.getType(),  locals  ||  values.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType(),  locals  ||  values.contains(value.getString()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  ||  values.contains(value.getString()))  {	  switch(value.getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
164	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {    [BUGGY]  switch(value.getType()  ||  locals.contains(value.getLastChild()))  {  [BUGGY]    case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getLastChild()))  {	  switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
