bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(value.getType(),  locals)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType(),  locals)  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals)  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getString()))  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getString()))  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType()  ||  locals.isEmpty())  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty())  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getFirstChild().getType())  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType()  ||  locals.contains(value))  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value))  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  switch(value.getFirstChild())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getFirstChild())  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild())  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]    [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	  	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value))  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(value))  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]  case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString()))  {	switch  (value.getType())  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
