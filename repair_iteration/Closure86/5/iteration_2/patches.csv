bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.TYPE  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.TYPE  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.TYPE  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
2	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
3	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.OBJECTLIT  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.OBJECTLIT  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.OBJECTLIT  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
4	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
5	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()    <    Token.NAME    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
6	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    <    Token.NAME    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
7	[BUG]  [BUGGY]  switch(value.getType()  >=  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >=  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >=  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    <    Token.NAME    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
8	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {	  switch(value.getType()    <    Token.NAME    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
9	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
10	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
11	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
12	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isName(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isName(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isName(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
13	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
14	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
22	[BUG]  [BUGGY]  switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
23	[BUG]  [BUGGY]  switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
24	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.FUNCTION    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
25	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.FUNCTION    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
26	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.FUNCTION    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
27	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.FUNCTION    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
28	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.FUNCTION    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
29	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isName(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isName(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isName(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.FUNCTION    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
30	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getFirstChild()))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
31	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
32	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getFirstChild()))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
33	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
34	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
35	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
36	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
37	[BUG]  [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
38	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
39	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
40	[BUG]  [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
41	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  value))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
42	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
43	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
44	[BUG]  [BUGGY]  switch(value.getLastChild().getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild().getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
45	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
46	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())&&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())&&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())&&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
47	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
48	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.contains(locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.contains(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.contains(locals))  {	  switch(value.getType()    ||    locals.contains(locals))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
49	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getFirstChild()))  {	  switch(value.getType()    ||    locals.contains(locals))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
50	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
55	[BUG]  [BUGGY]  switch(value.getType()  +  1  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  +  1  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  +  1  &&  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
57	[BUG]  [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())||  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
58	[BUG]  [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
59	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
60	[BUG]  [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
61	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getString()))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
62	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString(),  locals))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
63	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getLineno()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getLineno()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getLineno()))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
64	[BUG]  [BUGGY]  switch(value.getType(),  locales,  false)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales,  false)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales,  false)  {	  switch(value.getType(),    locals,    false)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
65	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH,  false)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH,  false)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH,  false)  {	  switch(value.getType(),    locals,    false)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
66	[BUG]  [BUGGY]  Switch(value.getType(),  locals,  true)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals,  true)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals,  true)  {	  switch(value.getType(),    locals,    false)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
67	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US,  false)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US,  false)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US,  false)  {	  switch(value.getType(),    locals,    false)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
68	[BUG]  [BUGGY]  switch(value.getLastChild().getType(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild().getType(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getType(),  locals)  {	  switch(value.getLastChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
69	[BUG]  [BUGGY]  switch(value.getLastChild().getString())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild().getString())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getString())  {	  switch(value.getLastChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
70	[BUG]  [BUGGY]  switch(value.getLastChild().getNext().getType())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild().getNext().getType())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getNext().getType())  {	  switch(value.getLastChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType())  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType())  {	  switch(value.getLastChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  Switch(value.getLastChild().getType(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getLastChild().getType(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getLastChild().getType(),  locals)  {	  switch(value.getLastChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  Switch(value.getType(),  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
74	[BUG]  [BUGGY]  Switch(locals.getType()  &&  value.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(locals.getType()  &&  value.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(locals.getType()  &&  value.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
75	[BUG]  [BUGGY]  Switch(value.getType()),  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()),  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()),  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
76	[BUG]  [BUGGY]  Switch(value.getType()  {  Token.NAME  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  {  Token.NAME  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  {  Token.NAME  &&  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
77	[BUG]  [BUGGY]  Switch(value.getType()  >  0  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  >  0  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  >  0  &&  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
78	[BUG]  [BUGGY]  Switch(value.getType()).apply(locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()).apply(locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()).apply(locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
79	[BUG]  [BUGGY]  switch(value.getType()  /  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  /  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  /  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
80	[BUG]  [BUGGY]  switch(value.getType(),  value.getString())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  value.getString())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  value.getString())  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
81	[BUG]  [BUGGY]  switch(value.getType()  |  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  |  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  |  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
82	[BUG]  [BUGGY]  switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getString(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getString(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getString(),  locals))  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
83	[BUG]  [BUGGY]  switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getString()),  locals)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getString()),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getString()),  locals)  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
84	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
85	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isName(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isName(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isName(value.getString()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
86	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value.getString()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
87	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
88	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getString()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
89	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
90	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
91	[BUG]  [BUGGY]  switch(value.getType(),  locals  &&  values.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals  &&  values.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  &&  values.contains(value.getString()))  {	  switch(value.getType(),    locals    ||    values.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
92	[BUG]  [BUGGY]  switch(value.getType(),  values  ||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  values  ||  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  values  ||  locals.contains(value.getString()))  {	  switch(value.getType(),    locals    ||    values.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
93	[BUG]  [BUGGY]  switch(value.getType(),  locales  ||  values.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales  ||  values.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales  ||  values.contains(value.getString()))  {	  switch(value.getType(),    locals    ||    values.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
94	[BUG]  [BUGGY]  switch(value.getType(),  value  ||  values.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  value  ||  values.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  value  ||  values.contains(value.getString()))  {	  switch(value.getType(),    locals    ||    values.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
95	[BUG]  [BUGGY]  switch(value.getType(),  values  ||  values.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  values  ||  values.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  values  ||  values.contains(value.getString()))  {	  switch(value.getType(),    locals    ||    values.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
96	[BUG]  [BUGGY]  switch(value.getType(),  value  ||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  value  ||  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  value  ||  locals.contains(value.getString()))  {	  switch(value.getType(),    locals    ||    values.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
97	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  ||  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
98	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isName(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isName(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isName(value.getString()))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
99	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isLocalValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isLocalValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isLocalValue(value.getString()))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
100	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
101	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
102	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
103	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
104	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLiteralValue(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
105	[BUG]  [BUGGY]  switch(value.getType()  ==  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
106	[BUG]  [BUGGY]  switch(value.getType()!=  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
107	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
108	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
109	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  ||  value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  ||  value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.SYNTHETIC  ||  value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
110	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.NAME  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.NAME  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.NAME  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
111	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
112	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
113	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
114	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
115	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
116	[BUG]  [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())||  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
117	[BUG]  [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
118	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
119	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
120	[BUG]  [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getFirstChild())&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getFirstChild())&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getFirstChild())&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
121	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
122	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
123	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
124	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
125	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value,  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value,  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value,  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
126	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getLastChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value.getLastChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getLastChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
127	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
128	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
129	[BUG]  [BUGGY]  Switch(value.getFirstChild(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild(),  locals)  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
130	[BUG]  [BUGGY]  Switch(value.getLastChild())  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getLastChild())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getLastChild())  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
131	[BUG]  [BUGGY]  Switch(value.getFirstChild()  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild()  ||  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild()  ||  locals.contains(value.getLastChild()))  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
132	[BUG]  [BUGGY]  Switch(value.getFirstChild(),  locales)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild(),  locales)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild(),  locales)  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
133	[BUG]  [BUGGY]  Switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( " "))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( " "))  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
134	[BUG]  [BUGGY]  Switch(value.getType()  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  NodeUtil.isAssignmentOp(value))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
135	[BUG]  [BUGGY]  Switch(value.getType()  &  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &  NodeUtil.isAssignmentOp(value))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
136	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getType()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getType()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getType()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
137	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isExpressionNode(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isExpressionNode(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isExpressionNode(value))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
138	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isVarDeclaration(value))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isVarDeclaration(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isVarDeclaration(value))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
139	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
140	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getLastChild()))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
141	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
142	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
143	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getLastChild()))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
144	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext().getType(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext().getType(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext().getType(),  locals)  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
145	[BUG]  [BUGGY]  switch(value.getFirstChild().getLastChild().getNext().getType())  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getLastChild().getNext().getType())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getLastChild().getNext().getType())  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
146	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext().getType()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext().getType()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext().getType()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
147	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext().getType()  ||  value.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext().getType()  ||  value.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext().getType()  ||  value.getLastChild().getType()!=  Token.FUNCTION)  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
148	[BUG]  [BUGGY]  Switch(value.getFirstChild().getNext().getType())  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getNext().getType())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getNext().getType())  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
149	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext().getType()  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext().getType()  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext().getType()  ||  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
150	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
151	[BUG]  [BUGGY]  switch(value.getType())||  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())||  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())||  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
152	[BUG]  [BUGGY]  switch(value.getType())&&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())&&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())&&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
153	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
154	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
155	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
156	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
157	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
158	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
159	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
160	[BUG]  [BUGGY]  switch(value.getLastChild(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild(),  locals)  {	  switch(value.getLastChild())    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
161	[BUG]  [BUGGY]  switch(value!=  null?  false  :  value.getLastChild())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value!=  null?  false  :  value.getLastChild())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value!=  null?  false  :  value.getLastChild())  {	  switch(value.getLastChild())    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
162	[BUG]  [BUGGY]  switch(value.getLastChild()  ||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild()  ||  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild()  ||  locals.contains(value.getString()))  {	  switch(value.getLastChild())    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
163	[BUG]  [BUGGY]  switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getFirstChild(),  locales))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getFirstChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
164	[BUG]  [BUGGY]  switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getFirstChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
165	[BUG]  [BUGGY]  switch(value.getType(),  values  ||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  values  ||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  values  ||  evaluatesToLocalValue(value.getFirstChild(),  locales))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getFirstChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
166	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.equals(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.equals(value.getLocalName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.equals(value.getLocalName()))  {	  switch(value.getType()    ||    locals.equals(value.getLocalName()))    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
167	[BUG]  [BUGGY]  switch(value.getType(),  locals.equals(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.equals(value.getLocalName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.equals(value.getLocalName()))  {	  switch(value.getType()    ||    locals.equals(value.getLocalName()))    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
168	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.equals(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.equals(value.getLocalName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.equals(value.getLocalName()))  {	  switch(value.getType()    ||    locals.equals(value.getLocalName()))    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
169	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.equals(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.equals(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.equals(value.getString()))  {	  switch(value.getType()    ||    locals.equals(value.getLocalName()))    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
170	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.equals(value.getName()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.equals(value.getName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.equals(value.getName()))  {	  switch(value.getType()    ||    locals.equals(value.getLocalName()))    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
171	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
172	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
173	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
174	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
175	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
176	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
177	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
178	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()!=    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
179	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()!=    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
180	[BUG]  [BUGGY]  switch(value.getType()  >=  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >=  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >=  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
181	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
182	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
183	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
184	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
185	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
186	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
187	[BUG]  [BUGGY]  switch(value.getType()  &&  locales.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locales.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locales.contains(value))  {	  switch(value.getType()    ||    locales.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
188	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.contains(locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.contains(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.contains(locals))  {	  switch(value.getType()    ||    locales.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
189	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.containsKey(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.containsKey(value))  {	  switch(value.getType()    ||    locales.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
190	[BUG]  [BUGGY]  switch(locals.getType()  ||  locales.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  ||  locales.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  ||  locales.contains(value))  {	  switch(value.getType()    ||    locales.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
191	[BUG]  [BUGGY]  switch(value.getType()  &&  value.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  value.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  value.isEmpty())  {	  switch(value.getType()    ||    value.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
192	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isLocal())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isLocal())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isLocal())  {	  switch(value.getType()    ||    value.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
193	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isNone())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isNone())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isNone())  {	  switch(value.getType()    ||    value.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
194	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isEmpty()  &&  locals.contains(value.getLastChild()))  {	  switch(value.getType()    ||    value.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
195	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isSynthetic())  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isSynthetic())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isSynthetic())  {	  switch(value.getType()    ||    value.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
196	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isSupported())  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isSupported())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isSupported())  {	  switch(value.getType()    ||    value.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
197	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isName(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isName(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isName(value.getString()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
198	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
199	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value.getString()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
200	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getString()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
201	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
202	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isName(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isName(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isName(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
203	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.contains(value.getQualifiedName()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.contains(value.getQualifiedName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.contains(value.getQualifiedName()))  {	  switch(value.getType()    ||    locals.contains(value.getQualifiedName()))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
204	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getQualifiedName()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getQualifiedName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getQualifiedName()))  {	  switch(value.getType()    ||    locals.contains(value.getQualifiedName()))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
205	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsKey(value.getQualifiedName()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.containsKey(value.getQualifiedName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsKey(value.getQualifiedName()))  {	  switch(value.getType()    ||    locals.contains(value.getQualifiedName()))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
206	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getQualifiedName()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getQualifiedName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.contains(value.getQualifiedName()))  {	  switch(value.getType()    ||    locals.contains(value.getQualifiedName()))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
207	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getQualifiedName(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getQualifiedName(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getQualifiedName(),  locals))  {	  switch(value.getType()    ||    locals.contains(value.getQualifiedName()))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
208	[BUG]  [BUGGY]  switch(value.getType()  ==  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
209	[BUG]  [BUGGY]  switch(value.getType()!=  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
210	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
211	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
212	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.NAME  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.NAME  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.NAME  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
213	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_NO_TYPE  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_NO_TYPE  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.FUNCTION_NO_TYPE  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
214	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
215	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
216	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
217	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
218	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType(),    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
219	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getString())||  locals.contains(value.getString()))  {	  switch(value.getType(),    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
220	[BUG]  [BUGGY]  switch(value.getType(),  locals.containsKey(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.containsKey(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.containsKey(value.getString()))  {	  switch(value.getType(),    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
221	[BUG]  [BUGGY]  switch(value.getType(),  locales.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales.contains(value.getString()))  {	  switch(value.getType(),    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
222	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType(),    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
223	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
224	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignableFrom(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
225	[BUG]  [BUGGY]  switch(value.getType()  ==  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
226	[BUG]  [BUGGY]  switch(value.getType()!=  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
227	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
228	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
229	[BUG]  [BUGGY]  switch(value.getType()  ==  1  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  1  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  1  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
230	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP_METHODS  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP_METHODS  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP_METHODS  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
231	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
232	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isName(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isName(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isName(value.getString()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
233	[BUG]  [BUGGY]  switch(value.getType(),  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.isEmpty())  {	  switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
234	[BUG]  [BUGGY]  switch(value.getType()  &&  Locals.isEmpty(locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  Locals.isEmpty(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  Locals.isEmpty(locals))  {	  switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
235	[BUG]  [BUGGY]  switch(value.getType()  &&  locales.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locales.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locales.isEmpty())  {	  switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
236	[BUG]  [BUGGY]  Switch(value.getType(),  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals.isEmpty())  {	  Switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
237	[BUG]  [BUGGY]  Switch(locals.getType()  &&  value.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(locals.getType()  &&  value.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(locals.getType()  &&  value.isEmpty())  {	  Switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
238	[BUG]  [BUGGY]  Switch(value.getType()  ||  locales.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locales.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locales.isEmpty())  {	  Switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
239	[BUG]  [BUGGY]  Switch(value.getType()  +  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  +  locals.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  +  locals.isEmpty())  {	  Switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
240	[BUG]  [BUGGY]  switch(value.getType(),  locales,  true)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales,  true)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales,  true)  {	  switch(value.getType(),    locals,    true)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
241	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH,  true)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH,  true)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH,  true)  {	  switch(value.getType(),    locals,    true)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
242	[BUG]  [BUGGY]  Switch(value.getType(),  locals,  false)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals,  false)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals,  false)  {	  switch(value.getType(),    locals,    true)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
243	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US,  true)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US,  true)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US,  true)  {	  switch(value.getType(),    locals,    true)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
244	[BUG]  [BUGGY]  switch(value.getType(),  values,  true)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  values,  true)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  values,  true)  {	  switch(value.getType(),    locals,    true)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
245	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.containsKey(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.containsKey(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.containsKey(value.getString()))  {	  switch(value.getType()    ||    locals.containsKey(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
246	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.containsKey(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.containsKey(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.containsKey(value.getString()))  {	  switch(value.getType()    ||    locals.containsKey(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
247	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals.containsKey(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locals.containsKey(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals.containsKey(value.getString()))  {	  switch(value.getType()    ||    locals.containsKey(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
248	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.containsKey(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.containsKey(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.containsKey(value.getString()))  {	  switch(value.getType()    ||    locals.containsKey(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
249	[BUG]  [BUGGY]  switch(value.getType()  ==  0  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  0  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  0  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
250	[BUG]  [BUGGY]  switch(value.getType()!=  0  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  0  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  0  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
251	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.STRING_REGEXP_METHODS  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.STRING_REGEXP_METHODS  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.STRING_REGEXP_METHODS  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
252	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
253	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
254	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP_METHODS  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP_METHODS  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP_METHODS  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
255	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
256	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
257	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
258	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
259	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getString().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getString().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  &&  value.getString().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
260	[BUG]  [BUGGY]  Node  value  =  locals.getLastChild();  return  evaluatesToLocalValue(value,  locals);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getLastChild();  return  evaluatesToLocalValue(value,  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getLastChild();  return  evaluatesToLocalValue(value,  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value,    locals);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
261	[BUG]  [BUGGY]  Node  value  =  locales.getFirstChild();  return  evaluatesToLocalValue(value,  locals);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locales.getFirstChild();  return  evaluatesToLocalValue(value,  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locales.getFirstChild();  return  evaluatesToLocalValue(value,  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value,    locals);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
262	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  locales);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  locales);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  locales);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value,    locals);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
263	[BUG]  [BUGGY]  Predicate  <  Node>  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  locals);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value,    locals);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
264	[BUG]  [BUGGY]  Node  value  =  Locals.getFirstChild();  return  evaluatesToLocalValue(value,  locals);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  Locals.getFirstChild();  return  evaluatesToLocalValue(value,  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  Locals.getFirstChild();  return  evaluatesToLocalValue(value,  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value,    locals);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
265	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
266	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
267	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()!=  Token.FUNCTION)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
268	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
269	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  /  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  /  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  /  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
270	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
271	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locales.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
272	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locales.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
273	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locales.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
274	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locales.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
275	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
276	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
277	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
278	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignableFrom(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignableFrom(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignableFrom(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
279	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
280	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
281	[BUG]  [BUGGY]  switch(value.getType()  >=  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >=  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >=  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
282	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isLocalValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isLocalValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isLocalValue(value.getString()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
283	[BUG]  [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
284	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isExpressionNode(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isExpressionNode(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isExpressionNode(value.getString()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
285	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString(),  locals))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
286	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
287	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
288	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
289	[BUG]  [BUGGY]  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
290	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals);	  NodeUtil.isImmutableValue(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
291	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
292	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value,  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value,  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value,  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
293	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value.getFirstChild(),  locals));  return  evaluatesToLocalValue(value.getLastChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
294	[BUG]  [BUGGY]  Switch(value.getType()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
295	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getLastChild()))  {	  Switch(value.getType()    ||    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
296	[BUG]  [BUGGY]  Switch(value.getType(),  locals  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
297	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild(),  locals))  {	  Switch(value.getType()    ||    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
298	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
299	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
300	[BUG]  [BUGGY]  switch(value.getType()!=  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
301	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
302	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
303	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  ||  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  ||  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  ||  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
304	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  &&  value.getLastChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
305	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
306	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  locals.contains(value.getLastChild()))  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
307	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  locals.contains(value.getString()))  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
308	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  locals.contains(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  locals.contains(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  locals.contains(value.getFirstChild()))  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
309	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
310	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  value.getFirstChild().getType()  ==  Token.NAME)  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
311	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()!=    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
312	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignableFrom(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignableFrom(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignableFrom(value.getLastChild()))  {	  switch(value.getType()!=    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
313	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getType()!=    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
314	[BUG]  [BUGGY]  Switch(value.getType(),  Locale.ENGLISH)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  Locale.ENGLISH)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  Locale.ENGLISH)  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
315	[BUG]  [BUGGY]  switch(value.getType(),  Locale.STRING)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.STRING)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.STRING)  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
316	[BUG]  [BUGGY]  switch(value.getType(),  Locale.LONG)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.LONG)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.LONG)  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
317	[BUG]  [BUGGY]  switch(value.getType(),  Locale.VAR)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.VAR)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.VAR)  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
318	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
319	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
320	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
321	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.TYPE  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.TYPE  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.TYPE  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
322	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.OBJECTLIT  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.OBJECTLIT  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.OBJECTLIT  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
323	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
324	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
325	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isName(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isName(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isName(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
326	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isLocalValue(value))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
327	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignableFrom(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignableFrom(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignableFrom(value))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
328	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isLiteralValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isLiteralValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isLiteralValue(value))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
329	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isVarDeclaration(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isVarDeclaration(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isVarDeclaration(value))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
330	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isFunctionDeclaration(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isFunctionDeclaration(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isFunctionDeclaration(value))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
331	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
332	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
333	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
334	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
335	[BUG]  [BUGGY]  switch(value.getType()  ==  0  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  0  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  0  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
336	[BUG]  [BUGGY]  switch(value.getType()!=  0  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  0  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  0  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
337	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.SYNTHETIC  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
338	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
339	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP_METHODS  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP_METHODS  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP_METHODS  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
340	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.THIS  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
341	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLiteralValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLiteralValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isLiteralValue(value))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
342	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLiteralValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
343	[BUG]  [BUGGY]  Switch(value.getType(),  locals)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals)  {	  switch(value.getType(),    locales)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
344	[BUG]  [BUGGY]  switch(value.getType(),  locales),  case  Token.ASSIGN)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales),  case  Token.ASSIGN)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales),  case  Token.ASSIGN)  {	  switch(value.getType(),    locales)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
345	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
346	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
347	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
348	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
349	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  ||  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  ||  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  ||  value.getFirstChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
350	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
351	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
352	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.isEmpty()  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.isEmpty()  ||  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
353	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
354	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
355	[BUG]  [BUGGY]  switch(value.getType()!=  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
356	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
357	[BUG]  [BUGGY]  Switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
358	[BUG]  [BUGGY]  Switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
359	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
360	[BUG]  [BUGGY]  Switch(value.getType(),  locals  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
361	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild(),  locals))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
362	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
363	[BUG]  [BUGGY]  Node  value  =  locals.getLastChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getLastChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getLastChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
364	[BUG]  [BUGGY]  Node  value  =  locales.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locales.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locales.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
365	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locales);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locales);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locales);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
366	[BUG]  [BUGGY]  Predicate  <  Node>  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
367	[BUG]  [BUGGY]  Node  value  =  this.locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  this.locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  this.locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
368	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
369	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
370	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isName(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isName(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isName(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
371	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
372	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getFirstChild(),  locals))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
373	[BUG]  [BUGGY]  switch(value.getType()  &&  locales.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locales.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locales.contains(value.getString()))  {	  switch(value.getType()    ||    locales.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
374	[BUG]  [BUGGY]  switch(locals.getType()  ||  locales.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  ||  locales.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  ||  locales.contains(value.getString()))  {	  switch(value.getType()    ||    locales.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
375	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.contains(value.getString(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.contains(value.getString(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.contains(value.getString(),  locals))  {	  switch(value.getType()    ||    locales.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
376	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
377	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
378	[BUG]  [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType(),    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
379	[BUG]  [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType(),    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
380	[BUG]  [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType(),    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
381	[BUG]  [BUGGY]  switch(value.getType(),  NodeUtil.isExpressionNode(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  NodeUtil.isExpressionNode(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  NodeUtil.isExpressionNode(value.getString()))  {	  switch(value.getType(),    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
382	[BUG]  [BUGGY]  switch(value.getType(),  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType(),    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
383	[BUG]  [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString()),  locals)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString()),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  NodeUtil.isAssignmentOp(value.getString()),  locals)  {	  switch(value.getType(),    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
384	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    break;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
385	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  break;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  break;	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    break;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
386	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    break;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
387	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    break;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
388	[BUG]  [BUGGY]  switch(locals.getType()  &&  value.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  value.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  value.contains(value.getString()))  {	  switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
389	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
390	[BUG]  [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Token.NAME  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
391	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
392	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  value.getLastChild().getString().equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  value.getLastChild().getString().equals( "   "))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  value.getLastChild().getString().equals( "   "))  {	  switch(value.getFirstChild()    ||    value.getLastChild().getString().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
393	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "* "))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "* "))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "* "))  {	  switch(value.getFirstChild()    ||    value.getLastChild().getString().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
394	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "/ "))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "/ "))  {	  switch(value.getFirstChild()    ||    value.getLastChild().getString().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
395	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "- "))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "- "))  {	  switch(value.getFirstChild()    ||    value.getLastChild().getString().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
396	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "_ "))  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "_ "))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  value.getLastChild().getString().equals( "_ "))  {	  switch(value.getFirstChild()    ||    value.getLastChild().getString().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
397	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
398	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getNext())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getNext())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getNext())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
399	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getNext())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getNext())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getNext())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
400	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
401	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
402	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
403	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType()  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType()  ||  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType()  ||  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
404	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())||  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())||  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
405	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ||  locals.contains(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ||  locals.contains(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ||  locals.contains(value.getLastChild(),  locals))  {	  switch(value.getFirstChild().getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
406	[BUG]  [BUGGY]  switch(value.getLastChild().getType()  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild().getType()  ||  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getType()  ||  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
407	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.containsKey(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.containsKey(value))  {	  switch(value.getType()    ||    locals.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
408	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsKey(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.containsKey(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsKey(value.getNext()))  {	  switch(value.getType()    ||    locals.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
409	[BUG]  [BUGGY]  switch(value.getType(),  locals.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.containsKey(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.containsKey(value))  {	  switch(value.getType()    ||    locals.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
410	[BUG]  [BUGGY]  switch(locals.getType()  ||  value.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  ||  value.containsKey(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  ||  value.containsKey(value))  {	  switch(value.getType()    ||    locals.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
411	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locals.containsKey(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals.containsKey(value))  {	  switch(value.getType()    ||    locals.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
412	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals,  true);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals,  true);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value.getFirstChild(),  locals,  true);	  return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
413	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value.getLastChild(),  locals);	  return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
414	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals,  false);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals,  false);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value.getFirstChild(),  locals,  false);	  return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
415	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locales);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locales);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value.getFirstChild(),  locales);	  return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
416	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals,  value.getLastChild());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals,  value.getLastChild());  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value.getFirstChild(),  locals,  value.getLastChild());	  return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
417	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals,  value.cloneTree());  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals,  value.cloneTree());  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value.getFirstChild(),  locals,  value.cloneTree());	  return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
418	[BUG]  [BUGGY]  Node  value  =  locals.getDefault();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getDefault();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getDefault();	  Node    value    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
419	[BUG]  [BUGGY]  Node  value  =  locals.get(value.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.get(value.getFirstChild());  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.get(value.getFirstChild());	  Node    value    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
420	[BUG]  [BUGGY]  Node  value  =  locals.get(value.getLastChild());  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.get(value.getLastChild());  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.get(value.getLastChild());	  Node    value    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
421	[BUG]  [BUGGY]  Node  value  =  value.getDefault();  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  value.getDefault();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  value.getDefault();	  Node    value    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
422	[BUG]  [BUGGY]  Node  value  =  node.getDefault();  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  node.getDefault();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  node.getDefault();	  Node    value    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
423	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    <    Token.NAME    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
424	[BUG]  [BUGGY]  switch(value.getType()  >=  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >=  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >=  Token.NAME  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    <    Token.NAME    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
425	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(locals.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(locals.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(locals.getLastChild()))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
426	[BUG]  [BUGGY]  switch(locals.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
427	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
428	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(locals.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(locals.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isImmutableValue(locals.getLastChild()))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
429	[BUG]  [BUGGY]  Switch(value.getType()  &&  NodeUtil.isImmutableValue(locals.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  NodeUtil.isImmutableValue(locals.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  NodeUtil.isImmutableValue(locals.getLastChild()))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
430	[BUG]  [BUGGY]  Switch(locals.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(locals.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(locals.getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
431	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
432	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
433	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isName(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isName(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isName(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
434	[BUG]  [BUGGY]  Switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
435	[BUG]  [BUGGY]  Switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
436	[BUG]  [BUGGY]  Switch(value.getType(),  locals  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals  ||  NodeUtil.isAssignmentOp(value.getString()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
437	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getString(),  locals))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
438	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isExpressionNode(value.getString()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
439	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value))  {	  switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
440	[BUG]  [BUGGY]  switch(locals.getType()  &&  value.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  value.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  value.contains(value))  {	  switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
441	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.contains(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.contains(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.contains(value.getNext()))  {	  switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
442	[BUG]  [BUGGY]  Switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
443	[BUG]  [BUGGY]  Switch(value.getType(),  locals  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
444	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getLastChild()))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
445	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getLastChild()))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
446	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getLocalName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.contains(value.getLocalName()))  {	  Switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
447	[BUG]  [BUGGY]  Switch(value.getType())||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType())||  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType())||  locals.contains(value.getString()))  {	  Switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
448	[BUG]  [BUGGY]  Switch(value.getType()  ||  locales.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locales.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locales.contains(value.getString()))  {	  Switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
449	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
450	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
451	[BUG]  [BUGGY]  switch(value.getType()!=  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
452	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
453	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
454	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
455	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
456	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableFrom(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableFrom(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableFrom(value))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
457	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLiteralValue(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLiteralValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLiteralValue(value))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
458	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
459	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(locals))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
460	[BUG]  [BUGGY]  switch(locals.getType()  ||  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  ||  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  ||  NodeUtil.isImmutableValue(value))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
461	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
462	[BUG]  [BUGGY]  Switch(value.getType()  &&  NodeUtil.isImmutableValue(locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  NodeUtil.isImmutableValue(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  NodeUtil.isImmutableValue(locals))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
463	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(locals))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isImmutableValue(locals))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
464	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
465	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isLocalValue(value))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
466	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  value.getLastChild();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  locals  =  value.getLastChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  value.getLastChild();	  Predicate    <    Node>    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
467	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  value.getNext();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  locals  =  value.getNext();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  value.getNext();	  Predicate    <    Node>    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
468	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  value.getParent();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  locals  =  value.getParent();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  value.getParent();	  Predicate    <    Node>    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
469	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  value.getPreviousChild();  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  locals  =  value.getPreviousChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  value.getPreviousChild();	  Predicate    <    Node>    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
470	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  value.getLocalStructure();  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  locals  =  value.getLocalStructure();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  value.getLocalStructure();	  Predicate    <    Node>    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
471	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  locales)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  locales)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  locales)  {	  switch(value.getFirstChild().getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
472	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType(),  locals)  {	  switch(value.getFirstChild().getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
473	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  values)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  values)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  values)  {	  switch(value.getFirstChild().getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
474	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  Locale.ENGLISH)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  Locale.ENGLISH)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  Locale.ENGLISH)  {	  switch(value.getFirstChild().getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
475	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  locals,  false)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  locals,  false)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  locals,  false)  {	  switch(value.getFirstChild().getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
476	[BUG]  [BUGGY]  switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
477	[BUG]  [BUGGY]  switch(value.getType(),  values  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  values  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  values  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
478	[BUG]  [BUGGY]  Switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
479	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
480	[BUG]  [BUGGY]  switch(value.getType()  >  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
481	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
482	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
483	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
484	[BUG]  [BUGGY]  switch(value.getFirstChild()).caseToken.AND  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()).caseToken.AND  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()).caseToken.AND  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getFirstChild()).caseToken.AND)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
485	[BUG]  [BUGGY]  switch(value.getLastChild()).caseToken.AND)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild()).caseToken.AND)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild()).caseToken.AND)  {	  switch(value.getFirstChild()).caseToken.AND)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
486	[BUG]  [BUGGY]  switch(value.getFirstChild()).caseToken.AND  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()).caseToken.AND  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()).caseToken.AND  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild()).caseToken.AND)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
487	[BUG]  [BUGGY]  switch(value.getFirstChild()).caseToken.ASSIGN)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()).caseToken.ASSIGN)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()).caseToken.ASSIGN)  {	  switch(value.getFirstChild()).caseToken.AND)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
488	[BUG]  [BUGGY]  switch(value.getFirstChild()).caseToken.AND  ||  case  Token.ASSIGN)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()).caseToken.AND  ||  case  Token.ASSIGN)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()).caseToken.AND  ||  case  Token.ASSIGN)  {	  switch(value.getFirstChild()).caseToken.AND)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
489	[BUG]  [BUGGY]  switch(value.getFirstChild()).caseToken.AND  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()).caseToken.AND  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()).caseToken.AND  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()).caseToken.AND)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
490	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
491	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
492	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLiteralValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLiteralValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLiteralValue(value))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
493	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableFrom(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableFrom(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableFrom(value))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
494	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
495	[BUG]  [BUGGY]  Switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
496	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
497	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignableFrom(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
498	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
499	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
500	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
501	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
502	[BUG]  [BUGGY]  switch(value.getFirstChild(),  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild(),  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild(),  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
503	[BUG]  [BUGGY]  switch(value.getFirstChild())||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild())||  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild())||  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
504	[BUG]  [BUGGY]  switch(value.getLastChild()  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild()  ||  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild()  ||  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
505	[BUG]  [BUGGY]  Switch(value.getFirstChild()  &&  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild()  &&  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild()  &&  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
506	[BUG]  [BUGGY]  switch(locals.getFirstChild()  ||  value.contains(locals.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getFirstChild()  ||  value.contains(locals.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getFirstChild()  ||  value.contains(locals.getLastChild()))  {	  switch(value.getFirstChild()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
507	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
508	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
509	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
510	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
511	[BUG]  [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
512	[BUG]  [BUGGY]  switch(value.getType()  <  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
513	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
514	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
515	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
516	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
517	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
518	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  ||  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  ||  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  ||  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
519	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
520	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
521	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isExpressionNode(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isExpressionNode(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isExpressionNode(value))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
522	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
523	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
524	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLocalValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
525	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
526	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
527	[BUG]  [BUGGY]  switch(value.getType(),  Locals.HARD)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locals.HARD)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locals.HARD)  {	  switch(value.getType(),    values)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
528	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.contains(value.getLastChild()))  {	  switch(value.getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
529	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getLastChild()))  {	  switch(value.getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
530	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getChildCount()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getChildCount()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getChildCount()))  {	  switch(value.getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
531	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {	  Switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
532	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  Switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
533	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.NAME)  {	  Switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
534	[BUG]  [BUGGY]  Node  locals  =  value.getLastChild();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  value.getLastChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  value.getLastChild();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
535	[BUG]  [BUGGY]  Node  locals  =  value.getNext();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  value.getNext();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  value.getNext();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
536	[BUG]  [BUGGY]  Node  locals  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  node.getFirstChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  node.getFirstChild();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
537	[BUG]  [BUGGY]  Node  locals  =  value.getOwnSide();  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  value.getOwnSide();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  value.getOwnSide();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
538	[BUG]  [BUGGY]  Node  locals  =  value.getOwnerChild();  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  value.getOwnerChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  value.getOwnerChild();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
539	[BUG]  [BUGGY]  Node  locals  =  value.getOwnStatement();  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  value.getOwnStatement();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  value.getOwnStatement();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
540	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext(),  locals)  {	  switch(value.getFirstChild().getNext())    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
541	[BUG]  [BUGGY]  switch(value.getFirstChild().getLastChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getLastChild().getNext())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getLastChild().getNext())  {	  switch(value.getFirstChild().getNext())    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
542	[BUG]  [BUGGY]  switch(value.getLastChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild().getNext())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getNext())  {	  switch(value.getFirstChild().getNext())    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
543	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext()  ||  value.getLastChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext()  ||  value.getLastChild().getNext())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext()  ||  value.getLastChild().getNext())  {	  switch(value.getFirstChild().getNext())    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
544	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext()  &&  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext()  &&  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext()  &&  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getNext())    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
545	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
546	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
547	[BUG]  [BUGGY]  switch(value.getType()  >=  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >=  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >=  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
548	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
549	[BUG]  [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
550	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
551	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
552	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
553	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
554	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
555	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
556	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
557	[BUG]  [BUGGY]  switch(value.getLastChild().getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild().getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
558	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
559	[BUG]  [BUGGY]  Switch(value.getType()  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  NodeUtil.isImmutableValue(value))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
560	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isLocalValue(value))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
561	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignableFrom(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignableFrom(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignableFrom(value))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
562	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isVar(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isVar(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isVar(value))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
563	[BUG]  [BUGGY]  Node  value  =  value.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  value.getFirstChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  value.getFirstChild();	  Node    value    =    locals.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
564	[BUG]  [BUGGY]  Node  value  =  locals.getLastChild();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getLastChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getLastChild();	  Node    value    =    locals.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
565	[BUG]  [BUGGY]  Node  value  =  this.locals.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  this.locals.getFirstChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  this.locals.getFirstChild();	  Node    value    =    locals.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
566	[BUG]  [BUGGY]  Node  value  =  locales.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locales.getFirstChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locales.getFirstChild();	  Node    value    =    locals.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
567	[BUG]  [BUGGY]  Node  value  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  node.getFirstChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  node.getFirstChild();	  Node    value    =    locals.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
568	[BUG]  [BUGGY]  Node  value  =  values.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  values.getFirstChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  values.getFirstChild();	  Node    value    =    locals.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
569	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    ||    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
570	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
571	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
572	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isEmpty()  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isEmpty()  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isEmpty()  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
573	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
574	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getType()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getType()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value.getType()))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
575	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isExpressionNode(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isExpressionNode(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isExpressionNode(value))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
576	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
577	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
578	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
579	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isName(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isName(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isName(value.getLastChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
580	[BUG]  [BUGGY]  switch(value  ==  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value  ==  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value  ==  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value!=    null    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
581	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value!=    null    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
582	[BUG]  [BUGGY]  switch(value!=  null  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value!=  null  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value!=  null  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value!=    null    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
583	[BUG]  [BUGGY]  switch(value  ==  null  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value  ==  null  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value  ==  null  ||  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value!=    null    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
584	[BUG]  [BUGGY]  switch(value!=  null  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value!=  null  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value!=  null  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value!=    null    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
585	[BUG]  [BUGGY]  switch(value  ==  null  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value  ==  null  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value  ==  null  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value!=    null    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
586	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
587	[BUG]  [BUGGY]  switch(value.getFirstChild(),  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild(),  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild(),  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
588	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  ||  value.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  value.getLastChild().getType()!=  Token.FUNCTION)  {	  switch(value.getFirstChild()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
589	[BUG]  [BUGGY]  switch(value.getFirstChild()  /  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  /  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  /  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
590	[BUG]  [BUGGY]  switch(value.getFirstChild()  /&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  /&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  /&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
591	[BUG]  [BUGGY]  Switch(value.getFirstChild()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
592	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignableFrom(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignableFrom(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignableFrom(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignableFrom(value))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
593	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignableFrom(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignableFrom(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignableFrom(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignableFrom(value))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
594	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignableFrom(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignableFrom(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignableFrom(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignableFrom(value))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
595	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignableFrom(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isAssignableFrom(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isAssignableFrom(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignableFrom(value))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
596	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
597	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
598	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
599	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
600	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isExpressionNode(value))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
601	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(value))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
602	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
603	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
604	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
605	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
606	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
607	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
608	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
609	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
610	[BUG]  [BUGGY]  switch(value.getLastChild()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
611	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
612	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
613	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  NodeUtil.isAssignableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
614	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
615	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
616	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()!=  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()!=  Token.NAME)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
617	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  locals.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  locals.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  locals.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
618	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  /  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  /  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  /  ||  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
619	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()!=  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()!=  Token.NAME)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
620	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  ||  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
621	[BUG]  [BUGGY]  switch(value.getType()!=  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
622	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isExpressionNode(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isExpressionNode(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isExpressionNode(value.getString()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
623	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isName(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isName(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isName(value.getString()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
624	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLocalValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLocalValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLocalValue(value.getString()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
625	[BUG]  [BUGGY]  Node  value  =  locals.getLastChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getLastChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getLastChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
626	[BUG]  [BUGGY]  Node  value  =  locales.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locales.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locales.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
627	[BUG]  [BUGGY]  Predicate  <  Node>  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
628	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locales);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locales);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value.getFirstChild(),  locales);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
629	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals));  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals));  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals));	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals));    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
630	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals));    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
631	[BUG]  [BUGGY]  NodeUtil.isLocalValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLocalValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLocalValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals));    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
632	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals));  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals));  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals));	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals));    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
633	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locales));  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locales));  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locales));	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals));    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
634	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.contains(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.contains(value.getLocalName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.contains(value.getLocalName()))  {	  switch(value.getType()    ||    locals.contains(value.getLocalName()))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
635	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getLocalName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getLocalName()))  {	  switch(value.getType()    ||    locals.contains(value.getLocalName()))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
636	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsKey(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.containsKey(value.getLocalName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsKey(value.getLocalName()))  {	  switch(value.getType()    ||    locals.contains(value.getLocalName()))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
637	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getName()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getName()))  {	  switch(value.getType()    ||    locals.contains(value.getLocalName()))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
638	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
639	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
640	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
641	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
642	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
643	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
644	[BUG]  [BUGGY]  Node  value  =  locals.getLastChild();  break;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getLastChild();  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getLastChild();  break;	  Node    value    =    locals.getFirstChild();    break;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
645	[BUG]  [BUGGY]  Node  value  =  value.getFirstChild();  break;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  value.getFirstChild();  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  value.getFirstChild();  break;	  Node    value    =    locals.getFirstChild();    break;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
646	[BUG]  [BUGGY]  Node  value  =  node.getFirstChild();  break;  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  node.getFirstChild();  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  node.getFirstChild();  break;	  Node    value    =    locals.getFirstChild();    break;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
647	[BUG]  [BUGGY]  Node  value  =  locales.getFirstChild();  break;  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locales.getFirstChild();  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locales.getFirstChild();  break;	  Node    value    =    locals.getFirstChild();    break;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
648	[BUG]  [BUGGY]  Node  value  =  this.locals.getFirstChild();  break;  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  this.locals.getFirstChild();  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  this.locals.getFirstChild();  break;	  Node    value    =    locals.getFirstChild();    break;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
649	[BUG]  [BUGGY]  Node  value  =  vars.getFirstChild();  break;  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  vars.getFirstChild();  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  vars.getFirstChild();  break;	  Node    value    =    locals.getFirstChild();    break;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
650	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
651	[BUG]  [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLiteralValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLiteralValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
652	[BUG]  [BUGGY]  NodeUtil.isLocalValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isLocalValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isLocalValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
653	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locales);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locales);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locales);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
654	[BUG]  [BUGGY]  Switch(value.getType(),  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals.contains(value))  {	  Switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
655	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getType()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getType()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.contains(value.getType()))  {	  Switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
656	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.contains(value.getNext()))  {	  Switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
657	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.containsKey(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.containsKey(value))  {	  Switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
658	[BUG]  [BUGGY]  Switch(locals.getType()  &&  value.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(locals.getType()  &&  value.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(locals.getType()  &&  value.contains(value))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
659	[BUG]  [BUGGY]  Switch(locals.getType()  &&  value.contains(locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(locals.getType()  &&  value.contains(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(locals.getType()  &&  value.contains(locals))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
660	[BUG]  [BUGGY]  Switch(value.getType()  ||  locales.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locales.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locales.contains(value))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
661	[BUG]  [BUGGY]  Switch(value.getType()  ||  Locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  Locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  Locals.contains(value))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
662	[BUG]  [BUGGY]  switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
663	[BUG]  [BUGGY]  switch(value.getType(),  values  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  values  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  values  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
664	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLocalValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
665	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLocalValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
666	[BUG]  [BUGGY]  switch(value.getType()  &&  locals.contains(value.getType()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  locals.contains(value.getType()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  locals.contains(value.getType()))  {	  switch(value.getType()    ||    locals.contains(value.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
667	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsKey(value.getType()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.containsKey(value.getType()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsKey(value.getType()))  {	  switch(value.getType()    ||    locals.contains(value.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
668	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getType()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getType()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getType()))  {	  switch(value.getType()    ||    locals.contains(value.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
669	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getType(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getType(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getType(),  locals))  {	  switch(value.getType()    ||    locals.contains(value.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
670	[BUG]  [BUGGY]  switch(value.getFirstChild(),  locales)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild(),  locales)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild(),  locales)  {	  switch(value.getFirstChild(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
671	[BUG]  [BUGGY]  switch(value.getFirstChild(),  values)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild(),  values)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild(),  values)  {	  switch(value.getFirstChild(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
672	[BUG]  [BUGGY]  switch(value.getFirstChild(),  Locale.ENGLISH)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild(),  Locale.ENGLISH)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild(),  Locale.ENGLISH)  {	  switch(value.getFirstChild(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
673	[BUG]  [BUGGY]  switch(value.getFirstChild(),  Locale.US)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild(),  Locale.US)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild(),  Locale.US)  {	  switch(value.getFirstChild(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
674	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
675	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
676	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
677	[BUG]  [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
678	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
679	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
680	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
681	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
682	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
683	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
684	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
685	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
686	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
687	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
688	[BUG]  [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())&&  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
689	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
690	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
691	[BUG]  [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Token.NAME  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Token.NAME  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
692	[BUG]  [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >  0  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  0  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
693	[BUG]  [BUGGY]  switch(value.getType()  &&  Locale.US.ASSIGN.equals(locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  Locale.US.ASSIGN.equals(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  Locale.US.ASSIGN.equals(locals))  {	  switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
694	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
695	[BUG]  [BUGGY]  switch(value.getType(),  Locals.US_ASCII)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locals.US_ASCII)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locals.US_ASCII)  {	  switch(value.getType(),    values)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
696	[BUG]  [BUGGY]  switch(value.getType(),  locals),  false)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals),  false)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals),  false)  {	  switch(value.getType(),    locals,    true)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
697	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
698	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals!=  null  &&  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals!=  null  &&  locals.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals!=  null  &&  locals.isEmpty())  {	  Switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
699	[BUG]  [BUGGY]  Switch(value.getType()  ||  value.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  value.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  value.isEmpty())  {	  Switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
700	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.equals(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.equals(value.getLocalName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.equals(value.getLocalName()))  {	  Switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
701	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
702	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
703	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
704	[BUG]  [BUGGY]  Switch(value.getType()  ||  Locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  Locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  Locals.contains(value.getString()))  {	  Switch(value.getType()    ||    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
705	[BUG]  [BUGGY]  switch(value.getFirstChild()).caseToken.AND  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()).caseToken.AND  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()).caseToken.AND  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getFirstChild()).caseToken.AND)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
706	[BUG]  [BUGGY]  switch(value.getFirstChild()).caseToken.AND  ||  evaluatesToLocalValue(value.getLastChild(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()).caseToken.AND  ||  evaluatesToLocalValue(value.getLastChild(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()).caseToken.AND  ||  evaluatesToLocalValue(value.getLastChild(),  locals)  {	  switch(value.getFirstChild()).caseToken.AND)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
707	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType()  &&  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType()  &&  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType()  &&  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
708	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())&&  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())&&  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())&&  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
709	[BUG]  [BUGGY]  switch(value.getFirstChild().getLastChild())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getLastChild())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getLastChild())  {	  switch(value.getFirstChild().getNext())    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
710	[BUG]  [BUGGY]  switch(value.getFirstChild().getString())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getString())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getString())  {	  switch(value.getFirstChild().getNext())    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
711	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
712	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
713	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
714	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLiteralValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
715	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isLiteralValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLiteralValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
716	[BUG]  [BUGGY]  Switch(value.getType())||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType())||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType())||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
717	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
718	[BUG]  [BUGGY]  Switch(value  ==  null  ||  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value  ==  null  ||  locals.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value  ==  null  ||  locals.isEmpty())  {	  Switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
719	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locals!=  null)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals!=  null)  {	  Switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
720	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
721	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
722	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString())||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString())||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(value.getString())||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
723	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isExpressionNode(value))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isExpressionNode(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isExpressionNode(value))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
724	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isFunctionDeclaration(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isFunctionDeclaration(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isFunctionDeclaration(value))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
725	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getfirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getfirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getfirstChild()))  {	  switch(value.getType()    <    Token.NAME    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
726	[BUG]  [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())&&  NodeUtil.isAssignmentOp(value.getString())&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
727	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
728	[BUG]  [BUGGY]  switch(value  ==  null?  false  :  value.getLastChild())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value  ==  null?  false  :  value.getLastChild())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value  ==  null?  false  :  value.getLastChild())  {	  switch(value.getLastChild())    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
729	[BUG]  [BUGGY]  switch(value!=  null  &&  value.getLastChild())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value!=  null  &&  value.getLastChild())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value!=  null  &&  value.getLastChild())  {	  switch(value.getLastChild())    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
730	[BUG]  [BUGGY]  switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.NAME)  {	  switch(value.getLastChild())    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
731	[BUG]  [BUGGY]  switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.STRING)  {	  switch(value.getLastChild())    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
732	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
733	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals));	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals));    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
734	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals));  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals));  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals));	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals));    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
735	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals.contains(locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locals.contains(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals.contains(locals))  {	  switch(value.getType()    ||    locals.contains(locals))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
736	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getLocalPart()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getLocalPart()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getLocalPart()))  {	  switch(value.getType()    ||    locals.contains(locals))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
737	[BUG]  [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
738	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
739	[BUG]  [BUGGY]  Switch(value.getType()  &&  locales.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locales.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locales.isEmpty())  {	  switch(value.getType()    ||    locales.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
740	[BUG]  [BUGGY]  switch(value.getType()  ||  Locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  Locals.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  Locals.isEmpty())  {	  switch(value.getType()    ||    locales.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
741	[BUG]  [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getString()))  {	  switch(value.getType(),    locals    ||    values.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
742	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  values.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  values.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH  ||  values.contains(value.getString()))  {	  switch(value.getType(),    locals    ||    values.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
743	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
744	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.mayHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.mayHaveSideEffects(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.mayHaveSideEffects(value))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
745	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals.contains(value.getLastChild()))  {	  switch(value.getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
746	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value,  locals);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  return  evaluatesToLocalValue(value,  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value,  locals);	  return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
747	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals,  values);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals,  values);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value.getFirstChild(),  locals,  values);	  return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
748	[BUG]  [BUGGY]  Switch(value!=  null  &&  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value!=  null  &&  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value!=  null  &&  locals.contains(value))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
749	[BUG]  [BUGGY]  Switch(value.getType())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType())  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
750	[BUG]  [BUGGY]  switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales  ||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
751	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locales);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locales);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getLastChild(),  locales);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals)||    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
752	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
753	[BUG]  [BUGGY]  switch(value.getFirstChild(),  Locals.US_ASCII)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild(),  Locals.US_ASCII)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild(),  Locals.US_ASCII)  {	  switch(value.getFirstChild(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
754	[BUG]  [BUGGY]  switch(value.getFirstChild()  >  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  >  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  >  0  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
755	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
756	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals.contains(value.getType()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locals.contains(value.getType()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals.contains(value.getType()))  {	  switch(value.getType()    ||    locals.contains(value.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
757	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
758	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
759	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_STATEMENT  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_STATEMENT  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.FUNCTION_STATEMENT  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
760	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
761	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignableFrom(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignableFrom(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignableFrom(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignableFrom(value))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
762	[BUG]  [BUGGY]  Switch(value.getType()  &&  locales.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locales.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locales.contains(value))  {	  switch(value.getType()    ||    locales.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
763	[BUG]  [BUGGY]  switch(value.getType()  ||  Locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  Locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  Locals.contains(value))  {	  switch(value.getType()    ||    locales.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
764	[BUG]  [BUGGY]  Node  value  =  values.getFirstChild();  break;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  values.getFirstChild();  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  values.getFirstChild();  break;	  Node    value    =    locals.getFirstChild();    break;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
765	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isName(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isName(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isName(value.getString()))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
766	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isLocalValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isLocalValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isLocalValue(value.getString()))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
767	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
768	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
769	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild())||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild())||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild())||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
770	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild())||  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild())||  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild())||  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
771	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
772	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  value.getValue();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  locals  =  value.getValue();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  value.getValue();	  Predicate    <    Node>    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
773	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  value.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  locals  =  value.getFirstChild().getNext();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  value.getFirstChild().getNext();	  Predicate    <    Node>    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
774	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
775	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableFrom(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableFrom(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableFrom(value.getLastChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
776	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isName(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isName(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isName(value.getString()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
777	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getString()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
778	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {	  switch(value.getType()    ==    Token.BLOCK    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
779	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
780	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
781	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ELEMENT_NODE  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ELEMENT_NODE  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ELEMENT_NODE  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
782	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.SOURCENAME_PROP  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.SOURCENAME_PROP  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.SOURCENAME_PROP  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
783	[BUG]  [BUGGY]  Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
784	[BUG]  [BUGGY]  Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.NAME)  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
785	[BUG]  [BUGGY]  Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.STRING)  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
786	[BUG]  [BUGGY]  Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.THIS)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.THIS)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.THIS)  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
787	[BUG]  [BUGGY]  Switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
788	[BUG]  [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getNext(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getNext(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getNext(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
789	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
790	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
791	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
792	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.OBJECTLIT  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.OBJECTLIT  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.OBJECTLIT  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
793	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
794	[BUG]  [BUGGY]  Switch(locals.getType()  &&  value.getString().equals(locals.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(locals.getType()  &&  value.getString().equals(locals.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(locals.getType()  &&  value.getString().equals(locals.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
795	[BUG]  [BUGGY]  Switch(value!=  null  &&  value.getType()  ==  Token.NAME  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value!=  null  &&  value.getType()  ==  Token.NAME  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value!=  null  &&  value.getType()  ==  Token.NAME  &&  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
796	[BUG]  [BUGGY]  Switch(value!=  null  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value!=  null  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value!=  null  &&  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
797	[BUG]  [BUGGY]  Switch(value  ==  null  ||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value  ==  null  ||  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value  ==  null  ||  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
798	[BUG]  [BUGGY]  switch(value.getLastChild().getType()  &&  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild().getType()  &&  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getType()  &&  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getLastChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
799	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
800	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType()  ||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
801	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isVar(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isVar(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isVar(value))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
802	[BUG]  [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
803	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
804	[BUG]  [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())&&  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())&&  NodeUtil.isAssignmentOp(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
805	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value);  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value);  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value);  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
806	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value,  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value,  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value,  locals));  return  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
807	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
808	[BUG]  [BUGGY]  Switch(value.getFirstChild()  &&  value.getLastChild().getString().equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild()  &&  value.getLastChild().getString().equals( "   "))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild()  &&  value.getLastChild().getString().equals( "   "))  {	  switch(value.getFirstChild()    ||    value.getLastChild().getString().equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
809	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
810	[BUG]  [BUGGY]  Node  value  =  Locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  Locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  Locals.getFirstChild();  return  evaluatesToLocalValue(value.getLastChild(),  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
811	[BUG]  [BUGGY]  Node  locals  =  value.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  value.getFirstChild().getNext();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  value.getFirstChild().getNext();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
812	[BUG]  [BUGGY]  Node  locals  =  value.getParent();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  value.getParent();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  value.getParent();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
813	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
814	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    break;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
815	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  break;	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    break;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
816	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH  |  Locale.US)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH  |  Locale.US)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH  |  Locale.US)  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
817	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH).restrictByNotNullOrUndefined()  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH).restrictByNotNullOrUndefined()  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH).restrictByNotNullOrUndefined()  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
818	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH  |  Locale.US_ASCII)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH  |  Locale.US_ASCII)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH  |  Locale.US_ASCII)  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
819	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH).booleanValue()  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH).booleanValue()  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH).booleanValue()  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
820	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getChildCount()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getChildCount()  ==  2)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  value.getChildCount()  ==  2)  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
821	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getFirstChild()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getFirstChild()  ==  null)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  value.getFirstChild()  ==  null)  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
822	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getChildCount()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getChildCount()  ==  1)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  value.getChildCount()  ==  1)  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
823	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getLastChild()!=  locals)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getLastChild()!=  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  value.getLastChild()!=  locals)  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
824	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getLastChild()  ==  locals)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getLastChild()  ==  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  value.getLastChild()  ==  locals)  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
825	[BUG]  [BUGGY]  Switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals  &&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
826	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH  ||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
827	[BUG]  [BUGGY]  Switch(locals.getType()  ||  value.contains(locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(locals.getType()  ||  value.contains(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(locals.getType()  ||  value.contains(locals))  {	  Switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
828	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.mayHaveSideEffects(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
829	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isLocalValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isLocalValue(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
830	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getfirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getfirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isLocalValue(value.getfirstChild()))  {	  switch(value.getType()    <    Token.NAME    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
831	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
832	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value,  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
833	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.mayHaveSideEffects(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value,    locals)||    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
834	[BUG]  [BUGGY]  Switch(value.getType()  ==  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
835	[BUG]  [BUGGY]  Switch(value.getType()  &&  locales.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locales.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locales.contains(value.getString()))  {	  switch(value.getType()    ||    locales.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
836	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.contains(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.contains(value.getLocalName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.contains(value.getLocalName()))  {	  switch(value.getType()    ||    locales.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
837	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isName(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isName(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isName(value))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
838	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isSimpleValue(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isSimpleValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isSimpleValue(value))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
839	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
840	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
841	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
842	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
843	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isFunctionDeclaration(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isFunctionDeclaration(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isFunctionDeclaration(value.getString()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
844	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getLocalName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getLocalName()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
845	[BUG]  [BUGGY]  switch(value.getType()  &&  Locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  Locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  Locals.contains(value.getString()))  {	  switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
846	[BUG]  [BUGGY]  switch(value.getType()  ||  Locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  Locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  Locals.contains(value.getString()))  {	  switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
847	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType()  &&  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
848	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())||  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())||  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())||  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
849	[BUG]  [BUGGY]  Switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getType()  ||  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
850	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
851	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getNodeType()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getNodeType()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getNodeType()))  {	  switch(value.getType()    ||    locals.contains(value.getLocalName()))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
852	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
853	[BUG]  [BUGGY]  switch(value.getType())||  locals.containsKey(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())||  locals.containsKey(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())||  locals.containsKey(value.getString()))  {	  switch(value.getType()    ||    locals.containsKey(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
854	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
855	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value.getString()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
856	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getFirstChild().getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
857	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild()))  {	  switch(value.getFirstChild().getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
858	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.FUNCTION  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
859	[BUG]  [BUGGY]  switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
860	[BUG]  [BUGGY]  switch(value.getType()  +  NodeUtil.isExpressionNode(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  +  NodeUtil.isExpressionNode(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  +  NodeUtil.isExpressionNode(value.getString()))  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
861	[BUG]  [BUGGY]  switch(value.getType()  +  NodeUtil.isName(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  +  NodeUtil.isName(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  +  NodeUtil.isName(value.getString()))  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
862	[BUG]  [BUGGY]  switch(value!=  null  &&  value.getFirstChild()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value!=  null  &&  value.getFirstChild()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value!=  null  &&  value.getFirstChild()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
863	[BUG]  [BUGGY]  Switch(value.getFirstChild()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild()  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
864	[BUG]  [BUGGY]  switch(value.getFirstChild()  &&  value.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  &&  value.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  &&  value.getLastChild().getType()!=  Token.FUNCTION)  {	  switch(value.getFirstChild()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
865	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
866	[BUG]  [BUGGY]  switch(value.getFirstChild()  >  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  >  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  >  0  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
867	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
868	[BUG]  [BUGGY]  switch(value.getFirstChild().getLastChild().getType())  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getLastChild().getType())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getLastChild().getType())  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
869	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
870	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext().getType()  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext().getType()  ||  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext().getType()  ||  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
871	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isExpressionNode(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isExpressionNode(value.getFirstChild()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
872	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getQualifiedName())&&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getQualifiedName())&&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getQualifiedName())&&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    ||    locals.contains(value.getQualifiedName()))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
873	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals.contains(value.getQualifiedName()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locals.contains(value.getQualifiedName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals.contains(value.getQualifiedName()))  {	  switch(value.getType()    ||    locals.contains(value.getQualifiedName()))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
874	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getQualifiedName())&&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getQualifiedName())&&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getQualifiedName())&&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()    ||    locals.contains(value.getQualifiedName()))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
875	[BUG]  [BUGGY]  switch(value.getType(),  locals),  true)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals),  true)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals),  true)  {	  switch(value.getType(),    locals,    false)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
876	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
877	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isUnknown())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isUnknown())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isUnknown())  {	  switch(value.getType()    ||    value.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
878	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isNullOrEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isNullOrEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isNullOrEmpty())  {	  switch(value.getType()    ||    value.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
879	[BUG]  [BUGGY]  switch(locals.getType()  &&  value.contains(locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  value.contains(locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  value.contains(locals))  {	  switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
880	[BUG]  [BUGGY]  switch(value.getType()  &&  Locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  Locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  Locals.contains(value))  {	  switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
881	[BUG]  [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())||  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
882	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
883	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  ||  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  ||  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ELEMENT  ||  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
884	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isName(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isName(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isName(value.getFirstChild()))  {	  switch(value.getType()    ||    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
885	[BUG]  [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  value.isEmpty()  &&  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  value.isEmpty()  &&  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
886	[BUG]  [BUGGY]  Switch(value.getType()  &&  locals.contains(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  &&  locals.contains(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  &&  locals.contains(value.getNext()))  {	  switch(value.getType()    ||    locals.contains(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
887	[BUG]  [BUGGY]  switch(value.getType()  &  NodeUtil.mayHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &  NodeUtil.mayHaveSideEffects(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &  NodeUtil.mayHaveSideEffects(value))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
888	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getString())||  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType(),    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
889	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getString())||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType(),    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
890	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  Locals.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  Locals.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getString())||  Locals.isImmutableValue(value.getLastChild()))  {	  switch(value.getType(),    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
891	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.THIS  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
892	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ELEMENT_NODE  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ELEMENT_NODE  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ELEMENT_NODE  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
893	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.FUNCTION_STRING_REGEXP  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
894	[BUG]  [BUGGY]  Node  value  =  locals.getValue();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getValue();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getValue();	  Node    value    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
895	[BUG]  [BUGGY]  Node  value  =  value.getValue();  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  value.getValue();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  value.getValue();	  Node    value    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
896	[BUG]  [BUGGY]  Node  value  =  value.getNext();  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  value.getNext();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  value.getNext();	  Node    value    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
897	[BUG]  [BUGGY]  switch(value!=  null  &&  value.getFirstChild()  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value!=  null  &&  value.getFirstChild()  ||  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value!=  null  &&  value.getFirstChild()  ||  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
898	[BUG]  [BUGGY]  switch(value.getFirstChild())&&  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild())&&  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild())&&  locals.contains(value.getLastChild()))  {	  switch(value.getFirstChild()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
899	[BUG]  [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  NodeUtil.isAssignmentOp(value.getLastChild()))  {	  switch(value.getType(),    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
900	[BUG]  [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType(),    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
901	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
902	[BUG]  [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  &&  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  &&  NodeUtil.isImmutableValue(value,  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
903	[BUG]  [BUGGY]  switch(value.getFirstChild()!=  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()!=  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()!=  null  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value!=    null    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
904	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsKey(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.containsKey(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsKey(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    ||    locals.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
905	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsKey(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.containsKey(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsKey(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    ||    locals.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
906	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsKey(value)&&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.containsKey(value)&&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsKey(value)&&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getType()    ||    locals.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
907	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
908	[BUG]  [BUGGY]  switch(locals.getType()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType()  &&  NodeUtil.isLocalValue(value.getLastChild()))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
909	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getLastChild()))  {	  switch(value.getType()    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
910	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  +  1  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  +  1  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  +  1  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
911	[BUG]  [BUGGY]  switch(value.getFirstChild()  +  1  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  +  1  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  +  1  ||  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getFirstChild()    ||    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
912	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.contains(value.getFirstChild()))  {	  switch(value.getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
913	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
914	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
915	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.getAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.getAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.getAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
916	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
917	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
918	[BUG]  [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
919	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
920	[BUG]  [BUGGY]  switch(value.getType()  ||  values.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  values.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  values.isEmpty())  {	  switch(value.getType()    ||    locales.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
921	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.contains(value.getLastChild()))  {	  Switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
922	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild()  ==  null)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.isEmpty()  &&  value.getFirstChild()  ==  null)  {	  Switch(value.getType()    ||    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
923	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isVarDeclaration(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isVarDeclaration(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isVarDeclaration(value.getString()))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
924	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isVarDeclaration(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isVarDeclaration(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isVarDeclaration(value.getString()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
925	[BUG]  [BUGGY]  switch(value.getType(),  Locals.DECEMBER,  true)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locals.DECEMBER,  true)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locals.DECEMBER,  true)  {	  switch(value.getType(),    locals,    true)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
926	[BUG]  [BUGGY]  switch(value.getType(),  Locals.HARD,  true)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locals.HARD,  true)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locals.HARD,  true)  {	  switch(value.getType(),    locals,    true)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
927	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  ||  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  ||  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  ||  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
928	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
929	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
930	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLocalValue(value))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
931	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())  <  Node>  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())  <  Node>  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())  <  Node>  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
932	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())&&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())&&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())&&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
933	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getFirstChild())&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getFirstChild())&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getFirstChild())&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()!=    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
934	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  if(value!=  null)  {  return  evaluatesToLocalValue(value,  locals);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getFirstChild();  if(value!=  null)  {  return  evaluatesToLocalValue(value,  locals);  }  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  if(value!=  null)  {  return  evaluatesToLocalValue(value,  locals);  }	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value,    locals);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
935	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getLastChild(),  locals);	  return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
936	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals)&&  NodeUtil.isImmutableValue(value.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  return  evaluatesToLocalValue(value.getFirstChild(),  locals)&&  NodeUtil.isImmutableValue(value.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	return  evaluatesToLocalValue(value.getFirstChild(),  locals)&&  NodeUtil.isImmutableValue(value.getLastChild(),  locals);	  return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
937	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
938	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
939	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
940	[BUG]  [BUGGY]  switch(value.getType()  >=  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >=  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >=  NodeUtil.isImmutableValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
941	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild()),  locals)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild()),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isLocalValue(value.getFirstChild()),  locals)  {	  Switch(value.getType()    ||    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
942	[BUG]  [BUGGY]  switch(value.getFirstChild().getString(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getString(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getString(),  locals)  {	  switch(value.getFirstChild(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
943	[BUG]  [BUGGY]  switch(value.getFirstChild().cloneTree(),  locals)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().cloneTree(),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().cloneTree(),  locals)  {	  switch(value.getFirstChild(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
944	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()),  locals)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()),  locals)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()),  locals)  {	  switch(value.getFirstChild(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
945	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.mayHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.mayHaveSideEffects(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.mayHaveSideEffects(value))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
946	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.mayHaveSideEffects(value))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
947	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.mayHaveSideEffects(value))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
948	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
949	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
950	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  &&  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()    <    Token.NAME    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
951	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLiteralValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLiteralValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
952	[BUG]  [BUGGY]  switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
953	[BUG]  [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getString(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getString(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  ||  evaluatesToLocalValue(value.getString(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
954	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
955	[BUG]  [BUGGY]  switch(value.getFirstChild().cloneTree()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().cloneTree()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().cloneTree()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
956	[BUG]  [BUGGY]  switch(value.getFirstChild()!=  null  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()!=  null  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()!=  null  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
957	[BUG]  [BUGGY]  switch(value.getFirstChild().getString()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getString()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getString()  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
958	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
959	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
960	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.getAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.getAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.getAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
961	[BUG]  [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild())||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
962	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
963	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
964	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
965	[BUG]  [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >>  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
966	[BUG]  [BUGGY]  switch(value.getType()  >=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
967	[BUG]  [BUGGY]  switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
968	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
969	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext().getType()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild().getNext().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
970	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
971	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
972	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.getAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.getAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.getAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
973	[BUG]  [BUGGY]  switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
974	[BUG]  [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >>  NodeUtil.isAssignmentOp(value.getString())||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getString())||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
975	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
976	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
977	[BUG]  [BUGGY]  switch(value.getFirstChild()!=  null  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()!=  null  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()!=  null  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
978	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.CATCH  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ==  Token.CATCH  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ==  Token.CATCH  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
979	[BUG]  [BUGGY]  switch(value.getFirstChild().getString()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getString()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getString()  &&  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getFirstChild()    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
980	[BUG]  [BUGGY]  switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getFirstChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getFirstChild(),  locales))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getFirstChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
981	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
982	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
983	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
984	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  ||  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  ||  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  ||  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
985	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  locals.isEmpty()  &&  value.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
986	[BUG]  [BUGGY]  switch(value.getType()  [Delete]  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  [Delete]  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  [Delete]  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
987	[BUG]  [BUGGY]  switch(value.getType()  <  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    &    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
988	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.VAR  &&  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
989	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.NAME  &&  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
990	[BUG]  [BUGGY]  Switch(value.getType()!=  null  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()!=  null  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()!=  null  &&  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
991	[BUG]  [BUGGY]  Switch(value.getType()!=  JSC_PROPERTY_NAME_FN  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()!=  JSC_PROPERTY_NAME_FN  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()!=  JSC_PROPERTY_NAME_FN  &&  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
992	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.STRING  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.STRING  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.STRING  &&  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
993	[BUG]  [BUGGY]  Switch(value.getType()!=  JSC_PROPERTY_NAME_FN)&&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()!=  JSC_PROPERTY_NAME_FN)&&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()!=  JSC_PROPERTY_NAME_FN)&&  locals.contains(value.getString()))  {	  Switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
994	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
995	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
996	[BUG]  [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >>  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
997	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
998	[BUG]  [BUGGY]  switch(value.getType()  >=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
999	[BUG]  [BUGGY]  switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getLastChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1000	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  ||  NodeUtil.isImmutableValue(value.getFirstChild()))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1001	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext()  &&  NodeUtil.isImmutableValue(value.getFirstChild().getNext()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext()  &&  NodeUtil.isImmutableValue(value.getFirstChild().getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext()  &&  NodeUtil.isImmutableValue(value.getFirstChild().getNext()))  {	  switch(value.getFirstChild().getNext())    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1002	[BUG]  [BUGGY]  switch(value.getFirstChild().getNext()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getNext()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getNext()  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getFirstChild().getNext())    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1003	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.VAR  &&  locals.contains(value))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1004	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.NAME  &&  locals.contains(value))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1005	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.BLOCK  &&  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.BLOCK  &&  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.BLOCK  &&  locals.contains(value))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1006	[BUG]  [BUGGY]  Switch(value.getType()!=  locals  &&  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()!=  locals  &&  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()!=  locals  &&  locals.contains(value))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1007	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.VAR  ||  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.VAR  ||  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.VAR  ||  locals.contains(value))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1008	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.CATCH  &&  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.CATCH  &&  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.CATCH  &&  locals.contains(value))  {	  Switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1009	[BUG]  [BUGGY]  Switch(value.getType(),  locals  ||  values.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType(),  locals  ||  values.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType(),  locals  ||  values.contains(value.getString()))  {	  switch(value.getType(),    locals    ||    values.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1010	[BUG]  [BUGGY]  switch(value.getType(),  locals  ||  values.equals(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals  ||  values.equals(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals  ||  values.equals(value.getString()))  {	  switch(value.getType(),    locals    ||    values.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1011	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.containsValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsValue(value.getString()))  {	  switch(value.getType()    ||    locals.containsKey(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1012	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  ||  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  ||  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ELEMENT  ||  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1013	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.TYPE_OBJECT  ||  value.getType()  ==  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.TYPE_OBJECT  ||  value.getType()  ==  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.TYPE_OBJECT  ||  value.getType()  ==  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1014	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.TYPE_OBJECTLIT  ||  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.TYPE_OBJECTLIT  ||  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.TYPE_OBJECTLIT  ||  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1015	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty())  {	  Switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1016	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty())  {	  Switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1017	[BUG]  [BUGGY]  Switch(value.getType()).isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()).isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()).isEmpty())  {	  Switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1018	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals)&&  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1019	[BUG]  [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	NodeUtil.isImmutableValue(value.getFirstChild(),  locals)||  evaluatesToLocalValue(value.getFirstChild(),  locals);	  NodeUtil.isImmutableValue(value.getFirstChild(),    locals));    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1020	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1021	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1022	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  ||  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  ||  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  ||  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1023	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1024	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  locals.isEmpty()  &&  value.getLastChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getLastChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1025	[BUG]  [BUGGY]  Node  locals  =  value.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  value.removeFirstChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  value.removeFirstChild();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1026	[BUG]  [BUGGY]  Node  locals  =  this.value.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  this.value.getFirstChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  this.value.getFirstChild();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1027	[BUG]  [BUGGY]  Node  locals  =  value.cloneTree();  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  locals  =  value.cloneTree();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  locals  =  value.cloneTree();	  Node    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1028	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1029	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value.getString()))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1030	[BUG]  [BUGGY]  switch(value.getType()  ||  locales.contains(value.getLocalPart()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locales.contains(value.getLocalPart()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locales.contains(value.getLocalPart()))  {	  switch(value.getType()    ||    locales.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1031	[BUG]  [BUGGY]  switch(value.getType(),  Locals.VAR)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locals.VAR)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locals.VAR)  {	  switch(value.getType(),    locales)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1032	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  values.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  values.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getString())||  values.contains(value.getString()))  {	  switch(value.getType(),    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1033	[BUG]  [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  Locals.apply(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locals.contains(value.getString())||  Locals.apply(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locals.contains(value.getString())||  Locals.apply(value.getLastChild()))  {	  switch(value.getType(),    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1034	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  value.getString().length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  value.getString().length()  ==  0)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH  ||  value.getString().length()  ==  0)  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1035	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  value.getLastChild().getString().equals( "xmlns "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  value.getLastChild().getString().equals( "xmlns "))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH  ||  value.getLastChild().getString().equals( "xmlns "))  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1036	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  value.getLastChild().getString().equals( "__ "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  value.getLastChild().getString().equals( "__ "))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH  ||  value.getLastChild().getString().equals( "__ "))  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1037	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  value.getLastChild().getString().equals( "match "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  value.getLastChild().getString().equals( "match "))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH  ||  value.getLastChild().getString().equals( "match "))  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1038	[BUG]  [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  locals.apply(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.ENGLISH  ||  locals.apply(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.ENGLISH  ||  locals.apply(value))  {	  switch(value.getType(),    Locale.ENGLISH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1039	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  locals.contains(value))  {	  switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1040	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.contains(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.contains(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  locals.contains(value))  {	  switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1041	[BUG]  [BUGGY]  switch(value.getType()  >  OBJECT_METHODS_WITHOUT_SIDEEFFECTS)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >  OBJECT_METHODS_WITHOUT_SIDEEFFECTS)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >  OBJECT_METHODS_WITHOUT_SIDEEFFECTS)  {	  switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1042	[BUG]  [BUGGY]  switch(value.getType()).restrictByNotNullOrUndefined())  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()).restrictByNotNullOrUndefined())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()).restrictByNotNullOrUndefined())  {	  switch(value.getType()    &&    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1043	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  +  1  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  +  1  ||  value.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  +  1  ||  value.getLastChild().getType()  ==  Token.NAME)  {	  switch(value.getFirstChild().getType()    ||    value.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1044	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1045	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1046	[BUG]  [BUGGY]  switch(value.getType()!=  null  &&  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  null  &&  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  null  &&  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1047	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()    &&    NodeUtil.isImmutableValue(value,    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1048	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  locals.apply(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  locals.apply(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  locals.apply(value))  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1049	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getFirstChild()!=  null)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  value.getFirstChild()!=  null)  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1050	[BUG]  [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getString().equals(locals.getString()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locale.US  ||  value.getString().equals(locals.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locale.US  ||  value.getString().equals(locals.getString()))  {	  switch(value.getType(),    Locale.US)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1051	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.contains(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.contains(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.contains(value)&&  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  Switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1052	[BUG]  [BUGGY]  Switch(value.getType()  ||  locals.contains(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  locals.contains(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  locals.contains(value)&&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  Switch(value.getType()    ||    locals.contains(value))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1053	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1054	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  ||  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  ||  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  ||  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()!=    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1055	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()!=    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1056	[BUG]  [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value))  {	  switch(value.getType()!=    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1057	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isLocalValue(value))  {	  switch(value.getType()!=    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1058	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value,  locals))  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value,  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isImmutableValue(value,  locals))  {	  switch(value.getType()!=    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1059	[BUG]  [BUGGY]  switch(locals.getType())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(locals.getType())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(locals.getType())  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1060	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  value.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  locals  =  value.removeFirstChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  value.removeFirstChild();	  Predicate    <    Node>    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1061	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  values.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  locals  =  values.getFirstChild();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  values.getFirstChild();	  Predicate    <    Node>    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1062	[BUG]  [BUGGY]  Predicate  <  Node>  locals  =  value.cloneTree();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Predicate  <  Node>  locals  =  value.cloneTree();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Predicate  <  Node>  locals  =  value.cloneTree();	  Predicate    <    Node>    locals    =    value.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1063	[BUG]  [BUGGY]  switch(parent.getType()  &&  NodeUtil.isImmutableValue(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(parent.getType()  &&  NodeUtil.isImmutableValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(parent.getType()  &&  NodeUtil.isImmutableValue(value))  {	  switch(locals.getType()    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1064	[BUG]  [BUGGY]  switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getLastChild(),    locales))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1065	[BUG]  [BUGGY]  switch(value.getFirstChild().getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locales))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType(),  locals  ||  evaluatesToLocalValue(value.getLastChild(),  locales))  {	  switch(value.getFirstChild().getType(),    locals)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1066	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getString()))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1067	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  ||  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    ==    Token.VAR    ||    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
1068	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1069	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    ==    Token.VAR    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1070	[BUG]  [BUGGY]  Node  value  =  locals.cloneTree();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.cloneTree();  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.cloneTree();	  Node    value    =    locals.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1071	[BUG]  [BUGGY]  switch(value.getType()!=  Token.NAME  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.NAME  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.NAME  ||  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()!=    Token.NAME    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1072	[BUG]  [BUGGY]  switch(value.getType()  <  Node>&&  locals.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>&&  locals.isEmpty())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>&&  locals.isEmpty())  {	  switch(value.getType()    &&    locals.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1073	[BUG]  [BUGGY]  switch(value.getType()  +  NodeUtil.isLocalValue(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  +  NodeUtil.isLocalValue(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  +  NodeUtil.isLocalValue(value.getString()))  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1074	[BUG]  [BUGGY]  switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  +  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1075	[BUG]  [BUGGY]  switch(value.getType()  *  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  *  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  *  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    +    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1076	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1077	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isImmutableValue(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1078	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1079	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1080	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.mayHaveSideEffects(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1081	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.containsValue(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.containsValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.containsValue(value))  {	  switch(value.getType()    ||    locals.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1082	[BUG]  [BUGGY]  switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  locales  &&  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType(),    locals    ||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1083	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignableFrom(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignableFrom(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignableFrom(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignableFrom(value))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1084	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignableFrom(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignableFrom(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isAssignableFrom(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignableFrom(value))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1085	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignableFrom(value))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignableFrom(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isAssignableFrom(value))  {	  switch(value.getType()    &&    NodeUtil.isAssignableFrom(value))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1086	[BUG]  [BUGGY]  switch(value.getType())||  locals.contains(value.getQualifiedName()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType())||  locals.contains(value.getQualifiedName()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType())||  locals.contains(value.getQualifiedName()))  {	  switch(value.getType()    ||    locals.contains(value.getQualifiedName()))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
1087	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getQualifiedName()  +  1))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getQualifiedName()  +  1))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getQualifiedName()  +  1))  {	  switch(value.getType()    ||    locals.contains(value.getQualifiedName()))    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
1088	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ASSIGN  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ASSIGN  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ASSIGN  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1089	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ATTRIBUTE  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ATTRIBUTE  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ATTRIBUTE  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1090	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.TYPE_OBJECT  ||  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.TYPE_OBJECT  ||  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.TYPE_OBJECT  ||  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    <    Node>    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1091	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  locals.contains(value.getString()))  {	  switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1092	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  locals.contains(value.getString()))  {	  switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1093	[BUG]  [BUGGY]  switch(value.getType()!=  null  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  null  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  null  &&  locals.contains(value.getString()))  {	  switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1094	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  locals.contains(value.getString()))  {	  switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1095	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  locals.contains(value.getString()))  {	  switch(value.getType()    &&    locals.contains(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1096	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isLiteralValue(value.getLastChild()))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1097	[BUG]  [BUGGY]  Node  value  =  locals.get(value);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.get(value);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.get(value);	  Node    value    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1098	[BUG]  [BUGGY]  Node  value  =  locals.get(0);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.get(0);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.get(0);	  Node    value    =    Locale.getDefault();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1099	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1100	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isLocalValue(value.getFirstChild()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1101	[BUG]  [BUGGY]  switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.VAR)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value!=  null  &&  value.getFirstChild().getType()  ==  Token.VAR)  {	  switch(value!=    null    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1102	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(value.getLastChild()))  {	  switch(value.getType()    ==    Token.NAME    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1103	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isExpressionNode(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isExpressionNode(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.ASSIGN  &&  NodeUtil.isExpressionNode(value.getString()))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1104	[BUG]  [BUGGY]  switch(value.getType()  ||  locals.contains(value.getValue()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  locals.contains(value.getValue()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  locals.contains(value.getValue()))  {	  switch(value.getType()    ||    locals.contains(value.getType()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1105	[BUG]  [BUGGY]  switch(value.getFirstChild()  ||  locales.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild()  ||  locales.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild()  ||  locales.contains(value.getLastChild()))  {	  switch(value.getFirstChild()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1106	[BUG]  [BUGGY]  switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getFirstChild()))  {	  switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
1107	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignableFrom(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isImmutableValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1108	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isLiteralValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isLiteralValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isLiteralValue(value))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1109	[BUG]  [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isLiteralValue(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  Token.VAR  &&  NodeUtil.isLiteralValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  Token.VAR  &&  NodeUtil.isLiteralValue(value))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1110	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isLiteralValue(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isLiteralValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isLiteralValue(value))  {	  switch(value.getType()    &&    NodeUtil.isLiteralValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1111	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1112	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1113	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1114	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1115	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1116	[BUG]  [BUGGY]  switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value.getNext()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value.getNext()))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value.getNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1117	[BUG]  [BUGGY]  Switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getType()  ||  NodeUtil.isVarDeclaration(value.getFirstChild()))  {	  Switch(value.getType()    ||    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1118	[BUG]  [BUGGY]  switch(value.getFirstChild().getType()  ||  locales.contains(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType()  ||  locales.contains(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType()  ||  locales.contains(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    ||    locals.contains(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1119	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1120	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1121	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1122	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1123	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.FUNCTION)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1124	[BUG]  [BUGGY]  switch(value.getType(),  Locals.DECEMBER,  false)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locals.DECEMBER,  false)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locals.DECEMBER,  false)  {	  switch(value.getType(),    locals,    false)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1125	[BUG]  [BUGGY]  switch(value.getType(),  Locals.VAR,  false)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType(),  Locals.VAR,  false)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType(),  Locals.VAR,  false)  {	  switch(value.getType(),    locals,    false)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1126	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isVarDeclaration(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isVarDeclaration(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.STRING  &&  NodeUtil.isVarDeclaration(value.getFirstChild()))  {	  switch(value.getType()    ==    Token.STRING    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
1127	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())  <  Node>  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())  <  Node>  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())  <  Node>  &&  NodeUtil.isAssignmentOp(value.getFirstChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isAssignmentOp(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1128	[BUG]  [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isAssignmentOp(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Node.ELEMENT  &&  NodeUtil.isAssignmentOp(value.getString()))  {	  switch(value.getType()    >    0    &&    NodeUtil.isAssignmentOp(value.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1129	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  if(value!=  null)  {  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getFirstChild();  if(value!=  null)  {  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  }  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  if(value!=  null)  {  return  evaluatesToLocalValue(value.getFirstChild(),  locals);  }	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getFirstChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1130	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1131	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CATCH  &&  NodeUtil.isAssignmentOp(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CATCH  &&  NodeUtil.isAssignmentOp(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CATCH  &&  NodeUtil.isAssignmentOp(value))  {	  switch(value.getType()    ==    Token.ASSIGN    &&    NodeUtil.isAssignmentOp(value))    {    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1132	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  if(value!=  null)  {  return  evaluatesToLocalValue(value.getLastChild(),  locals);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getFirstChild();  if(value!=  null)  {  return  evaluatesToLocalValue(value.getLastChild(),  locals);  }  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  if(value!=  null)  {  return  evaluatesToLocalValue(value.getLastChild(),  locals);  }	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1133	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  Locals.getLastChild(),  locals);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  Locals.getLastChild(),  locals);  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Node  value  =  locals.getFirstChild();  return  evaluatesToLocalValue(value,  Locals.getLastChild(),  locals);	  Node    value    =    locals.getFirstChild();    return    evaluatesToLocalValue(value.getLastChild(),    locals);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1134	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  &&  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1135	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.NAME  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.NAME  ||  locals.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1136	[BUG]  [BUGGY]  switch(value.getType()!=  locals  &&  value.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  locals  &&  value.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  locals  &&  value.isEmpty()  &&  value.getFirstChild().getType()  ==  Token.NAME)  {	  switch(value.getType()    ||    locals.isEmpty()    &&    value.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1137	[BUG]  [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1138	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1139	[BUG]  [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >>  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >>  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1140	[BUG]  [BUGGY]  switch(value.getType()  >=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  >=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  >=  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1141	[BUG]  [BUGGY]  switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  [Delete]  &&  NodeUtil.isAssignmentOp(value)||  evaluatesToLocalValue(value.getFirstChild(),  locals))  {	  switch(value.getType()    &&    NodeUtil.isAssignmentOp(value)||    evaluatesToLocalValue(value.getFirstChild(),    locals))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1142	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())&&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())&&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())&&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1143	[BUG]  [BUGGY]  switch(value.getFirstChild().getType())  <  Node>  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getFirstChild().getType())  <  Node>  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getFirstChild().getType())  <  Node>  &&  NodeUtil.isImmutableValue(value.getLastChild()))  {	  switch(value.getFirstChild().getType()    &&    NodeUtil.isImmutableValue(value.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1144	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isLocalValue(value))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1145	[BUG]  [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  <  Node>  &&  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  <  Node>  &&  NodeUtil.isLocalValue(value))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1146	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.isLocalValue(value))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1147	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLocalValue(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.VAR  ||  NodeUtil.isLocalValue(value))  {	  switch(value.getType()    &&    NodeUtil.isLocalValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1148	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.isLocalValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.isLocalValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.isLocalValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()!=    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1149	[BUG]  [BUGGY]  Switch(value.getFirstChild()  ||  locals.apply(value))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild()  ||  locals.apply(value))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild()  ||  locals.apply(value))  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1150	[BUG]  [BUGGY]  Switch(value.getFirstChild()).dependsOn(this,  value.getLastChild())  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild()).dependsOn(this,  value.getLastChild())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild()).dependsOn(this,  value.getLastChild())  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1151	[BUG]  [BUGGY]  Switch(value.getFirstChild().getNext())  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  Switch(value.getFirstChild().getNext())  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	Switch(value.getFirstChild().getNext())  {	  Switch(value.getFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1152	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLocalValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLocalValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.CALL  &&  NodeUtil.isLocalValue(value.getFirstChild())||  evaluatesToLocalValue(value.getLastChild(),  locals))  {	  switch(value.getType()    ==    Token.CALL    &&    NodeUtil.isLocalValue(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1153	[BUG]  [BUGGY]  switch(value.getType()!=  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()!=  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()!=  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1154	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.BLOCK  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1155	[BUG]  [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getType()  ==  Token.FUNCTION  &&  NodeUtil.mayHaveSideEffects(value.getFirstChild()))  {	  switch(value.getType()    &&    NodeUtil.mayHaveSideEffects(value.getFirstChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1156	[BUG]  [BUGGY]  switch(value.getLastChild().getType()  &&  NodeUtil.isVarDeclaration(value.getFirstChild()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild().getType()  &&  NodeUtil.isVarDeclaration(value.getFirstChild()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getType()  &&  NodeUtil.isVarDeclaration(value.getFirstChild()))  {	  switch(value.getLastChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1157	[BUG]  [BUGGY]  switch(value.getLastChild().getType()  ||  locals.contains(value.getString()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  boolean  evaluatesToLocalValue(Node  value,  Predicate<Node>  locals)  {      [BUGGY]  switch(value.getLastChild().getType()  ||  locals.contains(value.getString()))  {  [BUGGY]      case  Token.ASSIGN:    return  NodeUtil.isImmutableValue(value.getLastChild())  ||  (locals.apply(value)  &&  evaluatesToLocalValue(value.getLastChild(),  locals));  case  Token.COMMA:  return  evaluatesToLocalValue(value.getLastChild(),  locals);  case  Token.AND:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	switch(value.getLastChild().getType()  ||  locals.contains(value.getString()))  {	  switch(value.getLastChild().getType())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
