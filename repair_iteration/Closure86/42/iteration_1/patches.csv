bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
2	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getLastChild().getString().equals( "call "))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getLastChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getLastChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
3	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasChildren())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
4	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getLastChild().getString().equals( "call "))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getLastChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getLastChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
5	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getString().equals( "call "))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
6	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getString().equals( "call "))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
7	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "call "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild().getString().equals(   "call   "))    {    	non-compiled	[CE]  	13	None	replace
8	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "call "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild().getString().equals(   "call   "))    {    	non-compiled	[CE]  	13	None	replace
9	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call "))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild().getString().equals(   "call   "))    {    	non-compiled	[CE]  	13	None	replace
10	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "call "))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild().getString().equals(   "call   "))    {    	non-compiled	[CE]  	13	None	replace
11	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "call "))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild().getString().equals(   "call   "))    {    	non-compiled	[CE]  	13	None	replace
12	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "call "))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild().getString().equals(   "call   "))    {    	non-compiled	[CE]  	13	None	replace
13	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild()    &&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    name))    {    	non-compiled	[CE]  	3	None	replace
14	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild()    &&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    name))    {    	non-compiled	[CE]  	3	None	replace
15	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild()    &&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    name))    {    	non-compiled	[CE]  	3	None	replace
16	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild()    &&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    name))    {    	non-compiled	[CE]  	3	None	replace
17	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild()    &&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    name))    {    	non-compiled	[CE]  	3	None	replace
18	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasFirstChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasFirstChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasFirstChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild()    &&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    name))    {    	non-compiled	[CE]  	3	None	replace
19	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	1	None	replace
20	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	1	None	replace
21	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	1	None	replace
22	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	1	None	replace
23	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	2	None	replace
24	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	2	None	replace
25	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	2	None	replace
26	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	2	None	replace
27	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren())  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	8	None	replace
28	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	8	None	replace
29	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  ||  nameNode.hasChildren())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  ||  nameNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  ||  nameNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	8	None	replace
30	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().hasChildren())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	8	None	replace
31	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasChildren())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	8	None	replace
32	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasChildren())    {    	non-compiled	[CE]  	4	None	replace
33	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasChildren())    {    	non-compiled	[CE]  	4	None	replace
34	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().hasChildren())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasChildren())    {    	non-compiled	[CE]  	4	None	replace
35	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild()!=  null)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild()!=  null)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild()!=  null)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	11	None	replace
36	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild()!=  null)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild()!=  null)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild()!=  null)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	11	None	replace
37	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild()!=  null)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild()!=  null)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild()!=  null)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	11	None	replace
38	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	11	None	replace
39	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild()!=  null)  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild()!=  null)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild()!=  null)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	11	None	replace
40	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild()!=  null)  {  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild()!=  null)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild()!=  null)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	11	None	replace
41	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  	9	None	replace
42	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  	9	None	replace
43	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasFirstChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasFirstChild())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasFirstChild())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  	9	None	replace
44	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  	9	None	replace
45	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	6	None	replace
46	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	6	None	replace
47	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	6	None	replace
48	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	6	None	replace
49	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	6	None	replace
50	[BUG]  [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(name.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	6	None	replace
51	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasFirstChild())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasFirstChild())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasFirstChild())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.hasOneChild())    {    	non-compiled	[CE]  	10	None	replace
52	[BUG]  [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {	  }    else    if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))    {    	non-compiled	[CE]  	12	None	replace
53	[BUG]  [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {	  }    else    if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))    {    	non-compiled	[CE]  	12	None	replace
54	[BUG]  [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString	  }    else    if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))    {    	non-compiled	[CE]  	12	None	replace
55	[BUG]  [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString	  }    else    if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))    {    	non-compiled	[CE]  	12	None	replace
56	[BUG]  [BUGGY]  Node  callNode  =  nameNode.getFirstChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  Node  callNode  =  nameNode.getFirstChild();  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	Node  callNode  =  nameNode.getFirstChild();	      	non-compiled	[CE]  	7	None	replace
57	[BUG]  [BUGGY]  Node  callNode  =  callNode.getFirstChild();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  Node  callNode  =  callNode.getFirstChild();  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	Node  callNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  	7	None	replace
58	[BUG]  [BUGGY]  Node  callNode  =  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.get(name);  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  Node  callNode  =  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.get(name);  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	Node  callNode  =  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.get(name);	      	non-compiled	[CE]  	7	None	replace
59	[BUG]  [BUGGY]  Node  callNode  =  callNode.getLastChild();  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  Node  callNode  =  callNode.getLastChild();  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	Node  callNode  =  callNode.getLastChild();	      	non-compiled	[CE]  	7	None	replace
60	[BUG]  [BUGGY]  Node  callNode  =  param.getFirstChild();  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  Node  callNode  =  param.getFirstChild();  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	Node  callNode  =  param.getFirstChild();	      	non-compiled	[CE]  	7	None	replace
61	[BUG]  [BUGGY]  Node  callNode  =  nameNode.getLastChild();  [CE]  [FE]                              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  Node  callNode  =  nameNode.getLastChild();  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	Node  callNode  =  nameNode.getLastChild();	      	non-compiled	[CE]  	7	None	replace
62	[BUG]  [BUGGY]  Node  callNode  =  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.getFirstChild();  [CE]  [FE]                                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  Node  callNode  =  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.getFirstChild();  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	Node  callNode  =  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.getFirstChild();	      	non-compiled	[CE]  	7	None	replace
63	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call ")||  nameNode.getFirstChild().getString().equals( "call "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call ")||  nameNode.getFirstChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call ")||  nameNode.getFirstChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild().getString().equals(   "call   "))    {    	non-compiled	[CE]  	13	None	replace
64	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	2	None	replace
65	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren()  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren()  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren()  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	1	None	replace
66	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()  ==  null)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()  ==  null)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()  ==  null)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	11	None	replace
67	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasNext())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasNext())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasNext())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.hasOneChild())    {    	non-compiled	[CE]  	10	None	replace
68	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  ||  nameNode.hasOneChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  ||  nameNode.hasOneChild())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  ||  nameNode.hasOneChild())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.hasOneChild())    {    	non-compiled	[CE]  	10	None	replace
69	[BUG]  [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild()  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild()  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild()	  }    else    if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))    {    	non-compiled	[CE]  	12	None	replace
70	[BUG]  [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()	  }    else    if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))    {    	non-compiled	[CE]  	12	None	replace
71	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  ||  callNode.hasChildren())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  ||  callNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  ||  callNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasChildren())    {    	non-compiled	[CE]  	4	None	replace
72	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyChildren())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasChildren())    {    	non-compiled	[CE]  	4	None	replace
73	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETELEM  &&  callNode.hasChildren())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETELEM  &&  callNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETELEM  &&  callNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasChildren())    {    	non-compiled	[CE]  	4	None	replace
74	[BUG]  [BUGGY]  Node  callNode  =  param.getLastChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  Node  callNode  =  param.getLastChild();  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	Node  callNode  =  param.getLastChild();	      	non-compiled	[CE]  	7	None	replace
75	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  REGEXP_METHODS.contains(name))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  REGEXP_METHODS.contains(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  REGEXP_METHODS.contains(name))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild()    &&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    name))    {    	non-compiled	[CE]  	3	None	replace
76	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild()    &&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    name))    {    	non-compiled	[CE]  	3	None	replace
77	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
78	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
79	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall())  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
80	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  JSC_PROPERTY_NAME.equals(name))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  JSC_PROPERTY_NAME.equals(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  JSC_PROPERTY_NAME.equals(name))  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
81	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild()!=  null)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild()!=  null)  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
82	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
83	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETELEM  &&  nameNode.hasChildren())  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETELEM  &&  nameNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETELEM  &&  nameNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	8	None	replace
84	[BUG]  [BUGGY]  }  else  if(nameNode.getType()!=  Token.GETPROP  &&  nameNode.hasChildren())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()!=  Token.GETPROP  &&  nameNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()!=  Token.GETPROP  &&  nameNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	8	None	replace
85	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	6	None	replace
86	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	6	None	replace
87	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getString().endsWith( "_ "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getString().endsWith( "_ "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getString().endsWith( "_ "))  {	  }    else    if(nameNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	14	None	replace
88	[BUG]  [BUGGY]  }  else  if(type  ==  Token.NAME  &&!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(  name))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(type  ==  Token.NAME  &&!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(  name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(type  ==  Token.NAME  &&!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(  name))  {	  }    else    if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))    {    	non-compiled	[CE]  	12	None	replace
89	[BUG]  [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getStr  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getStr  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getStr	  }    else    if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))    {    	non-compiled	[CE]  	12	None	replace
90	[BUG]  [BUGGY]  }  else  if(callNode.getFirstChild().getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getFirstChild().getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getFirstChild().getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	6	None	replace
91	[BUG]  [BUGGY]  }  else  if(nameNode.getType()!=  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()!=  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()!=  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	5	None	replace
92	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getLastChild().getString().equals( "call "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getLastChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getLastChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild().getString().equals(   "call   "))    {    	non-compiled	[CE]  	13	None	replace
93	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild().getString().equals(   "call   "))    {    	non-compiled	[CE]  	13	None	replace
94	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild()    &&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    name))    {    	non-compiled	[CE]  	3	None	replace
95	[BUG]  [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasOneChild()    &&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    name))    {    	non-compiled	[CE]  	3	None	replace
96	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	11	None	replace
97	[BUG]  [BUGGY]  }  else  if(nameNode.getType()!=  Token.GETPROP  &&  callNode.hasChildren())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }    [BUGGY]  }  else  if(nameNode.getType()!=  Token.GETPROP  &&  callNode.hasChildren())  {  [BUGGY]    if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()!=  Token.GETPROP  &&  callNode.hasChildren())  {	  }    else    if(nameNode.getType()    ==    Token.GETPROP    &&    callNode.hasChildren())    {    	non-compiled	[CE]  	4	None	replace
