bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
2	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]      AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getLastChild().getString().equals( "prototype "))  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
3	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  name))  {  [CE]  [FE]        AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  name))  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  name))  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
4	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren())  {  [CE]  [FE]          AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren())  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren())  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
5	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]            AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
6	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
7	[BUG]  [BUGGY]    [CE]  [FE]                AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]    [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	  	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
8	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren())  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren())  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren())  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
9	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild())  {  [CE]  [FE]      AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild())  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.hasOneChild())  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
10	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild())  {  [CE]  [FE]        AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild())  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.hasOneChild())  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
11	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null)  {  [CE]  [FE]          AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null)  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
12	[BUG]  [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  [CE]  [FE]            AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(!BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
13	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call "))  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call "))  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "call "))  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
14	[BUG]  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL)  {  [CE]  [FE]      AssertionFailedError  [CONTEXT]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME)  {  String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  [BUGGY]  }  else  if(nameNode.getType()  ==  Token.CALL)  {  [BUGGY]  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	}  else  if(nameNode.getType()  ==  Token.CALL)  {	}  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  	non-compiled	[CE]  	83	None	replace
