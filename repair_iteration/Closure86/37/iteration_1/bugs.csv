bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals( "Math "))  {  return  false;  }  }  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  }  else  if  (nameNode.getFirstChild().getType()  ==  Token.STRING  &&  STRING_REGEXP_METHODS.contains(  nameNode.getLastChild().getString()))  {  Node  param  =  nameNode.getNext();  if  (param  !=  null  &&  (param.getType()  ==  Token.STRING  ||  param.getType()  ==  Token.REGEXP))  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {	if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  	non-compiled	[CE]  	73	None	replace
2	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  compiler!=  null  &&  compiler.hasRegExpGlobalReferences())  {  [CE]  [FE]      AssertionFailedError  [CONTEXT]  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals( "Math "))  {  return  false;  }  }  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  compiler!=  null  &&  compiler.hasRegExpGlobalReferences())  {  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  }  else  if  (nameNode.getFirstChild().getType()  ==  Token.STRING  &&  STRING_REGEXP_METHODS.contains(  nameNode.getLastChild().getString()))  {  Node  param  =  nameNode.getNext();  if  (param  !=  null  &&  (param.getType()  ==  Token.STRING  ||  param.getType()  ==  Token.REGEXP))  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  compiler!=  null  &&  compiler.hasRegExpGlobalReferences())  {	if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  	non-compiled	[CE]  	73	None	replace
3	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.hasRegExpGlobalReferences())  {  [CE]  [FE]        AssertionFailedError  [CONTEXT]  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals( "Math "))  {  return  false;  }  }  [BUGGY]  if(compiler!=  null  &&  compiler.hasRegExpGlobalReferences())  {  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  }  else  if  (nameNode.getFirstChild().getType()  ==  Token.STRING  &&  STRING_REGEXP_METHODS.contains(  nameNode.getLastChild().getString()))  {  Node  param  =  nameNode.getNext();  if  (param  !=  null  &&  (param.getType()  ==  Token.STRING  ||  param.getType()  ==  Token.REGEXP))  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	replace	if(compiler!=  null  &&  compiler.hasRegExpGlobalReferences())  {	if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  	non-compiled	[CE]  	73	None	replace
4	[BUG]  [BUGGY]    [CE]  [FE]          AssertionFailedError  [CONTEXT]  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals( "Math "))  {  return  false;  }  }  [BUGGY]    [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  }  else  if  (nameNode.getFirstChild().getType()  ==  Token.STRING  &&  STRING_REGEXP_METHODS.contains(  nameNode.getLastChild().getString()))  {  Node  param  =  nameNode.getNext();  if  (param  !=  null  &&  (param.getType()  ==  Token.STRING  ||  param.getType()  ==  Token.REGEXP))  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	replace	  	if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  	non-compiled	[CE]  	73	None	replace
5	[BUG]  [BUGGY]  if(compiler  ==  null  &&!compiler.hasRegExpGlobalReferences())  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals( "Math "))  {  return  false;  }  }  [BUGGY]  if(compiler  ==  null  &&!compiler.hasRegExpGlobalReferences())  {  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  }  else  if  (nameNode.getFirstChild().getType()  ==  Token.STRING  &&  STRING_REGEXP_METHODS.contains(  nameNode.getLastChild().getString()))  {  Node  param  =  nameNode.getNext();  if  (param  !=  null  &&  (param.getType()  ==  Token.STRING  ||  param.getType()  ==  Token.REGEXP))  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	replace	if(compiler  ==  null  &&!compiler.hasRegExpGlobalReferences())  {	if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  	non-compiled	[CE]  	73	None	replace
6	[BUG]  [BUGGY]  if(compiler  ==  null  &&  compiler.hasRegExpGlobalReferences())  {  [CE]  [FE]      AssertionFailedError  [CONTEXT]  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals( "Math "))  {  return  false;  }  }  [BUGGY]  if(compiler  ==  null  &&  compiler.hasRegExpGlobalReferences())  {  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  }  else  if  (nameNode.getFirstChild().getType()  ==  Token.STRING  &&  STRING_REGEXP_METHODS.contains(  nameNode.getLastChild().getString()))  {  Node  param  =  nameNode.getNext();  if  (param  !=  null  &&  (param.getType()  ==  Token.STRING  ||  param.getType()  ==  Token.REGEXP))  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	replace	if(compiler  ==  null  &&  compiler.hasRegExpGlobalReferences())  {	if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  	non-compiled	[CE]  	73	None	replace
7	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.hasGlobalReferences())  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals( "Math "))  {  return  false;  }  }  [BUGGY]  if(compiler!=  null  &&  compiler.hasGlobalReferences())  {  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  }  else  if  (nameNode.getFirstChild().getType()  ==  Token.STRING  &&  STRING_REGEXP_METHODS.contains(  nameNode.getLastChild().getString()))  {  Node  param  =  nameNode.getNext();  if  (param  !=  null  &&  (param.getType()  ==  Token.STRING  ||  param.getType()  ==  Token.REGEXP))  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	replace	if(compiler!=  null  &&  compiler.hasGlobalReferences())  {	if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  	non-compiled	[CE]  	73	None	replace
8	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.hasRegexpGlobalReferences())  {  [CE]  [FE]      AssertionFailedError  [CONTEXT]  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals( "Math "))  {  return  false;  }  }  [BUGGY]  if(compiler!=  null  &&  compiler.hasRegexpGlobalReferences())  {  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  }  else  if  (nameNode.getFirstChild().getType()  ==  Token.STRING  &&  STRING_REGEXP_METHODS.contains(  nameNode.getLastChild().getString()))  {  Node  param  =  nameNode.getNext();  if  (param  !=  null  &&  (param.getType()  ==  Token.STRING  ||  param.getType()  ==  Token.REGEXP))  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	replace	if(compiler!=  null  &&  compiler.hasRegexpGlobalReferences())  {	if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  	non-compiled	[CE]  	73	None	replace
9	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.hasReferences())  {  [CE]  [FE]        AssertionFailedError  [CONTEXT]  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals( "Math "))  {  return  false;  }  }  [BUGGY]  if(compiler!=  null  &&  compiler.hasReferences())  {  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  }  else  if  (nameNode.getFirstChild().getType()  ==  Token.STRING  &&  STRING_REGEXP_METHODS.contains(  nameNode.getLastChild().getString()))  {  Node  param  =  nameNode.getNext();  if  (param  !=  null  &&  (param.getType()  ==  Token.STRING  ||  param.getType()  ==  Token.REGEXP))  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	replace	if(compiler!=  null  &&  compiler.hasReferences())  {	if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  	non-compiled	[CE]  	73	None	replace
