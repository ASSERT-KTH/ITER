bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	12	None	replace
2	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	12	None	replace
3	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	12	None	replace
4	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.FUNCTION  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	12	None	replace
5	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  return  false;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  return  false;  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    return    false;    	non-compiled	[CE]  	19	None	replace
6	[BUG]  [BUGGY]  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  return  false;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  return  false;  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	CONSTRUCTORS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    return    false;    	non-compiled	[CE]  	19	None	replace
7	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  nameNode))  {  return  false;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  nameNode))  {  return  false;  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  nameNode))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    return    false;    	non-compiled	[CE]  	19	None	replace
8	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getString());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getString());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getString());	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	15	None	replace
9	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  +  1);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  +  1);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  +  1);	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	15	None	replace
10	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  + ": ");  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  + ": ");  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  + ": ");	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	15	None	replace
11	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild());  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild());	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	15	None	replace
12	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()));  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()));  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()));	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	15	None	replace
13	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  callNode);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  callNode);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  callNode);	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),    nameNode);    	non-compiled	[CE]  	10	None	replace
14	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  name);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  name);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  name);	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),    nameNode);    	non-compiled	[CE]  	10	None	replace
15	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  JSC_PROPERTY_NAME_FN);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  JSC_PROPERTY_NAME_FN);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  JSC_PROPERTY_NAME_FN);	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),    nameNode);    	non-compiled	[CE]  	10	None	replace
16	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  name));  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  name));  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  name));	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),    nameNode);    	non-compiled	[CE]  	10	None	replace
17	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getFirstChild(),  nameNode);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getFirstChild(),  nameNode);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getFirstChild(),  nameNode);	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),    nameNode);    	non-compiled	[CE]  	10	None	replace
18	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  name)  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  name)  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  name)	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),    nameNode);    	non-compiled	[CE]  	10	None	replace
19	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	22	None	replace
20	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.NAME  ||  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	22	None	replace
21	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.NAME  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	22	None	replace
22	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.NAME  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.NAME  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.NAME  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	22	None	replace
23	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.FUNCTION  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	22	None	replace
24	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	22	None	replace
25	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getString());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getString());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getString());	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	5	None	replace
26	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  +  1);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  +  1);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  +  1);	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	5	None	replace
27	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild());  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild());	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	5	None	replace
28	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  + ": ");  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  + ": ");  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()  + ": ");	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	5	None	replace
29	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString(),  callNode);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString(),  callNode);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString(),  callNode);	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	5	None	replace
30	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()));  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()));  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()));	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	5	None	replace
31	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  new  MatchShallowStatement());  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  new  MatchShallowStatement());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  callNode,  new  MatchShallowStatement());	  NodeTraversal.traverse(compiler,    nameNode,    new    MatchShallowStatement());    	non-compiled	[CE]  	16	None	replace
32	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  callNode);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  callNode);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  callNode);	  NodeTraversal.traverse(compiler,    nameNode,    new    MatchShallowStatement());    	non-compiled	[CE]  	16	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS,  new  MatchShallowStatement());  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS,  new  MatchShallowStatement());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS,  new  MatchShallowStatement());	  NodeTraversal.traverse(compiler,    nameNode,    new    MatchShallowStatement());    	non-compiled	[CE]  	16	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  OBJECT_FUNCTIONS_WITHOUT_SIDEEFFECTS,  new  MatchShallowStatement());  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  OBJECT_FUNCTIONS_WITHOUT_SIDEEFFECTS,  new  MatchShallowStatement());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  OBJECT_FUNCTIONS_WITHOUT_SIDEEFFECTS,  new  MatchShallowStatement());	  NodeTraversal.traverse(compiler,    nameNode,    new    MatchShallowStatement());    	non-compiled	[CE]  	16	None	replace
35	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  callNode,  new  MatchShallowStatement());  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  callNode,  new  MatchShallowStatement());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  callNode,  new  MatchShallowStatement());	  NodeTraversal.traverse(compiler,    nameNode,    new    MatchShallowStatement());    	non-compiled	[CE]  	16	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  JSC_PROPERTY_NAME_FN);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  JSC_PROPERTY_NAME_FN);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  JSC_PROPERTY_NAME_FN);	  NodeTraversal.traverse(compiler,    nameNode,    new    MatchShallowStatement());    	non-compiled	[CE]  	16	None	replace
37	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||    nameNode.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	17	None	replace
38	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||    nameNode.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	17	None	replace
39	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()  ==  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||    nameNode.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	17	None	replace
40	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.NAME  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||    nameNode.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	17	None	replace
41	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||    nameNode.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	17	None	replace
42	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  callNode.getLastChild();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  callNode.getLastChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  callNode.getLastChild();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    callNode.getFirstChild();    	non-compiled	[CE]  	20	None	replace
43	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getNext();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getNext();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getNext();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    callNode.getFirstChild();    	non-compiled	[CE]  	20	None	replace
44	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getString();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getString();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getString();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    callNode.getFirstChild();    	non-compiled	[CE]  	20	None	replace
45	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getType();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getType();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getType();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    callNode.getFirstChild();    	non-compiled	[CE]  	20	None	replace
46	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.NAME    &&    ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	2	None	replace
47	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.NAME  ||  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.NAME    &&    ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	2	None	replace
48	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(callNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(callNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if  (nameNode.getType()  ==  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(callNode.getString()))  {	  if    (nameNode.getType()    ==    Token.NAME    ||    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	3	None	replace
49	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
50	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
51	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
52	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
53	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.ASSIGN  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
54	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
55	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	18	None	replace
56	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	18	None	replace
57	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.ASSIGN  &&  ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	18	None	replace
58	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  conSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  conSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  conSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	18	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  callNode,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);	  NodeTraversal.traverse(compiler,    nameNode,    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);    	non-compiled	[CE]  	7	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  CONSTRUCTORS_WITHOUT_SIDEEFFECTS);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  CONSTRUCTORS_WITHOUT_SIDEEFFECTS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  CONSTRUCTORS_WITHOUT_SIDEEFFECTS);	  NodeTraversal.traverse(compiler,    nameNode,    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);    	non-compiled	[CE]  	7	None	replace
61	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS,  nameNode);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS,  nameNode);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS,  nameNode);	  NodeTraversal.traverse(compiler,    nameNode,    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);    	non-compiled	[CE]  	7	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS);	  NodeTraversal.traverse(compiler,    nameNode,    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);    	non-compiled	[CE]  	7	None	replace
63	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS,  callNode);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS,  callNode);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS,  callNode);	  NodeTraversal.traverse(compiler,    nameNode,    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);    	non-compiled	[CE]  	7	None	replace
64	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  REGEXP_METHODS);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  REGEXP_METHODS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  REGEXP_METHODS);	  NodeTraversal.traverse(compiler,    nameNode,    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);    	non-compiled	[CE]  	7	None	replace
65	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS,  nameNode);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS,  nameNode);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS,  nameNode);	  NodeTraversal.traverse(compiler,    nameNode,    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);    	non-compiled	[CE]  	7	None	replace
66	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	1	None	replace
67	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()    ==    Token.NAME    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||    nameNode.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	14	None	replace
68	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  callNode.getNext();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  callNode.getNext();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  callNode.getNext();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    nameNode.getFirstChild();    	non-compiled	[CE]  	6	None	replace
69	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getType()  ==  Token.NAME?  nameNode.getLastChild()  :  nameNode.getLastChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getType()  ==  Token.NAME?  nameNode.getLastChild()  :  nameNode.getLastChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getType()  ==  Token.NAME?  nameNode.getLastChild()  :  nameNode.getLastChild();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    nameNode.getFirstChild();    	non-compiled	[CE]  	6	None	replace
70	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  ||  nameNode.getLastChild().getString().equals( " "));  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  ||  nameNode.getLastChild().getString().equals( " "));  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  ||  nameNode.getLastChild().getString().equals( " "));	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    nameNode.getLastChild();    	non-compiled	[CE]  	11	None	replace
71	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  ||  nameNode.getLastChild().getString().equals( " "))  {  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  ||  nameNode.getLastChild().getString().equals( " "))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  ||  nameNode.getLastChild().getString().equals( " "))  {	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    nameNode.getLastChild();    	non-compiled	[CE]  	11	None	replace
72	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  nameNode  =  callNode.getFirstChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
73	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getNext();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.getNext();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  nameNode  =  callNode.getNext();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
74	[BUG]  [BUGGY]  Node  nameNode  =  callNode.removeFirstChild();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.removeFirstChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  nameNode  =  callNode.removeFirstChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
75	[BUG]  [BUGGY]  Node  nameNode  =  node.getFirstChild();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  node.getFirstChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  nameNode  =  node.getFirstChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
76	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getLastChild()  +  1;  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.getLastChild()  +  1;  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  nameNode  =  callNode.getLastChild()  +  1;	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
77	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  this);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  this);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  callNode,  this);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
78	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  callNode);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  callNode);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  this,  callNode);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
79	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  REGEXP_METHODS);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  REGEXP_METHODS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  this,  REGEXP_METHODS);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
80	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  this,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
81	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  OBJECT_METHODS);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  OBJECT_METHODS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  this,  OBJECT_METHODS);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
82	[BUG]  [BUGGY]  ConstructorTraversal.traverse(compiler,  callNode,  this);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  ConstructorTraversal.traverse(compiler,  callNode,  this);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	ConstructorTraversal.traverse(compiler,  callNode,  this);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
83	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  OBJECT_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  OBJECT_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  this,  OBJECT_FUNCTIONS_WITHOUT_SIDEEFFECTS);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
84	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild());	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	15	None	replace
85	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.toString());  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.toString());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.toString());	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	15	None	replace
86	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString())  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString())  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString())	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	15	None	replace
87	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getQualifiedName());  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getQualifiedName());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getQualifiedName());	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	15	None	replace
88	[BUG]  [BUGGY]  Node  nameNode  =  nameNode.getFirstChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  nameNode.getFirstChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  nameNode  =  nameNode.getFirstChild();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),    nameNode);    	non-compiled	[CE]  	10	None	replace
89	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  REGEXP_METHODS);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  REGEXP_METHODS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  REGEXP_METHODS);	  NodeTraversal.traverse(compiler,    nameNode,    new    MatchShallowStatement());    	non-compiled	[CE]  	16	None	replace
90	[BUG]  [BUGGY]  Node  nameNode  =  vars.getFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  vars.getFirstChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  nameNode  =  vars.getFirstChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
91	[BUG]  [BUGGY]  Node  nameNode  =  callNode.nextChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.nextChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  nameNode  =  callNode.nextChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
92	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild());	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	5	None	replace
93	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.toString());  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.toString());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.toString());	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	5	None	replace
94	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  JSC_PROPERTY_NAME_FN);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  JSC_PROPERTY_NAME_FN);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  JSC_PROPERTY_NAME_FN);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
95	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString())||  nameNode.getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	22	None	replace
96	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.removeFirstChild();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.removeFirstChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.removeFirstChild();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    nameNode.getFirstChild();    	non-compiled	[CE]  	6	None	replace
97	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getParent();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getParent();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.getParent();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    nameNode.getFirstChild();    	non-compiled	[CE]  	6	None	replace
98	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	18	None	replace
99	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	18	None	replace
100	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.NAME  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.NAME    &&    ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	13	None	replace
101	[BUG]  [BUGGY]  if(nameNode.getType()  >=  Token.NAME  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  >=  Token.NAME  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  >=  Token.NAME  &&  ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.NAME    &&    ConSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	13	None	replace
102	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
103	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.STRING  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
104	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.ASSIGN  &&  conSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
105	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.remove(nameNode.getString()))  {  return  false;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.remove(nameNode.getString()))  {  return  false;  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.remove(nameNode.getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    return    false;    	non-compiled	[CE]  	19	None	replace
106	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.addAll(nameNode.getString()))  {  return  false;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.addAll(nameNode.getString()))  {  return  false;  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.addAll(nameNode.getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    return    false;    	non-compiled	[CE]  	19	None	replace
107	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  return  false;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  return  false;  }  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  return  false;  }	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    return    false;    	non-compiled	[CE]  	19	None	replace
108	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  ||  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  ||  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.ASSIGN  ||  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	18	None	replace
109	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.VAR  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.VAR  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.VAR  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	18	None	replace
110	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);	  NodeTraversal.traverse(compiler,    nameNode,    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);    	non-compiled	[CE]  	7	None	replace
111	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  n,  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);	  NodeTraversal.traverse(compiler,    nameNode,    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);    	non-compiled	[CE]  	7	None	replace
112	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  INVALID_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  INVALID_FUNCTIONS_WITHOUT_SIDEEFFECTS);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  INVALID_FUNCTIONS_WITHOUT_SIDEEFFECTS);	  NodeTraversal.traverse(compiler,    nameNode,    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);    	non-compiled	[CE]  	7	None	replace
113	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.cloneTree();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.cloneTree();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  nameNode.cloneTree();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    nameNode.getLastChild();    	non-compiled	[CE]  	11	None	replace
114	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  namesNode.getFirstChild();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  namesNode.getFirstChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  =  namesNode.getFirstChild();	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    =    nameNode.getLastChild();    	non-compiled	[CE]  	11	None	replace
115	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if  (nameNode.getType()!=  Token.NAME  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()))  {	  if    (nameNode.getType()!=    Token.NAME    ||    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	4	None	replace
116	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString()))  {	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    return    false;    	non-compiled	[CE]  	19	None	replace
117	[BUG]  [BUGGY]  Node  nameNode  =  callNode.cloneTree();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.cloneTree();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  nameNode  =  callNode.cloneTree();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
118	[BUG]  [BUGGY]  Node  nameNode  =  this.callNode.getFirstChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  this.callNode.getFirstChild();  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  nameNode  =  this.callNode.getFirstChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
119	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  this);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  this);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  new  MatchShallowStatement(),  this);	  NodeTraversal.traverse(compiler,    nameNode,    new    MatchShallowStatement());    	non-compiled	[CE]  	16	None	replace
120	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  MatchShallowStatement(),  callNode);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  new  MatchShallowStatement(),  callNode);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  new  MatchShallowStatement(),  callNode);	  NodeTraversal.traverse(compiler,    nameNode,    new    MatchShallowStatement());    	non-compiled	[CE]  	16	None	replace
121	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  this);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  this);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  this);	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),    nameNode);    	non-compiled	[CE]  	10	None	replace
122	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  nameToken);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  nameToken);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  nameToken);	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),    nameNode);    	non-compiled	[CE]  	10	None	replace
123	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  nameDecl);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  nameDecl);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),  nameDecl);	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.put(nameNode.getString(),    nameNode);    	non-compiled	[CE]  	10	None	replace
124	[BUG]  [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getQualifiedName());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getQualifiedName());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	Node  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getQualifiedName());	  Node    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	5	None	replace
125	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  define);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  define);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  this,  define);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
126	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  definer);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  definer);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  this,  definer);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
127	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  defines);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NodeTraversal.traverse(compiler,  nameNode,  this,  defines);  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	NodeTraversal.traverse(compiler,  nameNode,  this,  defines);	  NodeTraversal.traverse(compiler,    nameNode,    this);    	non-compiled	[CE]  	8	None	replace
128	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.ASSIGN  ||  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
129	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.VAR  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.VAR  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.VAR  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
130	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()!=  Token.ASSIGN  &&  CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()))  {	  if(nameNode.getType()!=    Token.ASSIGN    &&    CONSTRUCTORS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	21	None	replace
131	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getNext());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getNext());  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getNext());	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());    	non-compiled	[CE]  	15	None	replace
132	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	22	None	replace
133	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.VAR  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(       "Expected  NEW  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.VAR  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {  [BUGGY]      CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	if(nameNode.getType()  ==  Token.VAR  &&  ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    ConstructorStatement.WITHOUT_SIDEEFFECTS.contains(nameNode.getString()))    {    	non-compiled	[CE]  	22	None	replace
